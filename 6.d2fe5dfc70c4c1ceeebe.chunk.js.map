{"version":3,"sources":["webpack:///./src/components/codeInputField.ts","webpack:///./src/components/popups/index.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/lib/cropper.ts","webpack:///./src/components/popups/avatar.ts","webpack:///./src/components/monkeys/tracking.ts"],"names":["CodeInputField","options","super","plainText","input","this","type","setAttribute","autocomplete","lastLength","addEventListener","e","classList","remove","setLabel","value","replace","slice","length","setValueSilently","onFill","PopupElement","className","buttons","element","document","createElement","container","header","title","onEscape","hide","back","destroy","onClose","add","btnClose","removeEventListener","overlayIsActive","removeItem","navigationItem","undefined","setTimeout","onCloseAfterTimeout","checkAnimations","append","closable","prepend","once","overlayClosable","onOverlayClick","target","withConfirm","btnConfirm","body","buttonsDiv","buttonsElements","map","b","button","isDanger","text","innerHTML","langKey","langArgs","callback","isCancel","onPop","pushItem","offsetWidth","addCancelButton","find","push","passwordManager","invokeApi","then","result","settings","getState","state","currentHashPromise","newHashPromise","params","password","new_settings","_","hint","email","currentPassword","computeSRP","Promise","resolve","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","all","hashes","new_password_hash","inputCheckPassword","auth","saveApiUser","user","setUserAuth","id","code","PasswordInputField","passwordVisible","onVisibilityClick","toggleVisible","toggle","onVisibilityClickAdditional","stealthy","tabIndex","parentElement","insertBefore","cloneNode","nextSibling","PasswordMonkey","passwordInputField","size","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","width","height","noCache","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","originalImage","canvas","cropComponent","cropImage","event_state","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","init","draggable","Image","src","overlayColor","appendChild","parentNode","style","maxWidth","naturalWidth","left","CROPWIDTH","top","offsetHeight","CROPHEIGHT","updateCropSize","updateCropImage","updateContainer","startMoving","resizing","keyHandler","imgZoom","zoom","Math","PI","right","bottom","newWidth","floor","clientWidth","newHeight","clientHeight","w","h","offsetLeft","offsetTop","preventDefault","String","fromCharCode","charCode","deltaY","stopPropagation","container_width","container_height","container_left","container_top","mouse_x","clientX","pageX","touches","window","scrollX","mouse_y","clientY","pageY","scrollY","saveEventState","moving","endMoving","currentTouch","x","y","complete","onload","crop","getContext","drawImage","removeHandlers","image","cropper","h6","cropContainer","display","file","files","reader","FileReader","contents","show","readAsDataURL","btnSubmit","ripple","click","toBlob","blob","darkenCanvas","onCrop","appDownloadManager","upload","postCanvas","ctx","fillStyle","fillRect","TrackingMonkey","inputField","max","playAnimation","frame","min","round","idleAnimation","stop"],"mappings":"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","file":"6.d2fe5dfc70c4c1ceeebe.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class CodeInputField extends InputField {\r\n  constructor(options: InputFieldOptions & {\r\n    length: number,\r\n    onFill: (code: number) => void\r\n  }) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'tel';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n\r\n    let lastLength = 0;\r\n    this.input.addEventListener('input', (e) => {\r\n      this.input.classList.remove('error');\r\n      this.setLabel();\r\n  \r\n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\r\n      this.setValueSilently(value);\r\n  \r\n      const length = this.value.length;\r\n      if(length === options.length) { // submit code\r\n        options.onFill(+this.value);\r\n      } else if(length === lastLength) {\r\n        return;\r\n      }\r\n  \r\n      lastLength = length;\r\n    });\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../../lib/rootScope\";\r\nimport { ripple } from \"../ripple\";\r\nimport animationIntersector from \"../animationIntersector\";\r\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\r\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\r\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\r\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\r\n\r\nexport type PopupButton = {\r\n  text?: string,\r\n  callback?: () => void,\r\n  langKey?: LangPackKey,\r\n  langArgs?: any[],\r\n  isDanger?: true,\r\n  isCancel?: true\r\n};\r\n\r\nexport type PopupOptions = Partial<{\r\n  closable: true, \r\n  overlayClosable: true, \r\n  withConfirm: LangPackKey | true, \r\n  body: true\r\n}>;\r\n\r\nexport default class PopupElement {\r\n  protected element = document.createElement('div');\r\n  protected container = document.createElement('div');\r\n  protected header = document.createElement('div');\r\n  protected title = document.createElement('div');\r\n  protected btnClose: HTMLElement;\r\n  protected btnConfirm: HTMLElement;\r\n  protected body: HTMLElement;\r\n\r\n  protected onClose: () => void;\r\n  protected onCloseAfterTimeout: () => void;\r\n  protected onEscape: () => boolean = () => true;\r\n\r\n  protected navigationItem: NavigationItem;\r\n\r\n  constructor(className: string, buttons?: Array<PopupButton>, options: PopupOptions = {}) {\r\n    this.element.classList.add('popup');\r\n    this.element.className = 'popup' + (className ? ' ' + className : '');\r\n    this.container.classList.add('popup-container', 'z-depth-1');\r\n\r\n    this.header.classList.add('popup-header');\r\n    this.title.classList.add('popup-title');\r\n\r\n    this.header.append(this.title);\r\n\r\n    if(options.closable) {\r\n      this.btnClose = document.createElement('span');\r\n      this.btnClose.classList.add('btn-icon', 'popup-close', 'tgico-close');\r\n      //ripple(this.closeBtn);\r\n      this.header.prepend(this.btnClose);\r\n\r\n      this.btnClose.addEventListener('click', this.hide, {once: true});\r\n    }\r\n\r\n    if(options.overlayClosable) {\r\n      const onOverlayClick = (e: MouseEvent) => {\r\n        if(!findUpClassName(e.target, 'popup-container')) {\r\n          this.hide();\r\n          this.element.removeEventListener('click', onOverlayClick);\r\n        }\r\n      };\r\n  \r\n      this.element.addEventListener('click', onOverlayClick);\r\n    }\r\n\r\n    if(options.withConfirm) {\r\n      this.btnConfirm = document.createElement('button');\r\n      this.btnConfirm.classList.add('btn-primary', 'btn-color-primary');\r\n      if(options.withConfirm !== true) {\r\n        this.btnConfirm.append(i18n(options.withConfirm));\r\n      }\r\n      this.header.append(this.btnConfirm);\r\n      ripple(this.btnConfirm);\r\n    }\r\n\r\n    this.container.append(this.header);\r\n    if(options.body) {\r\n      this.body = document.createElement('div');\r\n      this.body.classList.add('popup-body');\r\n      this.container.append(this.body);\r\n    }\r\n\r\n    if(buttons && buttons.length) {\r\n      const buttonsDiv = document.createElement('div');\r\n      buttonsDiv.classList.add('popup-buttons');\r\n\r\n      if(buttons.length === 2) {\r\n        buttonsDiv.classList.add('popup-buttons-row');\r\n      }\r\n  \r\n      const buttonsElements = buttons.map(b => {\r\n        const button = document.createElement('button');\r\n        button.className = 'btn' + (b.isDanger ? ' danger' : ' primary');\r\n\r\n        ripple(button);\r\n        \r\n        if(b.text) {\r\n          button.innerHTML =  b.text;\r\n        } else {\r\n          button.append(i18n(b.langKey, b.langArgs));\r\n        }\r\n  \r\n        if(b.callback) {\r\n          button.addEventListener('click', () => {\r\n            b.callback();\r\n            this.destroy();\r\n          }, {once: true});\r\n        } else if(b.isCancel) {\r\n          button.addEventListener('click', () => {\r\n            this.destroy();\r\n          }, {once: true});\r\n        }\r\n  \r\n        return button;\r\n      });\r\n  \r\n      buttonsDiv.append(...buttonsElements);\r\n      this.container.append(buttonsDiv);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n\r\n  public show() {\r\n    this.navigationItem = {\r\n      type: 'popup',\r\n      onPop: this.destroy,\r\n      onEscape: this.onEscape\r\n    };\r\n\r\n    appNavigationController.pushItem(this.navigationItem);\r\n\r\n    blurActiveElement(); // * hide mobile keyboard\r\n    document.body.append(this.element);\r\n    void this.element.offsetWidth; // reflow\r\n    this.element.classList.add('active');\r\n    rootScope.overlayIsActive = true;\r\n    animationIntersector.checkAnimations(true);\r\n  }\r\n\r\n  public hide = () => {\r\n    appNavigationController.back('popup');\r\n  };\r\n\r\n  private destroy = () => {\r\n    this.onClose && this.onClose();\r\n    this.element.classList.add('hiding');\r\n    this.element.classList.remove('active');\r\n\r\n    if(this.btnClose) this.btnClose.removeEventListener('click', this.hide);\r\n    rootScope.overlayIsActive = false;\r\n\r\n    appNavigationController.removeItem(this.navigationItem);\r\n    this.navigationItem = undefined;\r\n\r\n    setTimeout(() => {\r\n      this.element.remove();\r\n      this.onCloseAfterTimeout && this.onCloseAfterTimeout();\r\n      animationIntersector.checkAnimations(false);\r\n    }, 150);\r\n  };\r\n}\r\n\r\nexport const addCancelButton = (buttons: PopupButton[]) => {\r\n  const button = buttons.find(b => b.isCancel);\r\n  if(!button) {\r\n    buttons.push({\r\n      langKey: 'Cancel',\r\n      isCancel: true\r\n    });\r\n  }\r\n\r\n  return buttons;\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountPasswordInputSettings, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport type CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appUsersManager from '../appManagers/appUsersManager';\r\nimport apiManager from './mtprotoworker';\r\n//import { computeCheck } from \"../crypto/srp\";\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: ReturnType<CryptoWorkerMethods['computeSRP']>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.computeSRP(settings.currentPassword, state);\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.computeSRP(settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.computeSRP(password, state).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          appUsersManager.saveApiUser(auth.user);\r\n          apiManager.setUserAuth(auth.user.id);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\r\n  let cropComponent: HTMLDivElement, \r\n    container: HTMLDivElement, \r\n    cropImage: HTMLImageElement, \r\n    event_state: Partial<{  \r\n      mouse_x: number,   \r\n      mouse_y: number,   \r\n      container_width: number,  \r\n      container_height: number,  \r\n      container_left: number,  \r\n      container_top: number\r\n    }> = {}, \r\n    keyZoomValue = 4.0, \r\n    MINWIDTH = 50, \r\n    MINHEIGHT = 50, \r\n    CROPWIDTH = 200, \r\n    CROPHEIGHT = 200, \r\n    cropLeft = 0, \r\n    cropTop = 0, \r\n    cropWidth = 0, \r\n    cropHeight = 0,\r\n    scaledRatio = 0;\r\n  \r\n  if(originalImage.complete) init();\r\n  else originalImage.onload = init;\r\n  \r\n  function removeHandlers() {\r\n    container.removeEventListener('mousedown', startMoving);\r\n    container.removeEventListener('touchstart', startMoving);\r\n    container.removeEventListener('wheel', resizing);\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n    document.removeEventListener('keypress', keyHandler);\r\n\r\n    cropComponent.remove();\r\n    container.remove();\r\n    cropImage.remove();\r\n  }\r\n  \r\n  function addHandlers() {\r\n    container.addEventListener('mousedown', startMoving, false);\r\n    container.addEventListener('touchstart', startMoving, false);\r\n    container.addEventListener('wheel', resizing, false);\r\n    \r\n    document.addEventListener('keypress', keyHandler, false);\r\n    //document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\r\n  }\r\n  \r\n  function init() {\r\n    originalImage.classList.add('crop-blur');\r\n    originalImage.draggable = false;\r\n    \r\n    cropImage = new Image();\r\n    cropImage.src = originalImage.src;\r\n    cropImage.draggable = false;\r\n    cropImage.classList.add('crop-overlay-image');\r\n    \r\n    if(!canvas) {\r\n      canvas = document.createElement('canvas');\r\n    }\r\n    \r\n    cropComponent = document.createElement('div');\r\n    cropComponent.classList.add('crop-component');\r\n    \r\n    container = document.createElement('div');\r\n    container.classList.add('crop-overlay');\r\n    \r\n    const overlayColor = document.createElement('div');\r\n    overlayColor.classList.add('crop-overlay-color');\r\n    \r\n    cropComponent.appendChild(container);\r\n    const wrapper = originalImage.parentNode as HTMLElement;\r\n    wrapper.appendChild(cropComponent);\r\n    cropComponent.appendChild(cropImage);\r\n    cropComponent.appendChild(originalImage);\r\n    cropComponent.appendChild(overlayColor);\r\n    container.appendChild(cropImage);\r\n\r\n    cropImage.style.maxWidth = originalImage.width + 'px';\r\n\r\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\r\n    \r\n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\r\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\r\n    \r\n    updateCropSize(CROPWIDTH, CROPHEIGHT);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    addHandlers();\r\n    //crop();\r\n  }\r\n  \r\n  function updateCropSize(width: number, height: number) {\r\n    cropWidth = width * scaledRatio;\r\n    cropHeight = height * scaledRatio;\r\n\r\n    container.style.width = width + 'px';\r\n    container.style.height = height + 'px';\r\n  }\r\n  \r\n  function updateCropImage(left: number, top: number) {\r\n    cropTop = top * scaledRatio;\r\n    cropLeft = left * scaledRatio;\r\n\r\n    cropImage.style.top = -top + 'px';\r\n    cropImage.style.left = -left + 'px';\r\n  }\r\n  \r\n  function updateContainer(left: number, top: number) {\r\n    container.style.top = top + 'px';\r\n    container.style.left = left + 'px';\r\n  }\r\n  \r\n  // Save the initial event details and container state\r\n  function saveEventState(e: any) {\r\n    event_state.container_width = container.offsetWidth;\r\n    event_state.container_height = container.offsetHeight;\r\n    \r\n    event_state.container_left = container.offsetLeft;\r\n    event_state.container_top = container.offsetTop;\r\n    \r\n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\r\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\r\n  }\r\n  \r\n  function imgZoom(zoom: number) {\r\n    zoom = zoom * Math.PI * 2\r\n    let newWidth = Math.floor(container.clientWidth + zoom), \r\n      newHeight = Math.floor(container.clientHeight + zoom), \r\n      w = cropImage.clientWidth, \r\n      h = cropImage.clientHeight, \r\n      left: number, \r\n      top: number, \r\n      right: number, \r\n      bottom: number;\r\n    \r\n    if(newWidth < MINWIDTH) {\r\n      return;\r\n    } else if(newWidth > w) {\r\n      return;\r\n    }\r\n    \r\n    left = container.offsetLeft - (zoom / 2);\r\n    top = container.offsetTop - (zoom / 2);\r\n    right = left + newWidth;\r\n    bottom = top + newHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    if(top < 0) top = 0;\r\n\r\n    if(right > w) return;\r\n    if(bottom > h) return;\r\n\r\n    updateCropSize(newWidth, newWidth);\r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n  \r\n  function keyHandler(e: KeyboardEvent) {\r\n    e.preventDefault();\r\n    \r\n    switch (String.fromCharCode(e.charCode)) {\r\n      case '+' :\r\n      imgZoom(keyZoomValue);\r\n      break;\r\n      case '-' :\r\n      imgZoom(-keyZoomValue);\r\n      break;\r\n    }\r\n  }\r\n  \r\n  function resizing(e: any) {\r\n    e.preventDefault();\r\n    imgZoom(e.deltaY > 0 ? 1 : -1);\r\n  }\r\n  \r\n  function startMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    saveEventState(e);\r\n    \r\n    document.addEventListener('mousemove', moving);\r\n    document.addEventListener('touchmove', moving);\r\n    document.addEventListener('mouseup', endMoving);\r\n    document.addEventListener('touchend', endMoving);\r\n  }\r\n  \r\n  function endMoving(e: MouseEvent | TouchEvent) {\r\n    e.preventDefault();\r\n    \r\n    document.removeEventListener('mouseup', endMoving);\r\n    document.removeEventListener('touchend', endMoving);\r\n    document.removeEventListener('mousemove', moving);\r\n    document.removeEventListener('touchmove', moving);\r\n  }\r\n  \r\n  function moving(e: any) {\r\n    let currentTouch = {x: 0, y: 0}, \r\n      left: number, \r\n      top: number, \r\n      w: number, \r\n      h: number;\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\r\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\r\n    \r\n    left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\r\n    top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\r\n    w = container.offsetWidth;\r\n    h = container.offsetHeight;\r\n    \r\n    if(left < 0) left = 0;\r\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\r\n\r\n    if(top < 0) top = 0;\r\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\r\n    \r\n    updateCropImage(left, top);\r\n    updateContainer(left, top);\r\n    //crop();\r\n  }\r\n\r\n  function crop() {\r\n    canvas.width = cropWidth;\r\n    canvas.height = cropHeight;\r\n    \r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(originalImage,\r\n      cropLeft, cropTop,\r\n      cropWidth, cropHeight,\r\n      0, 0,\r\n      cropWidth, cropHeight\r\n    );\r\n  }\r\n  \r\n  return {crop, removeHandlers};\r\n}\r\n\r\nexport default resizeableImage;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\r\nimport resizeableImage from \"../../lib/cropper\";\r\nimport PopupElement from \".\";\r\nimport { ripple } from \"../ripple\";\r\nimport { _i18n } from \"../../lib/langPack\";\r\n\r\nexport default class PopupAvatar extends PopupElement {\r\n  private cropContainer: HTMLElement;\r\n  private input: HTMLInputElement;\r\n  private btnSubmit: HTMLElement;\r\n  private h6: HTMLElement;\r\n\r\n  private image = new Image();\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private blob: Blob;\r\n  private cropper = {\r\n    crop: () => {},\r\n    removeHandlers: () => {}\r\n  };\r\n\r\n  private onCrop: (upload: () => ReturnType<typeof appDownloadManager.upload>) => void;\r\n\r\n  constructor() {\r\n    super('popup-avatar', null, {closable: true});\r\n\r\n    this.h6 = document.createElement('h6');\r\n    _i18n(this.h6, 'Popup.Avatar.Title');\r\n\r\n    this.btnClose.classList.remove('btn-icon');\r\n\r\n    this.header.append(this.h6);\r\n\r\n    this.cropContainer = document.createElement('div');\r\n    this.cropContainer.classList.add('crop');\r\n    this.cropContainer.append(this.image);\r\n\r\n    this.input = document.createElement('input');\r\n    this.input.type = 'file';\r\n    this.input.style.display = 'none';\r\n    this.input.addEventListener('change', (e: any) => {\r\n      const file = e.target.files[0];\r\n      if(!file) {\r\n        return;\r\n      }\r\n  \r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const contents = e.target.result as string;\r\n        \r\n        this.image = new Image();\r\n        this.cropContainer.append(this.image);\r\n        this.image.src = contents;\r\n  \r\n        this.image.onload = () => {\r\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\r\n          cropContainer.style.width = w + 'px';\r\n          cropContainer.style.height = h + 'px'; */\r\n          this.show();\r\n  \r\n          this.cropper = resizeableImage(this.image, this.canvas);\r\n          this.input.value = '';\r\n        };\r\n      };\r\n  \r\n      reader.readAsDataURL(file);\r\n    }, false);\r\n\r\n    this.btnSubmit = document.createElement('button');\r\n    this.btnSubmit.className = 'btn-primary btn-color-primary btn-circle btn-crop btn-icon tgico-check z-depth-1';\r\n    ripple(this.btnSubmit);\r\n    this.btnSubmit.addEventListener('click', () => {\r\n      this.cropper.crop();\r\n      this.btnClose.click();\r\n\r\n      this.canvas.toBlob(blob => {\r\n        this.blob = blob; // save blob to send after reg\r\n        this.darkenCanvas();\r\n        this.resolve();\r\n      }, 'image/jpeg', 1);\r\n    });\r\n\r\n    this.container.append(this.cropContainer, this.btnSubmit, this.input);\r\n\r\n    this.onCloseAfterTimeout = () => {\r\n      this.cropper.removeHandlers();\r\n      if(this.image) {\r\n        this.image.remove();\r\n      }\r\n    };\r\n  }\r\n\r\n  private resolve() {\r\n    this.onCrop(() => {\r\n      return appDownloadManager.upload(this.blob);\r\n    });\r\n  }\r\n\r\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\r\n    this.canvas = postCanvas;\r\n    this.onCrop = onCrop;\r\n\r\n    this.input.click();\r\n  }\r\n\r\n  public darkenCanvas() {\r\n    let ctx = this.canvas.getContext('2d');\r\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\r\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport InputField from \"../inputField\";\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\n\r\nexport default class TrackingMonkey {\r\n  public container: HTMLElement;\r\n\r\n  protected max = 45;\r\n  protected needFrame = 0;\r\n\r\n  protected animation: RLottiePlayer;\r\n  protected idleAnimation: RLottiePlayer;\r\n\r\n  protected loadPromise: Promise<any>;\r\n\r\n  constructor(protected inputField: InputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n\r\n    const input = inputField.input;\r\n\r\n    input.addEventListener('blur', () => {\r\n      this.playAnimation(0);\r\n    });\r\n\r\n    input.addEventListener('input', (e) => {\r\n      this.playAnimation(inputField.value.length);\r\n    });\r\n\r\n    /* codeInput.addEventListener('focus', () => {\r\n      playAnimation(Math.max(codeInput.value.length, 1));\r\n    }); */\r\n  }\r\n\r\n  // 1st symbol = frame 15\r\n  // end symbol = frame 165\r\n  public playAnimation(length: number) {\r\n    if(!this.animation) return;\r\n\r\n    length = Math.min(length, 30);\r\n    let frame: number;\r\n    if(length) {\r\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\r\n\r\n      if(this.idleAnimation) {\r\n        this.idleAnimation.stop(true);\r\n        this.idleAnimation.canvas.style.display = 'none';\r\n      }\r\n      \r\n      this.animation.canvas.style.display = '';\r\n    } else {\r\n      /* const cb = (frameNo: number) => {\r\n        if(frameNo <= 1) { */\r\n          /* idleAnimation.play();\r\n          idleAnimation.canvas.style.display = '';\r\n          animation.canvas.style.display = 'none'; */\r\n      /*     animation.removeListener('enterFrame', cb);\r\n        }\r\n      };\r\n      animation.addListener('enterFrame', cb); */\r\n      \r\n      frame = 0;\r\n    }\r\n    //animation.playSegments([1, 2]);\r\n\r\n    const direction = this.needFrame > frame ? -1 : 1;\r\n    //console.log('keydown', length, frame, direction);\r\n\r\n    this.animation.setDirection(direction);\r\n    if(this.needFrame !== 0 && frame === 0) {\r\n      this.animation.setSpeed(7);\r\n    }\r\n    /* let diff = Math.abs(needFrame - frame * direction);\r\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\r\n    this.needFrame = frame;\r\n    \r\n    this.animation.play();\r\n\r\n    /* animation.goToAndStop(15, true); */\r\n    //animation.goToAndStop(length / max * );\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = Promise.all([\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: true,\r\n        autoplay: true,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyIdle.tgs').then(animation => {\r\n        this.idleAnimation = animation;\r\n\r\n        // ! animationIntersector will stop animation instantly\r\n        if(!this.inputField.value.length) {\r\n          animation.play();\r\n        }\r\n\r\n        return lottieLoader.waitForFirstFrame(animation);\r\n      }),\r\n\r\n      lottieLoader.loadAnimationFromURL({\r\n        container: this.container,\r\n        loop: false,\r\n        autoplay: false,\r\n        width: this.size,\r\n        height: this.size\r\n      }, 'assets/img/TwoFactorSetupMonkeyTracking.tgs').then(_animation => {\r\n        this.animation = _animation;\r\n\r\n        if(!this.inputField.value.length) {\r\n          this.animation.canvas.style.display = 'none';\r\n        }\r\n\r\n        this.animation.addEventListener('enterFrame', currentFrame => {\r\n          //console.log('enterFrame', currentFrame, needFrame);\r\n          //let currentFrame = Math.round(e.currentTime);\r\n          \r\n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n          }\r\n\r\n          if(currentFrame === 0 && this.needFrame === 0) {\r\n            //animation.curFrame = 0;\r\n            \r\n            if(this.idleAnimation) {\r\n              this.idleAnimation.canvas.style.display = '';\r\n              this.idleAnimation.play();\r\n              this.animation.canvas.style.display = 'none';\r\n            }\r\n          }\r\n        });\r\n        //console.log(animation.getDuration(), animation.getDuration(true));\r\n\r\n        return lottieLoader.waitForFirstFrame(_animation);\r\n      })\r\n    ]);\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) this.animation.remove();\r\n    if(this.idleAnimation) this.idleAnimation.remove();\r\n  }\r\n}\r\n"],"sourceRoot":""}