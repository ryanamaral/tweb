(this.webpackJsonp=this.webpackJsonp||[]).push([[14,17,19],{10:function(t,e,s){"use strict";s.d(e,"a",(function(){return r}));const n=s(51).a.debug,i="undefined"!=typeof window?window:self,r=n?i:{};e.b=n,n||(i.sandpitTurtle=()=>{for(let t in r)i[t]=r[t]})},16:function(t,e,s){"use strict";s.r(e),s.d(e,"ripple",(function(){return c}));var n=s(0),i=s(18),r=s(9);let o=0;function c(t,e=(()=>Promise.resolve()),s=null,c=!1){if(t.querySelector(".c-ripple"))return;t.classList.add("rp");let a=document.createElement("div");a.classList.add("c-ripple");let l;t.classList.contains("rp-square")&&a.classList.add("is-square"),t[c?"prepend":"append"](a);const u=(t,n)=>{const r=Date.now(),c=document.createElement("div"),u=o++,h=1e3*+window.getComputedStyle(a).getPropertyValue("--ripple-duration").replace("s","");l=()=>{let t=Date.now()-r;if(t<h){let e=Math.max(h-t,h/2);setTimeout(()=>c.classList.add("hiding"),Math.max(e-h/2,0)),setTimeout(()=>{c.remove(),s&&s(u)},e)}else c.classList.add("hiding"),setTimeout(()=>{c.remove(),s&&s(u)},h/2);i.isTouchSupported||window.removeEventListener("contextmenu",l),l=null,d=!1},e&&e(u),window.requestAnimationFrame(()=>{const e=a.getBoundingClientRect();c.classList.add("c-ripple__circle");const s=t-e.left,i=n-e.top,r=Math.sqrt(Math.pow(Math.abs(i-e.height/2)+e.height/2,2)+Math.pow(Math.abs(s-e.width/2)+e.width/2,2)),o=s-r/2,l=i-r/2;c.style.width=c.style.height=r+"px",c.style.left=o+"px",c.style.top=l+"px",a.append(c)})};let d=!1;if(i.isTouchSupported){let e=()=>{l&&l()};t.addEventListener("touchstart",s=>{if(!r.default.settings.animationsEnabled)return;if(s.touches.length>1||d||["BUTTON","A"].includes(s.target.tagName)&&s.target!==t||Object(n.a)(s.target,"c-ripple")!==a)return;d=!0;let{clientX:i,clientY:o}=s.touches[0];u(i,o),t.addEventListener("touchend",e,{once:!0}),window.addEventListener("touchmove",s=>{s.cancelBubble=!0,s.stopPropagation(),e(),t.removeEventListener("touchend",e)},{once:!0})},{passive:!0})}else t.addEventListener("mousedown",e=>{if(![0,2].includes(e.button))return;if(!r.default.settings.animationsEnabled)return;if("0"===t.dataset.ripple||Object(n.a)(e.target,"c-ripple")!==a||"A"===e.target.tagName)return!1;if(d)return d=!1,!1;let{clientX:s,clientY:i}=e;u(s,i),window.addEventListener("mouseup",l,{once:!0}),window.addEventListener("contextmenu",l,{once:!0})})}},18:function(t,e,s){"use strict";s.r(e),s.d(e,"isTouchSupported",(function(){return n}));const n="ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch},45:function(t,e,s){"use strict";s.d(e,"a",(function(){return n}));class n{constructor(t){this._constructor(t)}_constructor(t=!1){this.reuseResults=t,this.listeners={},this.listenerResults={}}addEventListener(t,e,s){var n;this.listenerResults.hasOwnProperty(t)&&(e(...this.listenerResults[t]),s)||(null!==(n=this.listeners[t])&&void 0!==n?n:this.listeners[t]=[]).push({callback:e,once:s})}removeEventListener(t,e){this.listeners[t]&&this.listeners[t].findAndSplice(t=>t.callback===e)}dispatchEvent(t,...e){this.reuseResults&&(this.listenerResults[t]=e);const s=[],n=this.listeners[t];if(n){n.slice().forEach(i=>{-1!==n.findIndex(t=>t.callback===i.callback)&&(s.push(i.callback(...e)),i.once&&this.removeEventListener(t,i.callback))})}return s}cleanup(){this.listeners={},this.listenerResults={}}}},51:function(t,e,s){"use strict";const n={test:location.search.indexOf("test=1")>0,debug:location.search.indexOf("debug=1")>0,http:!1,ssl:!0,multipleConnections:!0,asServiceWorker:!1};e.a=n},9:function(t,e,s){"use strict";s.r(e);var n=s(45),i=s(10);class r extends n.a{constructor(){super(),this._overlayIsActive=!1,this.myId=0,this.idle={isIDLE:!0},this.connectionStatus={},this.broadcast=(t,e)=>{this.dispatchEvent(t,e)},this.on=(t,e,s)=>{super.addEventListener(t,e,s)},this.addEventListener=this.on,this.off=(t,e)=>{super.removeEventListener(t,e)},this.removeEventListener=this.off,this.on("user_auth",t=>{this.myId=t}),this.on("connection_status_change",t=>{const e=t;this.connectionStatus[t.name]=e})}get overlayIsActive(){return this._overlayIsActive}set overlayIsActive(t){this._overlayIsActive=t,this.broadcast("overlay_toggle",t)}}const o=new r;i.a.rootScope=o,e.default=o}}]);