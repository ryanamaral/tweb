{"version":3,"sources":["webpack:///./src/lib/langPack.ts","webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/webp/webpWorkerController.ts","webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/string.ts","webpack:///./src/helpers/bytes.ts"],"names":["langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","Promise","all","then","lang","langSign","strings","formatLocalStrings","default","saveLangPack","_","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","i","v","push","key","value","getLangPack","_langPack","__langPack","___langPack","forEach","l","concat","string","appVersion","langPackVersion","set","applyLangPack","Intl","PluralRules","clear","broadcast","Array","from","document","querySelectorAll","element","instance","weakMap","get","update","superFormatter","input","args","indexHolder","out","lastIndex","replace","match","p1","p2","p3","offset","slice","b","createElement","append","length","format","plain","str","select","regExp","Map","getCacheLangPack","finally","undefined","getStrings","invokeApi","keys","resolve","_Intl","window","Object","assign","WeakMap","IntlElementBase","options","property","this","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","join","elements","useLast","arr","delimiterKey","Worker_fn","Worker","webpWorkerController","convertPromises","worker","addEventListener","e","payload","data","fileName","indexOf","promise","bytes","reject","postMessage","init","isWebpSupportedCache","toDataURL","startsWith","hasOwnProperty","convertPromise","type","dcId","url","logSuffix","super","debug","handleOpen","log","dispatchEvent","handleError","error","close","handleClose","removeListeners","handleMessage","event","byteLength","send","body","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","WebSocket","binaryType","err","apiManagerProxy","performTaskWorker","buffer","salt","iterations","keyBytes","ivBytes","encryptedBytes","publicKey","x","y","m","toString","password","state","isNew","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","taskListeners","onWorkerMessage","task","callback","progress","rootScope","finalizeTask","result","registerServiceWorker","addTaskListener","deleteDatabase","location","reload","socketTask","id","socket","onOpen","onClose","onMessage","delete","registerWorker","navigator","serviceWorker","register","scope","registration","installing","waiting","active","onServiceWorkerFail","warn","releasePending","controller","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","params","method","o","prepareTempMessageId","messageId","queryJSON","JSON","stringify","cached","hash","includes","q","cache","item","override","fulfilled","timeout","clearTimeout","cacheSeconds","setTimeout","timestamp","Date","now","verify","queueId","userAuth","dc_id","enabled","limitSymbols","limitFrom","trim","escapeRegExp","encodeEntities","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","index","partLength","convertInputKeyToKey","inputKey","toLowerCase","convertKeyToInputKey","toUpperCase","capitalizeFirstLetter","charAt","bytesToHex","bytesFromHex","hexString","len","start","parseInt","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","convertToArrayBuffer","ArrayBuffer","BYTES_PER_ELEMENT","Uint8Array","bufferConcats","tmp","lastLength"],"mappings":"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","file":"2.e234e2ee00dff8e5524e.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { capitalizeFirstLetter } from \"../helpers/string\";\r\nimport type lang from \"../lang\";\r\nimport type langSign from \"../langSign\";\r\nimport { LangPackDifference, LangPackString } from \"../layer\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\nimport sessionStorage from \"./sessionStorage\";\r\nimport App from \"../config/app\";\r\nimport rootScope from \"./rootScope\";\r\n\r\nexport const langPack: {[actionType: string]: LangPackKey} = {\r\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\r\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\r\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\r\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\r\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\r\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\r\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\r\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\r\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\r\n  \"messageActionChatAddUser\": \"ActionAddUser\",\r\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\r\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\r\n\t\"messageActionChatLeaveYou\": \"YouLeft\",\r\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\r\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\r\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\r\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\r\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\r\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\r\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\r\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\r\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\r\n  \"messageActionHistoryClear\": \"HistoryCleared\",\r\n\r\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\r\n\r\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\r\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\r\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\r\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\r\n\r\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\r\n};\r\n\r\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\r\n\r\nnamespace I18n {\r\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\r\n\tlet pluralRules: Intl.PluralRules;\r\n\r\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\r\n\texport let lastRequestedLangCode: string;\r\n\texport let requestedServerLanguage = false;\r\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\r\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\r\n\t\treturn cacheLangPackPromise = Promise.all([\r\n\t\t\tsessionStorage.get('langPack') as Promise<LangPackDifference>,\r\n\t\t\tpolyfillPromise\r\n\t\t]).then(([langPack]) => {\r\n\t\t\tif(!langPack/*  || true */) {\r\n\t\t\t\treturn loadLocalLangPack();\r\n\t\t\t} else if(DEBUG && false) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t} */\r\n\t\t\t\r\n\t\t\tif(!lastRequestedLangCode) {\r\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t}).finally(() => {\r\n\t\t\tcacheLangPackPromise = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLocalLangPack() {\r\n\t\tconst defaultCode = App.langPackCode;\r\n\t\tlastRequestedLangCode = defaultCode;\r\n\t\treturn Promise.all([\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign')\r\n\t\t]).then(([lang, langSign]) => {\r\n\t\t\tconst strings: LangPackString[] = [];\r\n\t\t\tformatLocalStrings(lang.default, strings);\r\n\t\t\tformatLocalStrings(langSign.default, strings);\r\n\r\n\t\t\tconst langPack: LangPackDifference = {\r\n\t\t\t\t_: 'langPackDifference',\r\n\t\t\t\tfrom_version: 0,\r\n\t\t\t\tlang_code: defaultCode,\r\n\t\t\t\tstrings,\r\n\t\t\t\tversion: 0,\r\n\t\t\t\tlocal: true\r\n\t\t\t};\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLangPack(langCode: string) {\r\n\t\trequestedServerLanguage = true;\r\n\t\treturn Promise.all([\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: App.langPack\r\n\t\t\t}),\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: 'android'\r\n\t\t\t}),\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign'),\r\n\t\t\tpolyfillPromise\r\n\t\t]);\r\n\t}\r\n\r\n\texport function getStrings(langCode: string, strings: string[]) {\r\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\r\n\t\t\tlang_pack: App.langPack,\r\n\t\t\tlang_code: langCode,\r\n\t\t\tkeys: strings\r\n\t\t});\r\n\t}\r\n\r\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\r\n\t\tfor(const i in strings) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst v = strings[i];\r\n\t\t\tif(typeof(v) === 'string') {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackString',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\tvalue: v\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackStringPluralized',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\t...v\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pushTo;\r\n\t}\r\n\r\n\texport function getLangPack(langCode: string) {\r\n\t\tlastRequestedLangCode = langCode;\r\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\r\n\t\t\tlet strings: LangPackString[] = [];\r\n\r\n\t\t\t[__langPack, ___langPack].forEach(l => {\r\n\t\t\t\tformatLocalStrings(l.default as any, strings);\r\n\t\t\t});\r\n\r\n\t\t\tstrings = strings.concat(langPack.strings);\r\n\r\n\t\t\tfor(const string of _langPack.strings) {\r\n\t\t\t\tstrings.push(string);\r\n\t\t\t}\r\n\r\n\t\t\tlangPack.strings = strings;\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function saveLangPack(langPack: LangPackDifference) {\r\n\t\tlangPack.appVersion = App.langPackVersion;\r\n\r\n\t\treturn sessionStorage.set({langPack}).then(() => {\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t});\r\n\t}\r\n\r\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\r\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else {\r\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\r\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\r\n\t\t\t});\r\n\t\t}\r\n\t})();\r\n\t\r\n\texport function applyLangPack(langPack: LangPackDifference) {\r\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\r\n\r\n\t\tstrings.clear();\r\n\r\n\t\tfor(const string of langPack.strings) {\r\n\t\t\tstrings.set(string.key as LangPackKey, string);\r\n\t\t}\r\n\r\n\t\trootScope.broadcast('language_change');\r\n\r\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n\t\telements.forEach(element => {\r\n\t\t\tconst instance = weakMap.get(element);\r\n\r\n\t\t\tif(instance) {\r\n\t\t\t\tinstance.update();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\r\n\t\tlet out: (string | HTMLElement)[] = [];\r\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\r\n\r\n\t\tlet lastIndex = 0;\r\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\r\n\t\t\t//console.table({match, p1, p2, offset, string});\r\n\r\n\t\t\tout.push(string.slice(lastIndex, offset));\r\n\r\n\t\t\tif(p1) {\r\n\t\t\t\t//offset += p1.length;\r\n\t\t\t\tswitch(p1) {\r\n\t\t\t\t\tcase '**': {\r\n\t\t\t\t\t\tconst b = document.createElement('b');\r\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\r\n\t\t\t\t\t\tout.push(b);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(p3) {\r\n\t\t\t\tout.push(document.createElement('br'));\r\n\t\t\t} else if(args) {\r\n\t\t\t\tout.push(args[indexHolder.i++]);\r\n\t\t\t}\r\n\r\n\t\t\tlastIndex = offset + match.length;\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\r\n\t\tif(lastIndex !== input.length) {\r\n\t\t\tout.push(input.slice(lastIndex));\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\r\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\r\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\r\n\t\tconst str = strings.get(key);\r\n\t\tlet input: string;\r\n\t\tif(str) {\r\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\r\n\t\t\t\tlet v = args[0] as number | string;\r\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\r\n\t\t\t\tconst s = pluralRules.select(v);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\r\n\t\t\t} else if(str._ === 'langPackString') {\r\n\t\t\t\tinput = str.value;\r\n\t\t\t} else {\r\n\t\t\t\t//input = '[' + key + ']';\r\n\t\t\t\tinput = key;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//input = '[' + key + ']';\r\n\t\t\tinput = key;\r\n\t\t}\r\n\t\t\r\n\t\tif(plain) {\r\n\t\t\tif(args?.length) {\r\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\r\n\t\t\t\t\treturn '' + args[i++];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn input;\r\n\t\t} else {\r\n\t\t\treturn superFormatter(input, args);\r\n\t\t}\r\n\t}\r\n\r\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\r\n\r\n\texport type IntlElementBaseOptions = {\r\n\t\telement?: HTMLElement,\r\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\r\n\t};\r\n\r\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\r\n\t\tpublic element: IntlElementBaseOptions['element'];\r\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\r\n\t\r\n\t\tconstructor(options: Options) {\r\n\t\t\tthis.element = options.element || document.createElement('span');\r\n\t\t\tthis.element.classList.add('i18n');\r\n\t\t\t\r\n\t\t\tthis.update(options);\r\n\t\t\tweakMap.set(this.element, this);\r\n\t\t}\r\n\r\n\t\tabstract update(options?: Options): void;\r\n\t}\r\n\r\n\texport type IntlElementOptions = IntlElementBaseOptions & {\r\n\t\tkey: LangPackKey,\r\n\t\targs?: any[]\r\n\t};\r\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\r\n\t\tpublic key: IntlElementOptions['key'];\r\n\t\tpublic args: IntlElementOptions['args'];\r\n\r\n\t\tpublic update(options?: IntlElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\tif(this.property === 'innerHTML') {\r\n\t\t\t\tthis.element.textContent = '';\r\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst v = this.element[this.property];\r\n\t\t\t\tconst formatted = format(this.key, true, this.args);\r\n\r\n\t\t\t\t// * hasOwnProperty won't work here\r\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\r\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\r\n\t\tdate: Date,\r\n\t\toptions: Intl.DateTimeFormatOptions\r\n\t};\r\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\r\n\t\tpublic date: IntlDateElementOptions['date'];\r\n\t\tpublic options: IntlDateElementOptions['options'];\r\n\r\n\t\tpublic update(options?: IntlDateElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\t//var options = { month: 'long', day: 'numeric' };\r\n\t\t\t\r\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\r\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\r\n\t\t\t\r\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\r\n\t\t}\r\n\t}\r\n\r\n\texport function i18n(key: LangPackKey, args?: any[]) {\r\n\t\treturn new IntlElement({key, args}).element;\r\n\t}\r\n\t\r\n\texport function i18n_(options: IntlElementOptions) {\r\n\t\treturn new IntlElement(options).element;\r\n\t}\r\n\r\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\r\n\t\treturn new IntlElement({element, key, args, property}).element;\r\n\t}\r\n}\r\n\r\nexport {I18n};\r\nexport default I18n;\r\n\r\nconst i18n = I18n.i18n;\r\nexport {i18n};\r\n\r\nconst i18n_ = I18n.i18n_;\r\nexport {i18n_};\r\n\r\nconst _i18n = I18n._i18n;\r\nexport {_i18n};\r\n\r\nexport function join(elements: HTMLElement[], useLast = true) {\r\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\r\n  for(let i = 1; i < elements.length; ++i) {\r\n    const isLast = (elements.length - 1) === i;\r\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\r\n    arr.push(i18n(delimiterKey));\r\n    arr.push(elements[i]);\r\n  }\r\n\r\n\treturn arr;\r\n}\r\n\r\nMOUNT_CLASS_TO.I18n = I18n;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"webp.worker.eafb4e17dc09d5858dc8.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport WebpWorker from 'worker-loader!./webp.worker';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport apiManagerProxy from '../mtproto/mtprotoworker';\r\n\r\nexport type WebpConvertTask = {\r\n  type: 'convertWebp', \r\n  payload: {\r\n    fileName: string, \r\n    bytes: Uint8Array\r\n  }\r\n};\r\n\r\nexport class WebpWorkerController {\r\n  private worker: Worker;\r\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\r\n  private isWebpSupportedCache: boolean;\r\n  \r\n  init() {\r\n    this.worker = new WebpWorker();\r\n    this.worker.addEventListener('message', (e) => {\r\n      const payload = (e.data as WebpConvertTask).payload;\r\n\r\n      if(payload.fileName.indexOf('main-') === 0) {\r\n        const promise = this.convertPromises[payload.fileName];\r\n        if(promise) {\r\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\r\n          delete this.convertPromises[payload.fileName];\r\n        }\r\n      } else {\r\n        apiManagerProxy.postMessage(e.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  postMessage(data: WebpConvertTask) {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.worker.postMessage(data);\r\n  }\r\n\r\n  isWebpSupported() {\r\n    if(this.isWebpSupportedCache === undefined) {\r\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\r\n    }\r\n\r\n    return this.isWebpSupportedCache;\r\n  }\r\n\r\n  convert(fileName: string, bytes: Uint8Array) {\r\n    fileName = 'main-' + fileName;\r\n\r\n    if(this.convertPromises.hasOwnProperty(fileName)) {\r\n      return this.convertPromises[fileName];\r\n    }\r\n    \r\n    const convertPromise = deferredPromise<Uint8Array>();\r\n\r\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\r\n\r\n    return this.convertPromises[fileName] = convertPromise;\r\n  }\r\n}\r\n\r\nconst webpWorkerController = new WebpWorkerController();\r\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\r\nexport default webpWorkerController;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"mtproto.worker.394554c401e5d106a778.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log.error('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\r\n//import './mtproto.worker';\r\nimport { isObject } from '../../helpers/object';\r\nimport type { MethodDeclMap } from '../../layer';\r\nimport type { InvokeApiOptions } from '../../types';\r\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { logger } from '../logger';\r\nimport rootScope from '../rootScope';\r\nimport webpWorkerController from '../webp/webpWorkerController';\r\nimport type { DownloadOptions } from './apiFileManager';\r\nimport type { ServiceWorkerTask } from './mtproto.service';\r\nimport { UserAuth } from './mtproto_config';\r\nimport type { MTMessage } from './networker';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport Socket from './transports/websocket';\r\nimport IDBStorage from '../idb';\r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\ntype HashResult = {\r\n  hash: number,\r\n  result: any\r\n};\r\n\r\ntype HashOptions = {\r\n  [queryJSON: string]: HashResult\r\n};\r\n\r\nexport class ApiManagerProxy extends CryptoWorkerMethods {\r\n  public worker: /* Window */Worker;\r\n  public postMessage: (...args: any[]) => void;\r\n  private afterMessageIdTemp = 0;\r\n\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n\r\n  public updatesProcessor: (obj: any) => void = null;\r\n\r\n  private log = logger('API-PROXY');\r\n\r\n  private hashes: {[method: string]: HashOptions} = {};\r\n\r\n  private apiPromisesSingle: {\r\n    [q: string]: Promise<any>\r\n  } = {};\r\n  private apiPromisesCacheable: {\r\n    [method: string]: {\r\n      [queryJSON: string]: {\r\n        timestamp: number,\r\n        promise: Promise<any>,\r\n        fulfilled: boolean,\r\n        timeout?: number,\r\n        params: any\r\n      }\r\n    }\r\n  } = {};\r\n\r\n  private isSWRegistered = true;\r\n\r\n  private debug = DEBUG /* && false */;\r\n\r\n  private sockets: Map<number, Socket> = new Map();\r\n\r\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\r\n\r\n  public onServiceWorkerFail: () => void;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log('constructor');\r\n\r\n    this.registerServiceWorker();\r\n\r\n    this.addTaskListener('clear', () => {\r\n      const promise = IDBStorage.deleteDatabase();\r\n      promise.finally(() => {\r\n        location.reload();\r\n      });\r\n    });\r\n\r\n    this.addTaskListener('connectionStatusChange', (task: any) => {\r\n      rootScope.broadcast('connection_status_change', task.payload);\r\n    });\r\n\r\n    this.addTaskListener('convertWebp', (task) => {\r\n      webpWorkerController.postMessage(task);\r\n    });\r\n\r\n    this.addTaskListener('socketProxy', (task) => {\r\n      const socketTask = task.payload;\r\n      const id = socketTask.id;\r\n      //console.log('socketProxy', socketTask, id);\r\n\r\n      if(socketTask.type === 'send') {\r\n        const socket = this.sockets.get(id);\r\n        socket.send(socketTask.payload);\r\n      } else if(socketTask.type === 'close') {\r\n        const socket = this.sockets.get(id);\r\n        socket.close();\r\n      } else if(socketTask.type === 'setup') {\r\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\r\n        \r\n        const onOpen = () => {\r\n          //console.log('socketProxy onOpen');\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'open',\r\n              id\r\n            }\r\n          });\r\n        };\r\n        const onClose = () => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'close',\r\n              id\r\n            }\r\n          });\r\n\r\n          socket.removeEventListener('open', onOpen);\r\n          socket.removeEventListener('close', onClose);\r\n          socket.removeEventListener('message', onMessage);\r\n          this.sockets.delete(id);\r\n        };\r\n        const onMessage = (buffer: ArrayBuffer) => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'message',\r\n              id,\r\n              payload: buffer\r\n            }\r\n          });\r\n        };\r\n\r\n        socket.addEventListener('open', onOpen);\r\n        socket.addEventListener('close', onClose);\r\n        socket.addEventListener('message', onMessage);\r\n        this.sockets.set(id, socket);\r\n      }\r\n    });\r\n\r\n                       \r\n    this.registerWorker();\r\n              \r\n  }\r\n\r\n  public isServiceWorkerOnline() {\r\n    return this.isSWRegistered;\r\n  }\r\n\r\n  private registerServiceWorker() {\r\n    if(!('serviceWorker' in navigator)) return;\r\n    \r\n    const worker = navigator.serviceWorker;\r\n    worker.register('./sw.js', {scope: './'}).then(registration => {\r\n      this.log('SW registered', registration);\r\n      this.isSWRegistered = true;\r\n\r\n      const sw = registration.installing || registration.waiting || registration.active;\r\n      sw.addEventListener('statechange', (e) => {\r\n        this.log('SW statechange', e);\r\n      });\r\n\r\n                        \r\n                                                                                                                     \r\n                                            \r\n                \r\n    }, (err) => {\r\n      this.isSWRegistered = false;\r\n      this.log.error('SW registration failed!', err);\r\n\r\n      if(this.onServiceWorkerFail) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n\r\n    worker.addEventListener('controllerchange', () => {\r\n      this.log.warn('controllerchange');\r\n      this.releasePending();\r\n\r\n      worker.controller.addEventListener('error', (e) => {\r\n        this.log.error('controller error:', e);\r\n      });\r\n    });\r\n\r\n                      \r\n                                                             \r\n             \r\n    worker.addEventListener('message', (e) => {\r\n      const task: ServiceWorkerTask = e.data;\r\n      if(!isObject(task)) {\r\n        return;\r\n      }\r\n      \r\n      this.postMessage(task);\r\n    });\r\n              \r\n\r\n    worker.addEventListener('messageerror', (e) => {\r\n      this.log.error('SW messageerror:', e);\r\n    });\r\n  }\r\n\r\n  private onWorkerFirstMessage(worker: any) {\r\n    if(!this.worker) {\r\n      this.worker = worker;\r\n      this.log('set webWorker');\r\n\r\n      this.postMessage = this.worker.postMessage.bind(this.worker);\r\n\r\n      const isWebpSupported = webpWorkerController.isWebpSupported();\r\n      this.log('WebP supported:', isWebpSupported);\r\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\r\n\r\n      this.releasePending();\r\n    }\r\n  }\r\n\r\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\r\n    this.taskListeners[name] = callback;\r\n  }\r\n\r\n  private onWorkerMessage = (e: MessageEvent) => {\r\n    //this.log('got message from worker:', e.data);\r\n\r\n    const task = e.data;\r\n\r\n    if(!isObject(task)) {\r\n      return;\r\n    }\r\n\r\n    const callback = this.taskListeners[task.type];\r\n    if(callback) {\r\n      callback(task);\r\n      return;\r\n    }\r\n\r\n    if(task.update) {\r\n      if(this.updatesProcessor) {\r\n        this.updatesProcessor(task.update);\r\n      }\r\n    } else if(task.progress) {\r\n      rootScope.broadcast('download_progress', task.progress);\r\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\r\n      this.finalizeTask(task.taskId, task.result, task.error);\r\n    }\r\n  };\r\n\r\n                     \r\n  private registerWorker() {\r\n    //return;\r\n\r\n    const worker = new MTProtoWorker();\r\n    //const worker = window;\r\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\r\n    worker.addEventListener('message', this.onWorkerMessage);\r\n\r\n    worker.addEventListener('error', (err) => {\r\n      this.log.error('WORKER ERROR', err);\r\n    });\r\n  }\r\n            \r\n\r\n  private finalizeTask(taskId: number, result: any, error: any) {\r\n    const deferred = this.awaiting[taskId];\r\n    if(deferred !== undefined) {\r\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\r\n      error ? deferred.reject(error) : deferred.resolve(result);\r\n      delete this.awaiting[taskId];\r\n    }\r\n  }\r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && this.log.debug('start', task, args);\r\n\r\n    return new Promise<T>((resolve, reject) => {\r\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\r\n  \r\n      const params = {\r\n        task,\r\n        taskId: this.taskId,\r\n        args\r\n      };\r\n\r\n      this.pending.push(params);\r\n      this.releasePending();\r\n  \r\n      this.taskId++;\r\n    });\r\n  }\r\n\r\n  private releasePending() {\r\n    //return;\r\n\r\n    if(this.postMessage) {\r\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\r\n      this.pending.forEach(pending => {\r\n        this.postMessage(pending);\r\n      });\r\n      \r\n      this.debug && this.log.debug('released tasks');\r\n      this.pending.length = 0;\r\n    }\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.performTaskWorker('invokeApi', method, params, options);\r\n  }\r\n\r\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    let o = options;\r\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\r\n    \r\n    o = {...options};\r\n    (options as MTMessage).messageId = o.prepareTempMessageId;\r\n\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.invokeApi(method, params, o);\r\n  }\r\n\r\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n\r\n    const queryJSON = JSON.stringify(params);\r\n    let cached: HashResult;\r\n    if(this.hashes[method]) {\r\n      cached = this.hashes[method][queryJSON];\r\n      if(cached) {\r\n        (params as any).hash = cached.hash;\r\n      }\r\n    }\r\n\r\n    return this.invokeApi(method, params, options).then((result: any) => {\r\n      if(result._.includes('NotModified')) {\r\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\r\n        return cached.result;\r\n      }\r\n      \r\n      if(result.hash/*  || result.messages */) {\r\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\r\n        \r\n        if(!this.hashes[method]) this.hashes[method] = {};\r\n        this.hashes[method][queryJSON] = {\r\n          hash,\r\n          result\r\n        };\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const q = method + '-' + JSON.stringify(params);\r\n    if(this.apiPromisesSingle[q]) {\r\n      return this.apiPromisesSingle[q];\r\n    }\r\n\r\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\r\n      delete this.apiPromisesSingle[q];\r\n    });\r\n  }\r\n\r\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\r\n    const queryJSON = JSON.stringify(params);\r\n    const item = cache[queryJSON];\r\n    if(item && (!options.override || !item.fulfilled)) {\r\n      return item.promise;\r\n    }\r\n\r\n    if(options.override) {\r\n      if(item && item.timeout) {\r\n        clearTimeout(item.timeout);\r\n        delete item.timeout;\r\n      }\r\n\r\n      delete options.override;\r\n    }\r\n\r\n    let timeout: number;\r\n    if(options.cacheSeconds) {\r\n      timeout = window.setTimeout(() => {\r\n        delete cache[queryJSON];\r\n      }, options.cacheSeconds * 1000);\r\n      delete options.cacheSeconds;\r\n    }\r\n\r\n    const promise = this.invokeApi(method, params, options);\r\n\r\n    cache[queryJSON] = {\r\n      timestamp: Date.now(),\r\n      fulfilled: false,\r\n      timeout,\r\n      promise,\r\n      params\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\r\n    const cache = this.apiPromisesCacheable[method];\r\n    if(cache) {\r\n      for(const queryJSON in cache) {\r\n        const item = cache[queryJSON];\r\n        if(verify(item.params)) {\r\n          if(item.timeout) {\r\n            clearTimeout(item.timeout);\r\n          }\r\n\r\n          delete cache[queryJSON];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* private computeHash(smth: any[]) {\r\n    smth = smth.slice().sort((a, b) => a.id - b.id);\r\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\r\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\r\n  } */\r\n\r\n  public setBaseDcId(dcId: number) {\r\n    return this.performTaskWorker('setBaseDcId', dcId);\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    return this.performTaskWorker('setQueueId', queueId);\r\n  }\r\n\r\n  public setUserAuth(userAuth: UserAuth) {\r\n    rootScope.broadcast('user_auth', userAuth);\r\n    return this.performTaskWorker('setUserAuth', userAuth);\r\n  }\r\n\r\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\r\n    return this.performTaskWorker('getNetworker', dc_id, options);\r\n  }\r\n\r\n  public logOut(): Promise<void> {\r\n    return this.performTaskWorker('logOut');\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    return this.performTaskWorker('cancelDownload', fileName);\r\n  }\r\n\r\n  public downloadFile(options: DownloadOptions) {\r\n    return this.performTaskWorker('downloadFile', options);\r\n  }\r\n\r\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\r\n    return this.performTaskWorker('uploadFile', options);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean) {\r\n    return this.performTaskWorker('toggleStorage', enabled);\r\n  }\r\n}\r\n\r\nconst apiManagerProxy = new ApiManagerProxy();\r\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\r\nexport default apiManagerProxy;\r\n","import { convertToArrayBuffer } from \"../../helpers/bytes\";\r\nimport type { InputCheckPasswordSRP } from \"../../layer\";\r\nimport { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow } from \"./crypto_utils\";\r\n\r\nexport default abstract class CryptoWorkerMethods {\r\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\r\n\r\n  public sha1Hash(bytes: Parameters<typeof sha1HashSync>[0]): Promise<Uint8Array> {\r\n    return this.performTaskWorker<Uint8Array>('sha1-hash', bytes);\r\n  }\r\n\r\n  public sha256Hash(bytes: Parameters<typeof sha256HashSync>[0]) {\r\n    return this.performTaskWorker<number[]>('sha256-hash', bytes);\r\n  }\r\n\r\n  public pbkdf2(buffer: Uint8Array, salt: Uint8Array, iterations: number) {\r\n    return this.performTaskWorker<ArrayBuffer>('pbkdf2', buffer, salt, iterations);\r\n  }\r\n\r\n  public aesEncrypt(bytes: Parameters<typeof aesEncryptSync>[0], \r\n    keyBytes: Parameters<typeof aesEncryptSync>[1], \r\n    ivBytes: Parameters<typeof aesEncryptSync>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof aesEncryptSync>>('aes-encrypt', convertToArrayBuffer(bytes), \r\n      convertToArrayBuffer(keyBytes), convertToArrayBuffer(ivBytes));\r\n  }\r\n\r\n  public aesDecrypt(encryptedBytes: Parameters<typeof aesDecryptSync>[0], \r\n    keyBytes: Parameters<typeof aesDecryptSync>[1], \r\n    ivBytes: Parameters<typeof aesDecryptSync>[2]): Promise<ArrayBuffer> {\r\n    return this.performTaskWorker<ArrayBuffer>('aes-decrypt', \r\n      encryptedBytes, keyBytes, ivBytes)\r\n      .then(bytes => convertToArrayBuffer(bytes));\r\n  }\r\n\r\n  public rsaEncrypt(publicKey: {modulus: string, exponent: string}, bytes: any): Promise<number[]> {\r\n    return this.performTaskWorker<number[]>('rsa-encrypt', publicKey, bytes);\r\n  }\r\n\r\n  public factorize(bytes: Uint8Array) {\r\n    return this.performTaskWorker<[number[], number[], number]>('factorize', [...bytes]);\r\n  }\r\n\r\n  public modPow(x: Parameters<typeof bytesModPow>[0], y: Parameters<typeof bytesModPow>[1], m: Parameters<typeof bytesModPow>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof bytesModPow>>('mod-pow', x, y, m);\r\n  }\r\n\r\n  public gzipUncompress<T>(bytes: ArrayBuffer, toString?: boolean) {\r\n    return this.performTaskWorker<T>('gzipUncompress', bytes, toString);\r\n  }\r\n\r\n  public computeSRP(password: string, state: any, isNew = false): Promise<InputCheckPasswordSRP> {\r\n    return this.performTaskWorker('computeSRP', password, state, isNew);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\r\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \r\n} */\r\n\r\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\r\n  str = str.trim();\r\n  if(str.length > limitFrom) {\r\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\r\nexport function escapeRegExp(str: string) {\r\n  return str\r\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n    .replace(/-/g, '\\\\x2d');\r\n}\r\n\r\nexport function encodeEntities(value: string) {\r\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\r\n    var hi = value.charCodeAt(0);\r\n    var low = value.charCodeAt(1);\r\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\r\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\r\n    return '&#' + value.charCodeAt(0) + ';';\r\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n}\r\n\r\nexport function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';//'\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      let overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach(part => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n    \r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n\r\n// https://stackoverflow.com/a/14824756\r\nexport const checkRTL = (s: string) => {           \r\n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\r\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\r\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\r\n\r\n  return rtlDirCheck.test(s);\r\n};\r\n\r\n//(window as any).checkRTL = checkRTL;\r\n\r\nexport function convertInputKeyToKey(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as string;\r\n}\r\n\r\nexport function convertKeyToInputKey(key: string) {\r\n  key = key[0].toUpperCase() + key.slice(1);\r\n  key = 'input' + key;\r\n  return key;\r\n}\r\n\r\nexport function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  bytes = bytes || [];\r\n  let arr: string[] = [];\r\n  for(let i = 0; i < bytes.length; ++i) {\r\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16));\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  let start = 0;\r\n  let bytes: number[] = [];\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes.push(parseInt(hexString.charAt(0), 16));\r\n    ++start;\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes.push(parseInt(hexString.substr(i, 2), 16));\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n}\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if((bytes as Uint8Array).buffer !== undefined) {\r\n    return bytes as Uint8Array;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\nexport function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n}\r\n\r\nexport function bufferConcats(...args: any[]) {\r\n  let length = 0;\r\n  args.forEach(b => length += b.byteLength || b.length);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += b.byteLength || b.length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o: number[] = [];\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o.push((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: ArrayBuffer | Uint8Array) {\r\n  let bytes: Uint8Array;\r\n  if(input instanceof ArrayBuffer) bytes = new Uint8Array(input);\r\n  else bytes = input;\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n"],"sourceRoot":""}