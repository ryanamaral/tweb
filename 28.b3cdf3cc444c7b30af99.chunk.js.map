{"version":3,"sources":["webpack:///./src/pages/pageSignIn.ts"],"names":["btnQr","btnNext","page","test","push","name","phoneCode","code","emoji","pattern","console","log","countries","filter","c","sort","a","b","localeCompare","lastCountrySelected","inputWrapper","document","createElement","classList","add","countryInputField","label","plainText","container","countryInput","input","autocomplete","selectWrapper","arrowDown","append","selectList","appendChild","initSelect","forEach","liArr","split","li","spanEmoji","kek","wrapRichText","outerHTML","span","innerText","addEventListener","e","button","target","tagName","selectCountryByTarget","countryName","childNodes","textContent","querySelector","value","find","telEl","lastValue","hidePicker","setTimeout","focus","hideTimeout","style","display","clearTimeout","undefined","remove","offsetWidth","select","pageEl","parentElement","mouseDownHandlerAttached","onMouseDown","capture","removeEventListener","window","ctrlKey","key","_value","this","toLowerCase","matches","good","indexOf","length","cancelBubble","preventDefault","blur","pasted","telInputField","type","loadLottieWorkers","formatted","country","Math","abs","setLabel","replace","o","visibility","metaKey","shiftKey","onSubmit","signedCheckboxField","text","withRipple","keepSigned","checked","pushToState","toggleStorage","getState","then","state","toggle","phone_number","invokeApi","api_id","id","api_hash","hash","settings","_","m","default","mount","Object","assign","catch","err","setError","error","h4","subtitle","nearestDcResult","dcs","done","this_dc","promise","nearest_dc","getNetworker","Promise","resolve","g","dcId","shift","fileDownload","finally","includes","removeAttribute"],"mappings":"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","file":"28.b3cdf3cc444c7b30af99.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { formatPhoneNumber, putPreloader } from \"../components/misc\";\r\nimport Scrollable from '../components/scrollable';\r\nimport Countries, { Country as _Country } from \"../countries\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from '../lib/richtextprocessor';\r\nimport { attachClickEvent, cancelEvent, replaceContent, toggleDisability } from \"../helpers/dom\";\r\nimport Page from \"./page\";\r\nimport InputField from \"../components/inputField\";\r\nimport CheckboxField from \"../components/checkboxField\";\r\nimport Button from \"../components/button\";\r\nimport { isAppleMobile } from \"../helpers/userAgent\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport App from \"../config/app\";\r\nimport Modes from \"../config/modes\";\r\nimport { _i18n, i18n } from \"../lib/langPack\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { ripple } from \"../components/ripple\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\nimport pageSignQR from \"./pageSignQR\";\r\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\r\n\r\ntype Country = _Country & {\r\n  li?: HTMLLIElement[]\r\n};\r\n\r\n//import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nlet onFirstMount = () => {\r\n  if(Modes.test) {\r\n    Countries.push({\r\n      name: 'Test Country',\r\n      phoneCode: '999 66',\r\n      code: 'TC',\r\n      emoji: '🤔',\r\n      pattern: '999 66 XXX XX'\r\n    });\r\n  \r\n    console.log('Added test country to list!');\r\n  }\r\n\r\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\r\n  const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  let lastCountrySelected: Country = null;\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const countryInputField = new InputField({\r\n    label: 'Login.CountrySelectorLabel',\r\n    name: randomLong(),\r\n    plainText: true\r\n  });\r\n\r\n  countryInputField.container.classList.add('input-select');\r\n\r\n  const countryInput = countryInputField.input as HTMLInputElement;\r\n  countryInput.autocomplete = randomLong();\r\n\r\n  const selectWrapper = document.createElement('div');\r\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n  const arrowDown = document.createElement('span');\r\n  arrowDown.classList.add('arrow', 'arrow-down');\r\n  countryInputField.container.append(arrowDown);\r\n\r\n  const selectList = document.createElement('ul');\r\n  selectWrapper.appendChild(selectList);\r\n\r\n  const scroll = new Scrollable(selectWrapper);\r\n\r\n  let initSelect = () => {\r\n    initSelect = null;\r\n\r\n    countries.forEach((c) => {\r\n      const emoji = c.emoji;\r\n\r\n      const liArr: Array<HTMLLIElement> = [];\r\n      c.phoneCode.split(' and ').forEach((phoneCode: string) => {\r\n        const li = document.createElement('li');\r\n        const spanEmoji = document.createElement('span');\r\n\r\n        const kek = RichTextProcessor.wrapRichText(emoji);\r\n\r\n        li.appendChild(spanEmoji);\r\n        spanEmoji.outerHTML = kek;\r\n  \r\n        li.append(c.name);\r\n\r\n        const span = document.createElement('span');\r\n        span.classList.add('phone-code');\r\n        span.innerText = '+' + phoneCode;\r\n        li.appendChild(span);\r\n\r\n        liArr.push(li);\r\n        selectList.append(li);\r\n      });\r\n\r\n      c.li = liArr;\r\n    });\r\n    \r\n    selectList.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) { // other buttons but left shall not pass\r\n        return;\r\n      }\r\n      \r\n      let target = e.target as HTMLElement;\r\n      if(target.tagName !== 'LI') target = findUpTag(target, 'LI');\r\n      \r\n      selectCountryByTarget(target);\r\n      //console.log('clicked', e, countryName, phoneCode);\r\n    });\r\n\r\n    countryInputField.container.appendChild(selectWrapper);\r\n  };\r\n\r\n  const selectCountryByTarget = (target: HTMLElement) => {\r\n    const countryName = target.childNodes[1].textContent;//target.innerText.split('\\n').shift();\r\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\r\n\r\n    countryInput.value = countryName;\r\n    lastCountrySelected = countries.find(c => c.name === countryName);\r\n    \r\n    telEl.value = lastValue = phoneCode;\r\n    hidePicker();\r\n    setTimeout(() => telEl.focus(), 0);\r\n  };\r\n  \r\n  initSelect();\r\n\r\n  let hideTimeout: number;\r\n\r\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\r\n    if(initSelect) {\r\n      initSelect();\r\n    } else {\r\n      countries.forEach((c) => {\r\n        c.li.forEach(li => li.style.display = '');\r\n      });\r\n    }\r\n\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = undefined;\r\n\r\n    selectWrapper.classList.remove('hide');\r\n    void selectWrapper.offsetWidth; // reflow\r\n    selectWrapper.classList.add('active');\r\n\r\n    countryInputField.select();\r\n\r\n    fastSmoothScroll(page.pageEl.parentElement.parentElement, countryInput, 'start', 4);\r\n\r\n    setTimeout(() => {\r\n      if(!mouseDownHandlerAttached) {\r\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n        mouseDownHandlerAttached = true;\r\n      }\r\n    }, 0);\r\n  });\r\n\r\n  let mouseDownHandlerAttached = false;\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if(findUpClassName(e.target, 'input-select')) {\r\n      return;\r\n    }\r\n    if(e.target === countryInput) {\r\n      return;\r\n    }\r\n\r\n    hidePicker();\r\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n    mouseDownHandlerAttached = false;\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    if(hideTimeout !== undefined) return;\r\n    selectWrapper.classList.remove('active');\r\n    hideTimeout = window.setTimeout(() => {\r\n      selectWrapper.classList.add('hide');\r\n      hideTimeout = undefined;\r\n    }, 200);\r\n  };\r\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\r\n    hidePicker();\r\n    \r\n    e.cancelBubble = true;\r\n  }, {capture: true}); */\r\n\r\n  countryInput.addEventListener('keyup', function(this: typeof countryInput, e) {\r\n    if(e.ctrlKey || e.key === 'Control') return false;\r\n\r\n    //let i = new RegExp('^' + this.value, 'i');\r\n    let _value = this.value.toLowerCase();\r\n    let matches: Country[] = [];\r\n    countries.forEach((c) => {\r\n      let good = c.name.toLowerCase().indexOf(_value) !== -1/*  === 0 */;//i.test(c.name);\r\n\r\n      c.li.forEach(li => li.style.display = good ? '' : 'none');\r\n      if(good) matches.push(c);\r\n    });\r\n\r\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n      if(matches[0].name === lastCountrySelected) return false;\r\n      //console.log('clicking', matches[0]);\r\n\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initEvent('mousedown', true, true);\r\n      matches[0].li[0].dispatchEvent(clickEvent);\r\n      return false;\r\n    } else  */if(matches.length === 0) {\r\n      countries.forEach((c) => {\r\n        c.li.forEach(li => li.style.display = '');\r\n      });\r\n    } else if(matches.length === 1 && e.key === 'Enter') {\r\n      selectCountryByTarget(matches[0].li[0]);\r\n    }\r\n  });\r\n\r\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\r\n    e.cancelBubble = true;\r\n    e.preventDefault();\r\n    if(countryInput.matches(':focus')) countryInput.blur();\r\n    else countryInput.focus();\r\n  });\r\n\r\n  let pasted = false;\r\n  let lastValue = '';\r\n  \r\n  const telInputField = new InputField({\r\n    label: 'Login.PhoneLabel',\r\n    plainText: true,\r\n    name: 'phone'\r\n  });\r\n  let telEl = telInputField.input as HTMLInputElement;\r\n  telEl.type = 'tel';\r\n  telEl.autocomplete = 'rr55RandomRR55';\r\n  telEl.addEventListener('input', function(this: typeof telEl, e) {\r\n    //console.log('input', this.value);\r\n    this.classList.remove('error');\r\n\r\n    lottieLoader.loadLottieWorkers();\r\n\r\n    const value = this.value;\r\n    const diff = Math.abs(value.length - lastValue.length);\r\n    if(diff > 1 && !pasted && isAppleMobile) {\r\n      this.value = lastValue + value;\r\n    }\r\n\r\n    pasted = false;\r\n\r\n    telInputField.setLabel();\r\n\r\n    let formatted: string, country: Country;\r\n    if(this.value.replace(/\\++/, '+') === '+') {\r\n      this.value = '+';\r\n    } else {\r\n      const o = formatPhoneNumber(this.value);\r\n      formatted = o.formatted;\r\n      country = o.country;\r\n      this.value = lastValue = formatted ? '+' + formatted : '';\r\n    }\r\n\r\n    //console.log(formatted, country);\r\n\r\n    let countryName = country ? country.name : ''/* 'Unknown' */;\r\n    if(countryName !== countryInput.value && (!lastCountrySelected || !country || lastCountrySelected.phoneCode !== country.phoneCode)) {\r\n      countryInput.value = countryName;\r\n      lastCountrySelected = country;\r\n    }\r\n\r\n    //if(country && (this.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n    if(country || (this.value.length - 1) > 1) {\r\n      btnNext.style.visibility = '';\r\n    } else {\r\n      btnNext.style.visibility = 'hidden';\r\n    }\r\n  });\r\n\r\n  telEl.addEventListener('paste', (e) => {\r\n    pasted = true;\r\n    //console.log('paste', telEl.value);\r\n  });\r\n\r\n  /* telEl.addEventListener('change', (e) => {\r\n    console.log('change', telEl.value);\r\n  }); */\r\n\r\n  telEl.addEventListener('keypress', function(this: typeof telEl, e) {\r\n    //console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    } else if(/\\D/.test(e.key) && !(e.metaKey || e.ctrlKey) && !(e.key === '+' && e.shiftKey/*  && !this.value */)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  const signedCheckboxField = new CheckboxField({\r\n    text: 'Login.KeepSigned', \r\n    name: 'keepSession',\r\n    withRipple: true\r\n  });\r\n\r\n  signedCheckboxField.input.addEventListener('change', () => {\r\n    const keepSigned = signedCheckboxField.checked;\r\n    appStateManager.pushToState('keepSigned', keepSigned);\r\n    \r\n    AppStorage.toggleStorage(keepSigned);\r\n    CacheStorageController.toggleStorage(keepSigned);\r\n    apiManager.toggleStorage(keepSigned);\r\n  });\r\n\r\n  appStateManager.getState().then(state => {\r\n    signedCheckboxField.checked = state.keepSigned;\r\n  });\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    //return;\r\n\r\n    let phone_number = telEl.value;\r\n    apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings' // that's how we sending Type\r\n      }\r\n      //lang_code: navigator.language || 'en'\r\n    }).then((code) => {\r\n      //console.log('got code', code);\r\n\r\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch(err => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  let qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    pageSignQR.mount();\r\n    /* const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then(module => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    }); */\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  let tryAgain = () => {\r\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const dcs = [1, 2, 3, 4, 5];\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc)\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        const g = () => {\r\n          const dcId = dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            apiManager.getNetworker(dcId, {fileDownload: true}).finally(g);\r\n          }, done.includes(dcId) ? 0 : 3000);\r\n        };\r\n        \r\n        g();\r\n      });\r\n      \r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      let country = countries.find((c) => c.code === nearestDcResult.country);\r\n      if(country) {\r\n        if(!countryInput.value.length && !telEl.value.length) {\r\n          countryInput.value = country.name;\r\n          lastCountrySelected = country;\r\n          telEl.value = lastValue = '+' + country.phoneCode.split(' and ').shift();\r\n        }\r\n      }\r\n  \r\n      //console.log('woohoo', nearestDcResult, country);\r\n    })//.catch(tryAgain);\r\n  };\r\n\r\n  if(!isTouchSupported) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  getLanguageChangeButton(inputWrapper);\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n"],"sourceRoot":""}