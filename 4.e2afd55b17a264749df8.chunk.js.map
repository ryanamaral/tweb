{"version":3,"sources":["webpack:///./src/lib/appManagers/appStateManager.ts","webpack:///./src/helpers/mediaSizes.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/helpers/dom/whichChild.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/components/animationIntersector.ts","webpack:///./src/helpers/number.ts","webpack:///./src/components/transition.ts","webpack:///./src/components/horizontalMenu.ts","webpack:///./src/helpers/dom/findUpAsChild.ts","webpack:///./src/helpers/animation.ts"],"names":["STATE_VERSION","version","STATE_INIT","allDialogsLoaded","pinnedOrders","contactsList","updates","filters","maxSeenMsgId","stateCreatedTime","Date","now","recentEmoji","topPeers","recentSearch","authState","_","hiddenPinnedMessages","settings","messagesTextSize","sendShortcut","animationsEnabled","autoDownload","contacts","private","groups","channels","autoPlay","gifs","videos","stickers","suggest","loop","themes","name","background","type","blur","slug","highlightningColor","color","theme","notifications","sound","keepSigned","ALL_KEYS","Object","keys","REFRESH_KEYS","AppStateManager","super","log","neededPeers","Map","singlePeerMap","storages","users","storeName","chats","dialogs","storagesResults","storage","this","loadSavedState","loaded","console","time","Promise","resolve","storagesKeys","storagesPromises","map","key","getAll","promises","concat","get","all","then","arr","state","i","length","value","undefined","pushToState","splice","auth","shift","broadcast","id","forEach","s","hasOwnProperty","nightTheme","find","t","missingKey","timeEnd","catch","first","split","direct","set","peerId","limit","has","Set","add","dispatchEvent","keepPeerSingle","existsPeerId","delete","size","appStateManager","ScreenSize","MediaSizes","screenSizes","mobile","medium","large","sizes","handhelds","regular","width","height","webpage","album","esgSticker","desktop","isMobile","handleResize","innerWidth","window","activeScreen","wasScreen","active","addEventListener","rAF","cancelAnimationFrame","requestAnimationFrame","mediaSizes","Worker_fn","Worker","convert","Math","round","min","max","el","worker","options","reqId","paused","direction","speed","autoplay","group","frames","cachingDelta","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","devicePixelRatio","needUpscale","noCache","Infinity","canvas","document","createElement","classList","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","args","sendQuery","jsonString","setMainLoop","clearPendingRAF","clearTimeout","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","err","error","frInterval","delta","frThen","setTimeout","renderFrame2","renderFrame","fps","method","mainLoopForwards","mainLoopBackwards","bind","currentMethod","frameListener","listenerResults","diff","appendChild","defaultListener","onError","onerror","onmessage","event","queryMethodListener","queryMethodArguments","call","message","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","push","buffer","isWebAssemblySupported","loadPromise","reject","workersLimit","players","workers","curWorkerNum","logger","Error","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","animationIntersector","getAnimations","animation","checkAnimation","element","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","smth","ty","k","c","foundReplacement","p","applyTo","iterateIt","it","layer","layers","shapes","shape","params","url","loadLottieWorkers","fetch","res","arrayBuffer","gzipUncompress","str","loadAnimationWorker","assign","animationData","race","newAnimationData","JSON","parse","applyReplacements","stringify","parseInt","container","style","initPlayer","addAnimation","idx","loadFromData","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","querySelector","selectTab","horizontalMenu","page","onShown","isAuthPage","display","whichChild","pageEl","fastSmoothScroll","firstElementChild","className","onFirstMount","onMount","installed","body","setPage","isAnimating","heavyAnimationPromise","promisesInQueue","dispatchHeavyAnimationEvent","promise","timeout","finally","filter","Boolean","perf","performance","_heavyAnimationPromise","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","remove","removeManual","removeEventListener","isInDOM","isConnected","elem","parentNode","previousElementSibling","FocusDirection","position","margin","maxDistance","forceDirection","forceDuration","axis","Static","scrollWithJs","getBoundingClientRect","elementRect","containerRect","offsetTop","top","scrollTop","Up","Down","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementPosition","elementSize","containerSize","scrollPosition","scrollSize","path","remainingPath","target","duration","abs","startAt","tick","currentPath","transition","visible","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","idle","isIDLE","entry","isIntersecting","clearCache","on","doc","checkAnimations","found","HTMLVideoElement","src","load","findAndSplice","unobserve","observe","blurred","destroy","removeAnimation","animations","refreshGroup","numberThousandSplitter","x","joiner","parts","toString","replace","join","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","formatNumber","clamp","v","slideNavigation","tabContent","prevTabContent","toRight","elements","reverse","transform","offsetWidth","slideTabs","TransitionSlider","content","transitionTime","onTransitionEnd","isHeavy","animationFunction","dataset","Transition","onTransitionEndCallbacks","animationDeferred","animationStarted","from","animate","self","HTMLElement","prevId","_from","to","children","onTransitionEndCallback","toggle","callback","e","parentElement","tabs","onClick","scrollableX","proxy","Proxy","apply","that","selectTarget","canChange","scrollIntoViewNew","rootScope","contains","prev","tagName","toLowerCase","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","parent","findUpAsChild","tab","instances","cancelAnimationByKey","instance","getAnimationInstance","isCancelled","deferred","animateSingle","createAnimationInstance"],"mappings":"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","file":"4.e2afd55b17a264749df8.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Dialog } from './appMessagesManager';\r\nimport type { UserAuth } from '../mtproto/mtproto_config';\r\nimport type { User } from './appUsersManager';\r\nimport type { AuthState } from '../../types';\r\nimport type FiltersStorage from '../storages/filters';\r\nimport type DialogsStorage from '../storages/dialogs';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport rootScope from '../rootScope';\r\nimport sessionStorage from '../sessionStorage';\r\nimport { logger } from '../logger';\r\nimport { copy, setDeepProperty, validateInitObject } from '../../helpers/object';\r\nimport App from '../../config/app';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport AppStorage from '../storage';\r\nimport { Chat } from '../../layer';\r\nimport { isMobile } from '../../helpers/userAgent';\r\n\r\nconst REFRESH_EVERY = 24 * 60 * 60 * 1000; // 1 day\r\nconst STATE_VERSION = App.version;\r\n\r\nexport type Background = {\r\n  type: 'color' | 'image' | 'default',\r\n  blur: boolean,\r\n  highlightningColor?: string,\r\n  color?: string,\r\n  slug?: string,\r\n};\r\n\r\nexport type Theme = {\r\n  name: 'day' | 'night' | 'system',\r\n  background: Background\r\n};\r\n\r\nexport type State = {\r\n  allDialogsLoaded: DialogsStorage['allDialogsLoaded'],\r\n  pinnedOrders: DialogsStorage['pinnedOrders'],\r\n  contactsList: number[],\r\n  updates: Partial<{\r\n    seq: number,\r\n    pts: number,\r\n    date: number\r\n  }>,\r\n  filters: FiltersStorage['filters'],\r\n  maxSeenMsgId: number,\r\n  stateCreatedTime: number,\r\n  recentEmoji: string[],\r\n  topPeers: number[],\r\n  recentSearch: number[],\r\n  version: typeof STATE_VERSION,\r\n  authState: AuthState,\r\n  hiddenPinnedMessages: {[peerId: string]: number},\r\n  settings: {\r\n    messagesTextSize: number,\r\n    sendShortcut: 'enter' | 'ctrlEnter',\r\n    animationsEnabled: boolean,\r\n    autoDownload: {\r\n      contacts: boolean\r\n      private: boolean\r\n      groups: boolean\r\n      channels: boolean\r\n    },\r\n    autoPlay: {\r\n      gifs: boolean,\r\n      videos: boolean\r\n    },\r\n    stickers: {\r\n      suggest: boolean,\r\n      loop: boolean\r\n    },\r\n    background?: Background, // ! DEPRECATED\r\n    themes: Theme[],\r\n    theme: Theme['name'],\r\n    notifications: {\r\n      sound: boolean\r\n    },\r\n    nightTheme?: boolean, // ! DEPRECATED\r\n  },\r\n  keepSigned: boolean\r\n};\r\n\r\nexport const STATE_INIT: State = {\r\n  allDialogsLoaded: {},\r\n  pinnedOrders: {},\r\n  contactsList: [],\r\n  updates: {},\r\n  filters: {},\r\n  maxSeenMsgId: 0,\r\n  stateCreatedTime: Date.now(),\r\n  recentEmoji: [],\r\n  topPeers: [],\r\n  recentSearch: [],\r\n  version: STATE_VERSION,\r\n  authState: {\r\n    _: isMobile ? 'authStateSignIn' : 'authStateSignQr'\r\n  },\r\n  hiddenPinnedMessages: {},\r\n  settings: {\r\n    messagesTextSize: 16,\r\n    sendShortcut: 'enter',\r\n    animationsEnabled: true,\r\n    autoDownload: {\r\n      contacts: true,\r\n      private: true,\r\n      groups: true,\r\n      channels: true\r\n    },\r\n    autoPlay: {\r\n      gifs: true,\r\n      videos: true\r\n    },\r\n    stickers: {\r\n      suggest: true,\r\n      loop: true\r\n    },\r\n    themes: [{\r\n      name: 'day',\r\n      background: {\r\n        type: 'image',\r\n        blur: false,\r\n        slug: 'ByxGo2lrMFAIAAAAmkJxZabh8eM', // * new blurred camomile,\r\n        highlightningColor: 'hsla(85.5319, 36.9171%, 40.402%, 0.4)'\r\n      }\r\n    }, {\r\n      name: 'night',\r\n      background: {\r\n        type: 'color',\r\n        blur: false,\r\n        color: '#0f0f0f',\r\n        highlightningColor: 'hsla(0, 0%, 3.82353%, 0.4)'\r\n      }\r\n    }],\r\n    theme: 'system',\r\n    notifications: {\r\n      sound: false\r\n    }\r\n  },\r\n  keepSigned: true\r\n};\r\n\r\nconst ALL_KEYS = Object.keys(STATE_INIT) as any as Array<keyof State>;\r\n\r\nconst REFRESH_KEYS = ['dialogs', 'allDialogsLoaded', 'messages', 'contactsList', 'stateCreatedTime',\r\n  'updates', 'maxSeenMsgId', 'filters', 'topPeers', 'pinnedOrders'] as any as Array<keyof State>;\r\n\r\nexport class AppStateManager extends EventListenerBase<{\r\n  save: (state: State) => Promise<void>,\r\n  peerNeeded: (peerId: number) => void,\r\n  peerUnneeded: (peerId: number) => void,\r\n}> {\r\n  public static STATE_INIT = STATE_INIT;\r\n  private loaded: Promise<State>;\r\n  private log = logger('STATE'/* , LogLevels.error */);\r\n\r\n  private state: State;\r\n\r\n  private neededPeers: Map<number, Set<string>> = new Map();\r\n  private singlePeerMap: Map<string, number> = new Map();\r\n\r\n  public storages = {\r\n    users: new AppStorage<Record<number, User>>({\r\n      storeName: 'users'\r\n    }),\r\n\r\n    chats: new AppStorage<Record<number, Chat>>({\r\n      storeName: 'chats'\r\n    }),\r\n\r\n    dialogs: new AppStorage<Record<number, Dialog>>({\r\n      storeName: 'dialogs'\r\n    })\r\n  };\r\n\r\n  public storagesResults: {[key in keyof AppStateManager['storages']]: any[]} = {} as any;\r\n\r\n  public storage = sessionStorage;\r\n\r\n  constructor() {\r\n    super();\r\n    this.loadSavedState();\r\n  }\r\n\r\n  public loadSavedState(): Promise<State> {\r\n    if(this.loaded) return this.loaded;\r\n    console.time('load state');\r\n    this.loaded = new Promise((resolve) => {\r\n      const storagesKeys = Object.keys(this.storages) as Array<keyof AppStateManager['storages']>;\r\n      const storagesPromises = storagesKeys.map(key => this.storages[key].getAll());\r\n\r\n      const promises = ALL_KEYS\r\n      .concat('user_auth' as any)\r\n      .map(key => sessionStorage.get(key))\r\n      .concat(storagesPromises);\r\n\r\n      Promise.all(promises).then((arr) => {\r\n        /* const self = this;\r\n        const skipHandleKeys = new Set(['isProxy', 'filters', 'drafts']);\r\n        const getHandler = (path?: string) => {\r\n          return {\r\n            get(target: any, key: any) {\r\n              if(key === 'isProxy') {\r\n                return true;\r\n              }\r\n\r\n              const prop = target[key];\r\n\r\n              if(prop !== undefined && !skipHandleKeys.has(key) && !prop.isProxy && typeof(prop) === 'object') {\r\n                target[key] = new Proxy(prop, getHandler(path || key));\r\n                return target[key];\r\n              }\r\n              \r\n              return prop;\r\n            },\r\n            set(target: any, key: any, value: any) {\r\n              console.log('Setting', target, `.${key} to equal`, value, path);\r\n          \r\n              target[key] = value;\r\n\r\n              // @ts-ignore\r\n              self.pushToState(path || key, path ? self.state[path] : value, false);\r\n\r\n              return true;\r\n            }\r\n          };\r\n        }; */\r\n\r\n        let state: State = this.state = {} as any;\r\n\r\n        // ! then can't store false values\r\n        for(let i = 0, length = ALL_KEYS.length; i < length; ++i) {\r\n          const key = ALL_KEYS[i];\r\n          const value = arr[i];\r\n          if(value !== undefined) {\r\n            // @ts-ignore\r\n            state[key] = value;\r\n          } else {\r\n            this.pushToState(key, copy(STATE_INIT[key]));\r\n          }\r\n        }\r\n\r\n        arr.splice(0, ALL_KEYS.length);\r\n\r\n        // * Read auth\r\n        const auth: UserAuth = arr.shift() as any;\r\n        if(auth) {\r\n          // ! Warning ! DON'T delete this\r\n          state.authState = {_: 'authStateSignedIn'};\r\n          rootScope.broadcast('user_auth', typeof(auth) !== 'number' ? (auth as any).id : auth); // * support old version\r\n        }\r\n\r\n        // * Read storages\r\n        for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n          this.storagesResults[storagesKeys[i]] = arr[i];\r\n        }\r\n\r\n        arr.splice(0, storagesKeys.length);\r\n\r\n        const time = Date.now();\r\n        if((state.stateCreatedTime + REFRESH_EVERY) < time) {\r\n          if(DEBUG) {\r\n            this.log('will refresh state', state.stateCreatedTime, time);\r\n          }\r\n          \r\n          REFRESH_KEYS.forEach(key => {\r\n            this.pushToState(key, copy(STATE_INIT[key]));\r\n\r\n            // @ts-ignore\r\n            const s = this.storagesResults[key];\r\n            if(s && s.length) {\r\n              s.length = 0;\r\n            }\r\n          });\r\n        }\r\n        \r\n        //state = this.state = new Proxy(state, getHandler());\r\n\r\n        // * support old version\r\n        if(!state.settings.hasOwnProperty('theme') && state.settings.hasOwnProperty('nightTheme')) {\r\n          state.settings.theme = state.settings.nightTheme ? 'night' : 'day';\r\n          this.pushToState('settings', state.settings);\r\n        }\r\n\r\n        // * support old version\r\n        if(!state.settings.hasOwnProperty('themes') && state.settings.background) {\r\n          state.settings.themes = copy(STATE_INIT.settings.themes);\r\n          const theme = state.settings.themes.find(t => t.name === state.settings.theme);\r\n          if(theme) {\r\n            theme.background = state.settings.background;\r\n            this.pushToState('settings', state.settings);\r\n          }\r\n        }\r\n\r\n        validateInitObject(STATE_INIT, state, (missingKey) => {\r\n          // @ts-ignore\r\n          this.pushToState(missingKey, state[missingKey]);\r\n        });\r\n\r\n        if(state.version !== STATE_VERSION) {\r\n          this.pushToState('version', STATE_VERSION);\r\n        }\r\n\r\n        // ! probably there is better place for it\r\n        rootScope.settings = state.settings;\r\n\r\n        if(DEBUG) {\r\n          this.log('state res', state, copy(state));\r\n        }\r\n        \r\n        //return resolve();\r\n\r\n        console.timeEnd('load state');\r\n        resolve(state);\r\n      }).catch(resolve);\r\n    });\r\n\r\n    return this.loaded;\r\n  }\r\n\r\n  public getState() {\r\n    return this.state === undefined ? this.loadSavedState() : Promise.resolve(this.state);\r\n  }\r\n\r\n  public setByKey(key: string, value: any) {\r\n    setDeepProperty(this.state, key, value);\r\n    rootScope.broadcast('settings_updated', {key, value});\r\n\r\n    const first = key.split('.')[0];\r\n    // @ts-ignore\r\n    this.pushToState(first, this.state[first]);\r\n  }\r\n\r\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true) {\r\n    if(direct) {\r\n      this.state[key] = value;\r\n    }\r\n\r\n    sessionStorage.set({\r\n      [key]: value\r\n    });\r\n  }\r\n\r\n  public requestPeer(peerId: number, type: string, limit?: number) {\r\n    let set = this.neededPeers.get(peerId);\r\n    if(set && set.has(type)) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = new Set();\r\n      this.neededPeers.set(peerId, set);\r\n    }\r\n\r\n    set.add(type);\r\n    this.dispatchEvent('peerNeeded', peerId);\r\n\r\n    if(limit !== undefined) {\r\n      this.keepPeerSingle(peerId, type);\r\n    }\r\n  }\r\n\r\n  public isPeerNeeded(peerId: number) {\r\n    return this.neededPeers.has(peerId);\r\n  }\r\n\r\n  public keepPeerSingle(peerId: number, type: string) {\r\n    const existsPeerId = this.singlePeerMap.get(type);\r\n    if(existsPeerId && existsPeerId !== peerId && this.neededPeers.has(existsPeerId)) {\r\n      const set = this.neededPeers.get(existsPeerId);\r\n      set.delete(type);\r\n\r\n      if(!set.size) {\r\n        this.neededPeers.delete(existsPeerId);\r\n        this.dispatchEvent('peerUnneeded', existsPeerId);\r\n      }\r\n    }\r\n\r\n    if(peerId) {\r\n      this.singlePeerMap.set(type, peerId);\r\n    }\r\n  }\r\n\r\n  /* public resetState() {\r\n    for(let i in this.state) {\r\n      // @ts-ignore\r\n      this.state[i] = false;\r\n    }\r\n    sessionStorage.set(this.state).then(() => {\r\n      location.reload();\r\n    });\r\n  } */\r\n}\r\n\r\n//console.trace('appStateManager include');\r\n\r\nconst appStateManager = new AppStateManager();\r\nMOUNT_CLASS_TO.appStateManager = appStateManager;\r\nexport default appStateManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport EventListenerBase from \"./eventListenerBase\";\r\n\r\ntype Size = Partial<{width: number, height: number}>;\r\ntype Sizes = {\r\n  regular: Size,\r\n  webpage: Size,\r\n  album: Size,\r\n  esgSticker: Size\r\n};\r\n\r\nexport enum ScreenSize {\r\n  mobile,\r\n  medium,\r\n  large\r\n}\r\n\r\nconst MOBILE_SIZE = 600;\r\nconst MEDIUM_SIZE = 1275;\r\nconst LARGE_SIZE = 1680;\r\n\r\nclass MediaSizes extends EventListenerBase<{\r\n  changeScreen: (from: ScreenSize, to: ScreenSize) => void\r\n}> {\r\n  private screenSizes: {key: ScreenSize, value: number}[] = [\r\n    {key: ScreenSize.mobile, value: MOBILE_SIZE},\r\n    {key: ScreenSize.medium, value: MEDIUM_SIZE},\r\n    {key: ScreenSize.large, value: LARGE_SIZE}\r\n  ];\r\n\r\n  private sizes: {[k in 'desktop' | 'handhelds']: Sizes} = {\r\n    handhelds: {\r\n      regular: {\r\n        width: 270,\r\n        height: 270\r\n      },\r\n      webpage: {\r\n        width: 270,\r\n        height: 200\r\n      },\r\n      album: {\r\n        width: 270,\r\n        height: 0\r\n      },\r\n      esgSticker: {\r\n        width: 68,\r\n        height: 68\r\n      }\r\n    },\r\n    desktop: {\r\n      regular: {\r\n        width: 400,\r\n        height: 320\r\n      },\r\n      webpage: {\r\n        width: 400,\r\n        height: 320\r\n      },\r\n      album: {\r\n        width: 420,\r\n        height: 0\r\n      },\r\n      esgSticker: {\r\n        width: 80,\r\n        height: 80\r\n      }\r\n    }\r\n  };\r\n\r\n  public isMobile = false;\r\n  public active: Sizes;\r\n  public activeScreen: ScreenSize;\r\n  public rAF: number;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    window.addEventListener('resize', () => {\r\n      if(this.rAF) window.cancelAnimationFrame(this.rAF);\r\n      this.rAF = window.requestAnimationFrame(() => {\r\n        this.handleResize();\r\n        this.rAF = 0;\r\n      });\r\n    });\r\n    this.handleResize();\r\n  }\r\n\r\n  private handleResize = () => {\r\n    const innerWidth = window.innerWidth;\r\n    //this.isMobile = innerWidth <= 720;\r\n    \r\n    let activeScreen = this.screenSizes[0].key;\r\n    for(let i = this.screenSizes.length - 1; i >= 0; --i) {\r\n      if(this.screenSizes[i].value < innerWidth) {\r\n        activeScreen = (this.screenSizes[i + 1] || this.screenSizes[i]).key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const wasScreen = this.activeScreen;\r\n    this.activeScreen = activeScreen;\r\n    this.isMobile = this.activeScreen === ScreenSize.mobile;\r\n    this.active = this.isMobile ? this.sizes.handhelds : this.sizes.desktop;\r\n\r\n    //console.time('esg');\r\n    //const computedStyle = window.getComputedStyle(document.documentElement);\r\n    //this.active.esgSticker.width = parseFloat(computedStyle.getPropertyValue('--esg-sticker-size'));\r\n    //console.timeEnd('esg');\r\n\r\n    if(wasScreen !== activeScreen) {\r\n      //console.log('changeScreen', this.activeScreen, activeScreen);\r\n\r\n      if(wasScreen !== undefined) {\r\n        this.dispatchEvent('changeScreen', this.activeScreen, activeScreen);\r\n      }\r\n    }\r\n\r\n    /* if(this.isMobile) {\r\n      for(let i in this.active) {\r\n        // @ts-ignore\r\n        let size = this.active[i];\r\n        size.width = innerWidth \r\n      }\r\n    } */\r\n  };\r\n}\r\n\r\nconst mediaSizes = new MediaSizes();\r\nMOUNT_CLASS_TO.mediaSizes = mediaSizes;\r\nexport default mediaSizes;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.86bed2789739b353d39d.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\r\nimport animationIntersector from \"../components/animationIntersector\";\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { clamp } from '../helpers/number';\r\nimport { pause } from '../helpers/schedulers';\r\nimport { isAndroid, isApple, isAppleMobile, isSafari } from \"../helpers/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\n\r\nlet convert = (value: number) => {\r\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\r\n};\r\n\r\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\r\ntype RLottieOptions = {\r\n  container: HTMLElement, \r\n  autoplay?: boolean, \r\n  animationData: string, \r\n  loop?: boolean, \r\n  width?: number,\r\n  height?: number,\r\n  group?: string,\r\n  noCache?: true,\r\n  needUpscale?: true,\r\n  skipRatio?: number\r\n};\r\n\r\nexport class RLottiePlayer extends EventListenerBase<{\r\n  enterFrame: (frameNo: number) => void,\r\n  ready: () => void,\r\n  firstFrame: () => void,\r\n  cached: () => void\r\n}> {\r\n  public static reqId = 0;\r\n\r\n  public reqId = 0;\r\n  public curFrame: number;\r\n  public frameCount: number;\r\n  public fps: number;\r\n  public skipDelta: number;\r\n\r\n  public worker: QueryableWorker;\r\n  \r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  public el: HTMLElement;\r\n  public canvas: HTMLCanvasElement;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public paused = true;\r\n  //public paused = false;\r\n  public direction = 1;\r\n  public speed = 1;\r\n  public autoplay = true;\r\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public loop = true;\r\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public group = '';\r\n\r\n  private frInterval: number;\r\n  private frThen: number;\r\n  private rafId: number;\r\n\r\n  //private caching = false;\r\n  //private removed = false;\r\n\r\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\r\n  public imageData: ImageData;\r\n  public clamped: Uint8ClampedArray;\r\n  public cachingDelta = 0;\r\n\r\n  //private playedTimes = 0;\r\n\r\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\r\n  private frameListener: () => void;\r\n\r\n  constructor({el, worker, options}: {\r\n    el: HTMLElement,\r\n    worker: QueryableWorker,\r\n    options: RLottieOptions\r\n  }) {\r\n    super(true);\r\n\r\n    this.reqId = ++RLottiePlayer['reqId'];\r\n    this.el = el;\r\n    this.worker = worker;\r\n\r\n    for(let i in options) {\r\n      if(this.hasOwnProperty(i)) {\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    this._loop = this.loop;\r\n    this._autoplay = this.autoplay;\r\n\r\n    // * Skip ratio (30fps)\r\n    let skipRatio: number;\r\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\r\n    else if((isAndroid || isAppleMobile || (isApple && !isSafari)) && this.width < 100 && this.height < 100) {\r\n      skipRatio = 0.5;\r\n    }\r\n\r\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\r\n\r\n    //options.needUpscale = true;\r\n\r\n    // * Pixel ratio\r\n    //const pixelRatio = window.devicePixelRatio;\r\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\r\n    if(pixelRatio > 1) {\r\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\r\n      if(options.needUpscale) {\r\n        this.width = Math.round(this.width * pixelRatio);\r\n        this.height = Math.round(this.height * pixelRatio);\r\n      } else if(pixelRatio > 1) {\r\n        if(this.width > 100 && this.height > 100) {\r\n          if(isApple || !mediaSizes.isMobile) {\r\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\r\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\r\n            this.width = Math.round(this.width * pixelRatio);\r\n            this.height = Math.round(this.height * pixelRatio);\r\n          } else if(pixelRatio > 2.5) {\r\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\r\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\r\n          }\r\n        } else {\r\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\r\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\r\n        }\r\n      }\r\n    }\r\n\r\n    //options.noCache = true;\r\n    \r\n    // * Cache frames params\r\n    if(!options.noCache/*  && false */) {\r\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\r\n      if(isApple && this.width > 100 && this.height > 100) {\r\n        this.cachingDelta = 2; //2 // 50%\r\n      } else if(this.width < 100 && this.height < 100) {\r\n        this.cachingDelta = Infinity; // 100%\r\n      } else {\r\n        this.cachingDelta = 4; // 75%\r\n      }\r\n    }\r\n    \r\n    // this.cachingDelta = Infinity;\r\n    // if(isApple) {\r\n    //   this.cachingDelta = 0; //2 // 50%\r\n    // }\r\n\r\n    /* this.width *= 0.8;\r\n    this.height *= 0.8; */\r\n    \r\n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('rlottie');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    this.context = this.canvas.getContext('2d');\r\n\r\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n    this.imageData = new ImageData(this.width, this.height);\r\n  }\r\n\r\n  public clearCache() {\r\n    this.frames = {};\r\n  }\r\n\r\n  public sendQuery(methodName: string, ...args: any[]) {\r\n    //console.trace('RLottie sendQuery:', methodName);\r\n    this.worker.sendQuery(methodName, this.reqId, ...args);\r\n  }\r\n\r\n  public loadFromData(jsonString: string) {\r\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\r\n  }\r\n\r\n  public play() {\r\n    if(!this.paused) return;\r\n\r\n    //return;\r\n\r\n    //console.log('RLOTTIE PLAY' + this.reqId);\r\n\r\n    this.paused = false;\r\n    this.setMainLoop();\r\n  }\r\n\r\n  public pause(clearPendingRAF = true) {\r\n    if(this.paused) return;\r\n\r\n    this.paused = true;\r\n    if(clearPendingRAF) {\r\n      clearTimeout(this.rafId);\r\n    }\r\n    //window.cancelAnimationFrame(this.rafId);\r\n  }\r\n\r\n  public stop(renderFirstFrame = true) {\r\n    this.pause();\r\n\r\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\r\n    if(renderFirstFrame) {\r\n      this.requestFrame(this.curFrame);\r\n      //this.sendQuery('renderFrame', this.curFrame);\r\n    }\r\n  }\r\n\r\n  public restart() {\r\n    this.stop(false);\r\n    this.play();\r\n  }\r\n\r\n  public setSpeed(speed: number) {\r\n    this.speed = speed;\r\n\r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public setDirection(direction: number) {\r\n    this.direction = direction;\r\n    \r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public remove() {\r\n    //alert('remove');\r\n    lottieLoader.onDestroy(this.reqId);\r\n    this.pause();\r\n    this.sendQuery('destroy');\r\n    //this.removed = true;\r\n  }\r\n\r\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\r\n    /* this.setListenerResult('enterFrame', frameNo);\r\n    return; */\r\n\r\n    try {\r\n      this.imageData.data.set(frame);\r\n      \r\n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\r\n      //let perf = performance.now();\r\n      this.context.putImageData(this.imageData, 0, 0);\r\n      //console.log('renderFrame2 perf:', performance.now() - perf);\r\n    } catch(err) {\r\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\r\n      this.autoplay = false;\r\n      this.pause();\r\n      return;\r\n    }\r\n    \r\n    //console.log('set result enterFrame', frameNo);\r\n    this.dispatchEvent('enterFrame', frameNo);\r\n  }\r\n\r\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\r\n    //console.log('renderFrame', frameNo, this);\r\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\r\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\r\n    }\r\n\r\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\r\n      this.setListenerResult('enterFrame', frameNo);\r\n      if(frameNo === (this.frameCount - 1)) {\r\n        this.setListenerResult('cached');\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    if(this.frInterval) {\r\n      const now = Date.now(), delta = now - this.frThen;\r\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\r\n\r\n      if(delta < 0) {\r\n        if(this.rafId) clearTimeout(this.rafId);\r\n        return this.rafId = window.setTimeout(() => {\r\n          this.renderFrame2(frame, frameNo);\r\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\r\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\r\n      }\r\n    }\r\n\r\n    this.renderFrame2(frame, frameNo);\r\n  }\r\n\r\n  public requestFrame(frameNo: number) {\r\n    if(this.frames[frameNo]) {\r\n      this.renderFrame(this.frames[frameNo], frameNo);\r\n    } else if(isSafari) {\r\n      this.sendQuery('renderFrame', frameNo);\r\n    } else {\r\n      if(!this.clamped.length) { // fix detached\r\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n      }\r\n      \r\n      this.sendQuery('renderFrame', frameNo, this.clamped);\r\n    }\r\n  }\r\n\r\n  private mainLoopForwards() {\r\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\r\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame + this.skipDelta) >= this.frameCount) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n  private mainLoopBackwards() {\r\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\r\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame - this.skipDelta) < 0) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public setMainLoop() {\r\n    //window.cancelAnimationFrame(this.rafId);\r\n    clearTimeout(this.rafId);\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n\r\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\r\n\r\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\r\n    this.currentMethod = method;\r\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\r\n\r\n    //setTimeout(() => {\r\n      //this.addListener('enterFrame', this.frameListener);\r\n    //}, 0);\r\n\r\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\r\n      this.frameListener();\r\n    }\r\n  \r\n    //this.mainLoop(method);\r\n    //this.r(method);\r\n    //method();\r\n  }\r\n\r\n  public async onLoad(frameCount: number, fps: number) {\r\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\r\n    this.frameCount = frameCount;\r\n    this.fps = fps;\r\n\r\n    // * Handle 30fps stickers if 30fps set\r\n    if(this.fps < 60 && this.skipDelta !== 1) {\r\n      const diff = 60 / fps;\r\n      this.skipDelta = this.skipDelta / diff | 0;\r\n    }\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n    //this.sendQuery('renderFrame', 0);\r\n    \r\n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \r\n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \r\n\r\n    /* console.time('cache' + this.reqId);\r\n    for(let i = 0; i < frameCount; ++i) {\r\n      //if(this.removed) return;\r\n      \r\n      if(i % 4) {\r\n        await new Promise((resolve) => {\r\n          delete this.listenerResults.enterFrame;\r\n          this.addListener('enterFrame', resolve, true);\r\n          this.requestFrame(i);\r\n        });  \r\n      }\r\n    }\r\n    \r\n    console.timeEnd('cache' + this.reqId); */\r\n    //console.log('cached');\r\n    /* this.el.innerHTML = '';\r\n    this.el.append(this.canvas);\r\n    return; */\r\n\r\n    this.requestFrame(0);\r\n    this.dispatchEvent('ready');\r\n    this.addEventListener('enterFrame', () => {\r\n      this.dispatchEvent('firstFrame');\r\n\r\n      this.el.appendChild(this.canvas);\r\n\r\n      //console.log('enterFrame firstFrame');\r\n \r\n      //let lastTime = this.frThen;\r\n      this.frameListener = () => {\r\n        if(this.paused) {\r\n          return;\r\n        }\r\n\r\n        const time = Date.now();\r\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\r\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\r\n          return;\r\n        } */\r\n\r\n        //lastTime = time;\r\n\r\n        this.frThen = time + this.frInterval;\r\n        const canContinue = this.currentMethod();\r\n        if(!canContinue && !this.loop && this.autoplay) {\r\n          this.autoplay = false;\r\n        }\r\n      };\r\n\r\n      this.addEventListener('enterFrame', this.frameListener);\r\n    }, true);\r\n  }\r\n}\r\n\r\nclass QueryableWorker extends EventListenerBase<any> {\r\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\r\n    super();\r\n\r\n    if(onError) {\r\n      this.worker.onerror = onError;\r\n    }\r\n\r\n    this.worker.onmessage = (event) => {\r\n      //return;\r\n      //console.log('worker onmessage', event.data);\r\n      if(event.data instanceof Object &&\r\n        event.data.hasOwnProperty('queryMethodListener') &&\r\n        event.data.hasOwnProperty('queryMethodArguments')) {\r\n        /* if(event.data.queryMethodListener === 'frame') {\r\n          return;\r\n        } */\r\n\r\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\r\n      } else {\r\n        this.defaultListener.call(this, event.data);\r\n      }\r\n    };\r\n  }\r\n\r\n  public postMessage(message: any) {\r\n    this.worker.postMessage(message);\r\n  }\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n\r\n  public sendQuery(queryMethod: string, ...args: any[]) {\r\n    if(isSafari) {\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      });\r\n    } else {\r\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\r\n      const transfer: ArrayBuffer[] = [];\r\n      args.forEach(arg => {\r\n        if(arg instanceof ArrayBuffer) {\r\n          transfer.push(arg);\r\n        }\r\n  \r\n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\r\n          transfer.push(arg.buffer);\r\n        }\r\n      });\r\n  \r\n      //console.log('transfer', transfer);\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      }, transfer as PostMessageOptions);\r\n    }\r\n  }\r\n}\r\n\r\ntype LottieShape = {\r\n  c: {\r\n    k: number[]\r\n  },\r\n  ty: 'st' | 'fl',\r\n  it?: LottieShape[]\r\n};\r\nclass LottieLoader {\r\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\r\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\r\n  public loaded = false;\r\n\r\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\r\n  private static COLORREPLACEMENTS = [\r\n    [\r\n      [0xf77e41, 0xcb7b55],\r\n\t\t\t[0xffb139, 0xf6b689],\r\n\t\t\t[0xffd140, 0xffcda7],\r\n\t\t\t[0xffdf79, 0xffdfc5],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0xa45a38],\r\n\t\t\t[0xffb139, 0xdf986b],\r\n\t\t\t[0xffd140, 0xedb183],\r\n\t\t\t[0xffdf79, 0xf4c3a0],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x703a17],\r\n\t\t\t[0xffb139, 0xab673d],\r\n\t\t\t[0xffd140, 0xc37f4e],\r\n\t\t\t[0xffdf79, 0xd89667],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x4a2409],\r\n\t\t\t[0xffb139, 0x7d3e0e],\r\n\t\t\t[0xffd140, 0x965529],\r\n\t\t\t[0xffdf79, 0xa96337],\r\n    ],\r\n\r\n    [\r\n\t\t\t[0xf77e41, 0x200f0a],\r\n\t\t\t[0xffb139, 0x412924],\r\n\t\t\t[0xffd140, 0x593d37],\r\n\t\t\t[0xffdf79, 0x63453f],\r\n    ]\r\n  ];\r\n\r\n  private workersLimit = 4;\r\n  private players: {[reqId: number]: RLottiePlayer} = {};\r\n\r\n  private workers: QueryableWorker[] = [];\r\n  private curWorkerNum = 0;\r\n\r\n  private log = logger('LOTTIE', LogTypes.Error);\r\n\r\n  public getAnimation(element: HTMLElement) {\r\n    for(const i in this.players) {\r\n      if(this.players[i].el === element) {\r\n        return this.players[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public setLoop(loop: boolean) {\r\n    for(const i in this.players) {\r\n      const player = this.players[i];\r\n      player.loop = loop;\r\n      player.autoplay = player._autoplay;\r\n    }\r\n  }\r\n\r\n  public loadLottieWorkers() {\r\n    if(this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    return this.loadPromise = new Promise((resolve, reject) => {\r\n      let remain = this.workersLimit;\r\n      for(let i = 0; i < this.workersLimit; ++i) {\r\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\r\n\r\n        worker.addEventListener('ready', () => {\r\n          this.log('worker #' + i + ' ready');\r\n\r\n          worker.addEventListener('frame', this.onFrame);\r\n          worker.addEventListener('loaded', this.onPlayerLoaded);\r\n          worker.addEventListener('error', this.onPlayerError);\r\n\r\n          --remain;\r\n          if(!remain) {\r\n            this.log('workers ready');\r\n            resolve();\r\n            this.loaded = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private applyReplacements(object: {\r\n    layers: Array<{shapes: LottieShape[]}>\r\n  }, toneIndex: number) {\r\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\r\n\r\n    const applyTo = (smth: LottieShape) => {\r\n      const k = smth.c.k;\r\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\r\n\r\n      const foundReplacement = replacements.find(p => p[0] === color);\r\n      if(foundReplacement) {\r\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\r\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\r\n        k[2] = (foundReplacement[1] & 255) / 255;\r\n      }\r\n\r\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\r\n    };\r\n\r\n    const checkSmth = (smth: LottieShape) => {\r\n      switch(smth.ty) {\r\n        case 'st':\r\n        case 'fl':\r\n          applyTo(smth);\r\n          break;\r\n      }\r\n\r\n      if(smth.hasOwnProperty('it')) {\r\n        iterateIt(smth.it);\r\n      }\r\n    };\r\n\r\n    const iterateIt = (it: LottieShape['it']) => {\r\n      for(const smth of it) {\r\n        checkSmth(smth);\r\n      }\r\n    };\r\n\r\n    try {\r\n      for(const layer of object.layers) {\r\n        if(!layer.shapes) continue;\r\n  \r\n        for(const shape of layer.shapes) {\r\n          if(!shape.it) {\r\n            checkSmth(shape);\r\n            continue;\r\n          }\r\n\r\n          iterateIt(shape.it);\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.warn('cant apply replacements', err, object, toneIndex);\r\n    }\r\n  }\r\n\r\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    \r\n    if(!this.loaded) {\r\n      this.loadLottieWorkers();\r\n    }\r\n    \r\n    return fetch(url)\r\n    .then(res => res.arrayBuffer())\r\n    .then(data => apiManager.gzipUncompress<string>(data, true))\r\n    /* .then(str => {\r\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\r\n    }) */\r\n    .then(str => {\r\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str/* JSON.parse(str) */, needUpscale: true}));\r\n    });\r\n  }\r\n\r\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\r\n    return Promise.race([\r\n      /* new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', () => {\r\n          setTimeout(() => resolve(), 1500);\r\n        }, true);\r\n      }) */\r\n      new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', resolve, true);\r\n      }),\r\n      pause(2500)\r\n    ]);\r\n  }\r\n\r\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    //params.autoplay = true;\r\n\r\n    if(toneIndex >= 1 && toneIndex <= 5) {\r\n      /* params.animationData = copy(params.animationData);\r\n      this.applyReplacements(params.animationData, toneIndex); */\r\n\r\n      const newAnimationData = JSON.parse(params.animationData);\r\n      this.applyReplacements(newAnimationData, toneIndex);\r\n      params.animationData = JSON.stringify(newAnimationData);\r\n    }\r\n\r\n    if(!this.loaded) {\r\n      await this.loadLottieWorkers();\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      params.width = parseInt(params.container.style.width);\r\n      params.height = parseInt(params.container.style.height);\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      throw new Error('No size for sticker!');\r\n    }\r\n\r\n    params.group = group;\r\n\r\n    const player = this.initPlayer(params.container, params);\r\n    animationIntersector.addAnimation(player, group);\r\n\r\n    return player;\r\n  }\r\n\r\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\r\n      return;\r\n    }\r\n\r\n    this.log.debug('onPlayerLoaded');\r\n    rlPlayer.onLoad(frameCount, fps);\r\n    //rlPlayer.addListener('firstFrame', () => {\r\n      //animationIntersector.addAnimation(player, group);\r\n    //}, true);\r\n  };\r\n\r\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\r\n      return;\r\n    }\r\n\r\n    rlPlayer.clamped = frame;\r\n    rlPlayer.renderFrame(frame, frameNo);\r\n  };\r\n\r\n  private onPlayerError = (reqId: number, error: Error) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(rlPlayer) {\r\n      // ! will need refactoring later, this is not the best way to remove the animation\r\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\r\n      animations.forEach(animation => {\r\n        animationIntersector.checkAnimation(animation, true, true);\r\n      });\r\n    }\r\n  };\r\n\r\n  public onDestroy(reqId: number) {\r\n    delete this.players[reqId];\r\n  }\r\n\r\n  public destroyWorkers() {\r\n    this.workers.forEach((worker, idx) => {\r\n      worker.terminate();\r\n      this.log('worker #' + idx + ' terminated');\r\n    });\r\n\r\n    this.log('workers destroyed');\r\n    this.workers.length = 0;\r\n  }\r\n\r\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\r\n    const rlPlayer = new RLottiePlayer({\r\n      el, \r\n      worker: this.workers[this.curWorkerNum++],\r\n      options\r\n    });\r\n\r\n    this.players[rlPlayer.reqId] = rlPlayer;\r\n    if(this.curWorkerNum >= this.workers.length) {\r\n      this.curWorkerNum = 0;\r\n    }\r\n\r\n    rlPlayer.loadFromData(options.animationData);\r\n\r\n    return rlPlayer;\r\n  }\r\n}\r\n\r\nconst lottieLoader = new LottieLoader();\r\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\r\nexport default lottieLoader;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Page from \"./page\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { horizontalMenu } from \"../components/horizontalMenu\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nclass PagesManager {\r\n  private pageId = -1;\r\n  private page: Page;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n  public pagesDiv: HTMLDivElement;\r\n  public scrollableDiv: HTMLElement;\r\n\r\n  constructor() {\r\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\r\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\r\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\r\n      if(this.page?.onShown) {\r\n        this.page.onShown();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPage(page: Page) {\r\n    if(page.isAuthPage) {\r\n      this.pagesDiv.style.display = '';\r\n\r\n      let id = whichChild(page.pageEl);\r\n      if(this.pageId === id) return;\r\n\r\n      this.selectTab(id);\r\n\r\n      if(this.pageId !== -1 && id > 1) {\r\n        lottieLoader.loadLottieWorkers();\r\n      }\r\n\r\n\r\n\r\n      this.pageId = id;\r\n\r\n      if(this.scrollableDiv) {\r\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\r\n      }\r\n    } else {\r\n      this.pagesDiv.style.display = 'none';\r\n      page.pageEl.style.display = '';\r\n\r\n      this.pageId = -1;\r\n    }\r\n\r\n    this.page = page;\r\n  }\r\n}\r\n\r\nconst pagesManager = new PagesManager();\r\nMOUNT_CLASS_TO.pagesManager = pagesManager;\r\nexport default pagesManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pagesManager from \"./pagesManager\";\r\n\r\nexport default class Page {\r\n  public pageEl: HTMLDivElement;\r\n  private installed = false;\r\n\r\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\r\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\r\n  }\r\n\r\n  public async mount(...args: any[]) {\r\n    //this.pageEl.style.display = '';\r\n\r\n    if(this.onMount) {\r\n      this.onMount(...args);\r\n    }\r\n\r\n    if(!this.installed) {\r\n      if(this.onFirstMount) {\r\n        try {\r\n          const res = this.onFirstMount(...args);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        } catch(err) {\r\n          console.error('PAGE MOUNT ERROR:', err);\r\n        }\r\n      }\r\n      \r\n      this.installed = true;\r\n    }\r\n\r\n    pagesManager.setPage(this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\r\n\r\nimport { AnyToVoidFunction } from '../types';\r\nimport ListenerSetter from '../helpers/listenerSetter';\r\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\r\nimport { pause } from '../helpers/schedulers';\r\nimport rootScope from '../lib/rootScope';\r\nimport DEBUG from '../config/debug';\r\n\r\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\r\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\r\n\r\nlet isAnimating = false;\r\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\r\nlet promisesInQueue = 0;\r\n\r\nheavyAnimationPromise.resolve();\r\n\r\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\r\n\r\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\r\n  if(!isAnimating) {\r\n    heavyAnimationPromise = deferredPromise<void>();\r\n    rootScope.broadcast(ANIMATION_START_EVENT);\r\n    isAnimating = true;\r\n    DEBUG && log('start');\r\n  }\r\n  \r\n  ++promisesInQueue;\r\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\r\n\r\n  const promises = [\r\n    timeout !== undefined ? pause(timeout) : undefined,\r\n    promise.finally(() => {})\r\n  ].filter(Boolean);\r\n\r\n  const perf = performance.now();\r\n  const _heavyAnimationPromise = heavyAnimationPromise;\r\n  Promise.race(promises).then(() => {\r\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\r\n      return;\r\n    }\r\n\r\n    --promisesInQueue;\r\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\r\n    if(promisesInQueue <= 0) {\r\n      onHeavyAnimationEnd();\r\n    }\r\n  });\r\n\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nfunction onHeavyAnimationEnd() {\r\n  if(heavyAnimationPromise.isFulfilled) {\r\n    return;\r\n  }\r\n\r\n  isAnimating = false;\r\n  promisesInQueue = 0;\r\n  rootScope.broadcast(ANIMATION_END_EVENT);\r\n  heavyAnimationPromise.resolve();\r\n\r\n  DEBUG && log('end');\r\n}\r\n\r\nexport function interruptHeavyAnimation() {\r\n  onHeavyAnimationEnd();\r\n}\r\n\r\nexport function getHeavyAnimationPromise() {\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nexport default function(\r\n  handleAnimationStart: AnyToVoidFunction,\r\n  handleAnimationEnd: AnyToVoidFunction,\r\n  listenerSetter?: ListenerSetter\r\n) {\r\n  //useEffect(() => {\r\n    if(isAnimating) {\r\n      handleAnimationStart();\r\n    }\r\n\r\n    const add = listenerSetter ? listenerSetter.add.bind(listenerSetter, rootScope) : rootScope.addEventListener.bind(rootScope);\r\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\r\n    add(ANIMATION_START_EVENT, handleAnimationStart);\r\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\r\n\r\n    return () => {\r\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\r\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\r\n    };\r\n  //}, [handleAnimationEnd, handleAnimationStart]);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function whichChild(elem: Node) {\r\n  if(!elem.parentNode) {\r\n    return -1;\r\n  }\r\n  \r\n  let i = 0;\r\n  // @ts-ignore\r\n  while((elem = elem.previousElementSibling) !== null) ++i;\r\n  return i;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's fastSmoothScroll slightly patched\r\n\r\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\r\nimport { fastRaf } from './schedulers';\r\nimport { animateSingle, cancelAnimationByKey } from './animation';\r\nimport rootScope from '../lib/rootScope';\r\nimport isInDOM from './dom/isInDOM';\r\n\r\nconst MAX_DISTANCE = 1500;\r\nconst MIN_JS_DURATION = 250;\r\nconst MAX_JS_DURATION = 600;\r\n\r\nexport enum FocusDirection {\r\n  Up,\r\n  Down,\r\n  Static,\r\n};\r\n\r\nexport default function fastSmoothScroll(\r\n  container: HTMLElement,\r\n  element: HTMLElement,\r\n  position: ScrollLogicalPosition,\r\n  margin = 0,\r\n  maxDistance = MAX_DISTANCE,\r\n  forceDirection?: FocusDirection,\r\n  forceDuration?: number,\r\n  axis: 'x' | 'y' = 'y'\r\n) {\r\n  //return;\r\n\r\n  if(!rootScope.settings.animationsEnabled) {\r\n    forceDirection = FocusDirection.Static;\r\n  }\r\n\r\n  if(forceDirection === FocusDirection.Static) {\r\n    forceDuration = 0;\r\n    return scrollWithJs(container, element, position, margin, forceDuration, axis);\r\n    /* return Promise.resolve();\r\n\r\n    element.scrollIntoView({ block: position });\r\n\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve(); */\r\n  }\r\n\r\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const containerRect = container.getBoundingClientRect();\r\n  \r\n    const offsetTop = elementRect.top - containerRect.top;\r\n    if(forceDirection === undefined) {\r\n      if(offsetTop < -maxDistance) {\r\n        container.scrollTop += (offsetTop + maxDistance);\r\n      } else if(offsetTop > maxDistance) {\r\n        container.scrollTop += (offsetTop - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\r\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\r\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\r\n    }\r\n    /* const { offsetTop } = element;\r\n\r\n    if(forceDirection === undefined) {\r\n      const offset = offsetTop - container.scrollTop;\r\n\r\n      if(offset < -maxDistance) {\r\n        container.scrollTop += (offset + maxDistance);\r\n      } else if(offset > maxDistance) {\r\n        container.scrollTop += (offset - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) {\r\n      container.scrollTop = offsetTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) {\r\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\r\n    } */\r\n  }\r\n\r\n  const promise = new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      scrollWithJs(container, element, position, margin, forceDuration, axis)\r\n      .then(resolve);\r\n    });\r\n  });\r\n\r\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\r\n}\r\n\r\nfunction scrollWithJs(\r\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number, axis: 'x' | 'y' = 'y'\r\n) {\r\n  if(!isInDOM(element)) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const rectStartKey = axis === 'y' ? 'top' : 'left';\r\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\r\n  const sizeKey = axis === 'y' ? 'height' : 'width';\r\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\r\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\r\n\r\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\r\n  const elementRect = element.getBoundingClientRect();\r\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\r\n\r\n  //const transformable = container.firstElementChild as HTMLElement;\r\n\r\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\r\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\r\n\r\n  const containerSize = containerRect[sizeKey];\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  /* const elementPosition = element.offsetTop;\r\n  const elementSize = element.offsetHeight;\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  const containerSize = container.offsetHeight; */\r\n\r\n  let path!: number;\r\n\r\n  switch(position) {\r\n    case 'start':\r\n      path = elementPosition - margin;\r\n      break;\r\n    case 'end':\r\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\r\n        : elementPosition - margin;\r\n      break;\r\n  }\r\n  /* switch (position) {\r\n    case 'start':\r\n      path = (elementPosition - margin) - scrollPosition;\r\n      break;\r\n    case 'end':\r\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\r\n        : (elementPosition - margin) - scrollPosition;\r\n      break;\r\n  } */\r\n\r\n  // console.log('scrollWithJs: will scroll path:', path, element);\r\n\r\n  /* let existsTransform = 0;\r\n  const currentTransform = transformable.style.transform;\r\n  if(currentTransform) {\r\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\r\n    //path += existsTransform;\r\n  } */\r\n\r\n  if(path < 0) {\r\n    const remainingPath = -scrollPosition;\r\n    path = Math.max(path, remainingPath);\r\n  } else if(path > 0) {\r\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\r\n    path = Math.min(path, remainingPath);\r\n  }\r\n\r\n  const target = container[scrollPositionKey] + path;\r\n  const duration = forceDuration ?? (\r\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\r\n  );\r\n  const startAt = Date.now();\r\n\r\n  /* transformable.classList.add('no-transition');\r\n\r\n  const tickTransform = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n    const currentPath = path * transition(t);\r\n\r\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\r\n    container.dataset.translate = '' + -currentPath;\r\n\r\n    const willContinue = t < 1;\r\n    if(!willContinue) {\r\n      fastRaf(() => {\r\n        delete container.dataset.transform;\r\n        container.dataset.transform = '';\r\n        transformable.style.transform = '';\r\n        void transformable.offsetLeft; // reflow\r\n        transformable.classList.remove('no-transition');\r\n        void transformable.offsetLeft; // reflow\r\n        container[scrollPositionKey] = Math.round(target);\r\n      });\r\n    }\r\n\r\n    return willContinue;\r\n  };\r\n  \r\n  return animateSingle(tickTransform, container); */\r\n\r\n  /* return new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      transformable.style.transform = '';\r\n      transformable.style.transition = '';\r\n\r\n      setTimeout(resolve, duration);\r\n    });\r\n  });\r\n\r\n  const transformableHeight = transformable.scrollHeight;\r\n  //transformable.style.minHeight = `${transformableHeight}px`;\r\n  */\r\n\r\n  const tick = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n\r\n    const currentPath = path * (1 - transition(t));\r\n    container[scrollPositionKey] = Math.round(target - currentPath);\r\n    \r\n    return t < 1;\r\n  };\r\n\r\n  if(!duration || !path) {\r\n    cancelAnimationByKey(container);\r\n    tick();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /* return new Promise((resolve) => {\r\n    setTimeout(resolve, duration);\r\n  }).then(() => {\r\n    transformable.classList.add('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.style.transform = '';\r\n    transformable.style.transition = '';\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.classList.remove('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    fastRaf(() => {\r\n      \r\n      container[scrollPositionKey] = Math.round(target);\r\n      //transformable.style.minHeight = ``;\r\n    });\r\n    \r\n  }); */\r\n\r\n  return animateSingle(tick, container);\r\n}\r\n\r\nfunction transition(t: number) {\r\n  return 1 - ((1 - t) ** 3.5);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\n\r\nexport interface AnimationItem {\r\n  el: HTMLElement,\r\n  group: string,\r\n  animation: RLottiePlayer | HTMLVideoElement\r\n};\r\n\r\nexport class AnimationIntersector {\r\n  public observer: IntersectionObserver;\r\n  private visible: Set<AnimationItem> = new Set();\r\n\r\n  private byGroups: {[group: string]: AnimationItem[]} = {};\r\n  private lockedGroups: {[group: string]: true} = {};\r\n  private onlyOnePlayableGroup: string = '';\r\n  \r\n  private intersectionLockedGroups: {[group: string]: true} = {};\r\n  private videosLocked = false;\r\n\r\n  constructor() {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(rootScope.idle.isIDLE) return;\r\n\r\n      for(const entry of entries) {\r\n        const target = entry.target;\r\n\r\n        for(const group in this.byGroups) {\r\n          if(this.intersectionLockedGroups[group]) {\r\n            continue;\r\n          }\r\n\r\n          const player = this.byGroups[group].find(p => p.el === target);\r\n          if(player) {\r\n            if(entry.isIntersecting) {\r\n              this.visible.add(player);\r\n              this.checkAnimation(player, false);\r\n            } else {\r\n              this.visible.delete(player);\r\n              this.checkAnimation(player, true);\r\n\r\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\r\n                //console.warn('will clear cache', player);\r\n                player.animation.clearCache();\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    rootScope.on('audio_play', ({doc}) => {\r\n      if(doc.type === 'round') {\r\n        this.videosLocked = true;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n\r\n    rootScope.on('audio_pause', () => {\r\n      if(this.videosLocked) {\r\n        this.videosLocked = false;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAnimations(element: HTMLElement) {\r\n    const found: AnimationItem[] = [];\r\n    for(const group in this.byGroups) {\r\n      for(const player of this.byGroups[group]) {\r\n        if(player.el === element) {\r\n          found.push(player);\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  public removeAnimation(player: AnimationItem) {\r\n    //console.log('destroy animation');\r\n    const {el, animation} = player;\r\n    animation.remove();\r\n\r\n    if(animation instanceof HTMLVideoElement && isSafari) {\r\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\r\n        animation.src = '';\r\n        animation.load();\r\n      }, 1e3);\r\n    }\r\n\r\n    for(const group in this.byGroups) {\r\n      this.byGroups[group].findAndSplice(p => p === player);\r\n    }\r\n  \r\n    this.observer.unobserve(el);\r\n    this.visible.delete(player);\r\n  }\r\n\r\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\r\n    const player = {\r\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \r\n      animation: animation, \r\n      group\r\n    };\r\n\r\n    if(animation instanceof RLottiePlayer) {\r\n      if(!rootScope.settings.stickers.loop && animation.loop) {\r\n        animation.loop = rootScope.settings.stickers.loop;\r\n      }\r\n    }\r\n\r\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\r\n    this.observer.observe(player.el);\r\n  }\r\n\r\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\r\n    if(rootScope.idle.isIDLE) return;\r\n    \r\n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\r\n\r\n    if(group && !this.byGroups[group]) {\r\n      //console.warn('no animation group:', group);\r\n      this.byGroups[group] = [];\r\n      return;\r\n    }\r\n\r\n    for(const group of groups) {\r\n      const animations = this.byGroups[group];\r\n\r\n      animations.forEach(player => {\r\n        this.checkAnimation(player, blurred, destroy);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\r\n    const {el, animation, group} = player;\r\n    //return;\r\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\r\n      this.removeAnimation(player);\r\n      return;\r\n    }\r\n\r\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\r\n      if(!animation.paused) {\r\n        //console.warn('pause animation:', animation);\r\n        animation.pause();\r\n      }\r\n    } else if(animation.paused && \r\n      this.visible.has(player) && \r\n      animation.autoplay && \r\n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\r\n    ) {\r\n      //console.warn('play animation:', animation);\r\n      animation.play();\r\n    }\r\n  }\r\n\r\n  public setOnlyOnePlayableGroup(group: string) {\r\n    this.onlyOnePlayableGroup = group;\r\n  }\r\n\r\n  public lockGroup(group: string) {\r\n    this.lockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockGroup(group: string) {\r\n    delete this.lockedGroups[group];\r\n    this.checkAnimations(undefined, group);\r\n  }\r\n\r\n  public refreshGroup(group: string) {\r\n    const animations = this.byGroups[group];\r\n    if(animations && animations.length) {\r\n      animations.forEach(animation => {\r\n        this.observer.unobserve(animation.el);\r\n      });\r\n\r\n      window.requestAnimationFrame(() => {\r\n        animations.forEach(animation => {\r\n          this.observer.observe(animation.el);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public lockIntersectionGroup(group: string) {\r\n    this.intersectionLockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockIntersectionGroup(group: string) {\r\n    delete this.intersectionLockedGroups[group];\r\n    this.refreshGroup(group);\r\n  }\r\n}\r\n\r\nconst animationIntersector = new AnimationIntersector();\r\nif(MOUNT_CLASS_TO) {\r\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\r\n}\r\nexport default animationIntersector;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport function numberThousandSplitter(x: number, joiner = ' ') {\r\n  const parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\r\n  return parts.join(\".\");\r\n}\r\n\r\nexport function formatBytes(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function formatNumber(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0';\r\n\r\n  const k = 1000;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['', 'K', 'M', 'B', 'T'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\r\n}\r\n\r\nexport function clamp(v: number, min: number, max: number): number {\r\n  return v < min ? min : ((v > max) ? max : v);\r\n}\r\n\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  const width = prevTabContent.getBoundingClientRect().width;\r\n  const elements = [tabContent, prevTabContent];\r\n  if(toRight) elements.reverse();\r\n  elements[0].style.filter = `brightness(80%)`;\r\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\r\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n  tabContent.classList.add('active');\r\n  void tabContent.offsetWidth; // reflow\r\n\r\n  tabContent.style.transform = '';\r\n  tabContent.style.filter = '';\r\n\r\n  return () => {\r\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\r\n  };\r\n}\r\n\r\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  //window.requestAnimationFrame(() => {\r\n    const width = prevTabContent.getBoundingClientRect().width;\r\n    /* tabContent.style.setProperty('--width', width + 'px');\r\n    prevTabContent.style.setProperty('--width', width + 'px');\r\n\r\n    tabContent.classList.add('active'); */\r\n    //void tabContent.offsetWidth; // reflow\r\n    const elements = [tabContent, prevTabContent];\r\n    if(toRight) elements.reverse();\r\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\r\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n    tabContent.classList.add('active');\r\n    void tabContent.offsetWidth; // reflow\r\n  \r\n    tabContent.style.transform = '';\r\n  //});\r\n  \r\n  return () => {\r\n    prevTabContent.style.transform = '';\r\n  };\r\n}\r\n\r\nexport const TransitionSlider = (content: HTMLElement, type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\r\n  let animationFunction: TransitionFunction = null;\r\n\r\n  switch(type) {\r\n    case 'tabs':\r\n      animationFunction = slideTabs;\r\n      break;\r\n    case 'navigation':\r\n      animationFunction = slideNavigation;\r\n      break;\r\n    /* default:\r\n      break; */\r\n  }\r\n\r\n  content.dataset.animation = type;\r\n  \r\n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\r\n};\r\n\r\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\r\n\r\nconst Transition = (content: HTMLElement, animationFunction: TransitionFunction, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\r\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\r\n  let animationDeferred: CancellablePromise<void>;\r\n  let animationStarted = 0;\r\n  let from: HTMLElement = null;\r\n\r\n  // TODO: check for transition type (transform, etc) using by animationFunction\r\n  content.addEventListener(animationFunction ? 'transitionend' : 'animationend', (e) => {\r\n    if((e.target as HTMLElement).parentElement !== content) {\r\n      return;\r\n    }\r\n    \r\n    //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\r\n\r\n    const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\r\n    if(callback) callback();\r\n\r\n    if(e.target !== from) {\r\n      return;\r\n    }\r\n\r\n    if(!animationDeferred && isHeavy) return;\r\n\r\n    if(animationDeferred) {\r\n      animationDeferred.resolve();\r\n      animationDeferred = undefined;\r\n    }\r\n\r\n    if(onTransitionEnd) {\r\n      onTransitionEnd(selectTab.prevId());\r\n    }\r\n\r\n    content.classList.remove('animating', 'backwards', 'disable-hover');\r\n  });\r\n\r\n  function selectTab(id: number | HTMLElement, animate = true) {\r\n    const self = selectTab;\r\n\r\n    if(id instanceof HTMLElement) {\r\n      id = whichChild(id);\r\n    }\r\n    \r\n    const prevId = self.prevId();\r\n    if(id === prevId) return false;\r\n\r\n    //console.log('selectTab id:', id);\r\n\r\n    const _from = from;\r\n    const to = content.children[id] as HTMLElement;\r\n\r\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\r\n      animate = false;\r\n    }\r\n\r\n    if(!animate) {\r\n      if(_from) _from.classList.remove('active', 'to', 'from');  \r\n      if(to) {\r\n        to.classList.remove('to', 'from');\r\n        to.classList.add('active');\r\n      }\r\n\r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n\r\n      from = to;\r\n\r\n      if(onTransitionEnd) onTransitionEnd(id);\r\n      return;\r\n    }\r\n\r\n    if(from) {\r\n      from.classList.remove('to');\r\n      from.classList.add('from');\r\n    }\r\n\r\n    content.classList.add('animating', 'disable-hover');\r\n    const toRight = prevId < id;\r\n    content.classList.toggle('backwards', !toRight);\r\n\r\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\r\n    if(!to) {\r\n      //prevTabContent.classList.remove('active');\r\n    } else {\r\n      if(animationFunction) {\r\n        onTransitionEndCallback = animationFunction(to, from, toRight);\r\n      } else {\r\n        to.classList.add('active');\r\n      }\r\n\r\n      to.classList.remove('from');\r\n      to.classList.add('to');\r\n    }\r\n    \r\n    if(to) {\r\n      onTransitionEndCallbacks.set(to, () => {\r\n        to.classList.remove('to');\r\n        onTransitionEndCallbacks.delete(to);\r\n      });\r\n    }\r\n\r\n    if(_from/*  && false */) {\r\n      const callback = () => {\r\n        _from.classList.remove('active', 'from');\r\n\r\n        if(onTransitionEndCallback) {\r\n          onTransitionEndCallback();\r\n        }\r\n\r\n        onTransitionEndCallbacks.delete(_from);\r\n      };\r\n\r\n      if(to) {\r\n        onTransitionEndCallbacks.set(_from, callback);\r\n      } else {\r\n        const timeout = window.setTimeout(callback, transitionTime);\r\n        onTransitionEndCallbacks.set(_from, () => {\r\n          clearTimeout(timeout);\r\n        });\r\n      }\r\n\r\n      if(isHeavy) {\r\n        if(!animationDeferred) {\r\n          animationDeferred = deferredPromise<void>();\r\n          animationStarted = performance.now();\r\n        }\r\n  \r\n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\r\n      }\r\n    }\r\n    \r\n    from = to;\r\n  }\r\n\r\n  //selectTab.prevId = -1;\r\n  selectTab.prevId = () => from ? whichChild(from) : -1;\r\n  \r\n  return selectTab;\r\n};\r\n\r\nexport default Transition;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { TransitionSlider } from \"./transition\";\r\nimport { ScrollableX } from \"./scrollable\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\r\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\r\n\r\n  if(tabs) {\r\n    const proxy = new Proxy(selectTab, {\r\n      apply: (target, that, args) => {\r\n        const id = +args[0];\r\n        const animate = args[1] !== undefined ? args[1] : true;\r\n  \r\n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\r\n        selectTarget(el, id, animate);\r\n      }\r\n    });\r\n\r\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\r\n      const tabContent = content.children[id] as HTMLDivElement;\r\n\r\n      if(onClick) {\r\n        const canChange = onClick(id, tabContent, animate);\r\n        if(canChange !== undefined && !canChange) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(scrollableX) {\r\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        animate = false;\r\n      }\r\n\r\n      const prevId = selectTab.prevId();\r\n      if(target.classList.contains('active') || id === prevId) {\r\n        return false;\r\n      }\r\n      \r\n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\r\n\r\n      fastRaf(() => {\r\n        prev && prev.classList.remove('active');\r\n      });\r\n      \r\n      // stripe from ZINCHUK\r\n      if(useStripe && prevId !== -1 && animate) {\r\n        fastRaf(() => {\r\n          const indicator = target.querySelector('i')!;\r\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\r\n    \r\n          currentIndicator.classList.remove('animate');\r\n          indicator.classList.remove('animate');\r\n    \r\n          // We move and resize our indicator so it repeats the position and size of the previous one.\r\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\r\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\r\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\r\n  \r\n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\r\n    \r\n          requestAnimationFrame(() => {\r\n            // Now we remove the transform to let it animate to its own position and size.\r\n            indicator.classList.add('animate');\r\n            indicator.style.transform = 'none';\r\n          });\r\n        });\r\n      }\r\n      // stripe END\r\n\r\n      fastRaf(() => {\r\n        target.classList.add('active');\r\n      });\r\n      \r\n      selectTab(id, animate);\r\n    };\r\n\r\n    const useStripe = !tabs.classList.contains('no-stripe');\r\n\r\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\r\n    const tagName = tabs.firstElementChild.tagName;\r\n    tabs.addEventListener('click', function(e) {\r\n      let target = e.target as HTMLElement;\r\n      \r\n      target = findUpAsChild(target, tabs);\r\n      \r\n      //console.log('tabs click:', target);\r\n      \r\n      if(!target) return false;\r\n\r\n      let id: number;\r\n      if(target.dataset.tab) {\r\n        id = +target.dataset.tab;\r\n        if(id === -1) {\r\n          return false;\r\n        }\r\n      } else {\r\n        id = whichChild(target);\r\n      }\r\n\r\n      selectTarget(target, id);\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n  \r\n  return selectTab;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAsChild(el: any, parent: any) {\r\n  if(el.parentElement === parent) return el;\r\n  \r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.parentElement === parent) {\r\n      return el;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's animation.ts\r\n\r\nimport { fastRaf } from './schedulers';\r\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\r\n\r\ninterface AnimationInstance {\r\n  isCancelled: boolean;\r\n  deferred: CancellablePromise<void>\r\n}\r\n\r\ntype AnimationInstanceKey = any;\r\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\r\n\r\nexport function createAnimationInstance(key: AnimationInstanceKey) {\r\n  cancelAnimationByKey(key);\r\n\r\n  const instance: AnimationInstance = {\r\n    isCancelled: false, \r\n    deferred: deferredPromise<void>()\r\n  };\r\n\r\n  instances.set(key, instance);\r\n  instance.deferred.then(() => {\r\n    instances.delete(key);\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport function getAnimationInstance(key: AnimationInstanceKey) {\r\n  return instances.get(key);\r\n}\r\n\r\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\r\n  const instance = getAnimationInstance(key);\r\n  if(instance) {\r\n    instance.isCancelled = true;\r\n    instance.deferred.resolve();\r\n  }\r\n}\r\n\r\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\r\n  if(!instance) {\r\n    instance = createAnimationInstance(key);\r\n  }\r\n\r\n  fastRaf(() => {\r\n    if(instance.isCancelled) {\r\n      return;\r\n    }\r\n    \r\n    if(tick()) {\r\n      animateSingle(tick, key, instance);\r\n    } else {\r\n      instance.deferred.resolve();\r\n    }\r\n  });\r\n\r\n  return instance.deferred;\r\n}\r\n\r\nexport function animate(tick: Function) {\r\n  fastRaf(() => {\r\n    if(tick()) {\r\n      animate(tick);\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}