{"version":3,"sources":["webpack:///./src/components/inputField.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/helpers/random.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/pages/pageSignIn.ts"],"names":["init","document","addEventListener","e","target","hasAttribute","parentElement","preventDefault","text","originalEvent","clipboardData","getData","entities","parseEntities","filter","_","wrapRichText","noLinks","wrappingDraft","window","execCommand","checkAndSetRTL","input","char","HTMLInputElement","value","innerText","direction","style","InputState","options","this","container","createElement","classList","add","maxLength","showLengthOn","Math","round","placeholder","name","plainText","processInput","label","labelText","innerHTML","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","showScrollDebounced","remove","setAttribute","className","undefined","border","append","setLabel","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","length","diff","isError","toggle","select","textContent","labelOptions","scrollHeight","clientHeight","height","setValueSilently","event","Event","bubbles","cancelable","dispatchEvent","fireFakeInput","originalValue","silent","wrapDraftText","state","Error","Valid","setState","ScrollableBase","el","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Array","from","children","forEach","c","onScroll","passive","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","super","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","maxScrollTop","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","nextRandomInt","maxValue","floor","random","randomLong","CheckboxField","restriction","disabled","toggleDisability","span","type","id","checked","stateKey","getState","then","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","disable","findUpTag","tag","closest","blobSupported","fileWriter","bytes","Blob","Promise","resolve","reject","fileReader","FileReader","onload","arrayBuffer","result","arr","Uint8Array","write","readAsArrayBuffer","mimeType","saveFileCallback","blobParts","part","push","truncate","finalize","saveToStorage","blob","dbName","useStorage","test","openDatabase","STORAGES","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","response","put","fileName","save","Response","method","match","callback","rejected","timeout","setTimeout","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","enabled","all","map","storage","deleteAll","btnQr","btnNext","page","phoneCode","code","emoji","pattern","console","countries","sort","a","b","localeCompare","lastCountrySelected","inputWrapper","countryInputField","countryInput","autocomplete","selectWrapper","arrowDown","selectList","appendChild","initSelect","liArr","split","li","spanEmoji","kek","outerHTML","button","tagName","selectCountryByTarget","countryName","childNodes","querySelector","find","telEl","lastValue","hidePicker","focus","hideTimeout","display","offsetWidth","pageEl","mouseDownHandlerAttached","onMouseDown","removeEventListener","ctrlKey","key","_value","toLowerCase","matches","good","cancelBubble","blur","pasted","telInputField","loadLottieWorkers","formatted","country","abs","replace","o","visibility","metaKey","shiftKey","onSubmit","signedCheckboxField","keepSigned","pushToState","toggleStorage","phone_number","invokeApi","api_id","api_hash","hash","settings","m","default","mount","Object","assign","catch","setError","error","h4","subtitle","nearestDcResult","dcs","done","this_dc","promise","nearest_dc","getNetworker","g","dcId","shift","fileDownload","finally","includes","removeAttribute"],"mappings":"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","file":"18.ec40e7b6f52fac37f515.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { getRichValue, isInputEmpty } from \"../helpers/dom\";\nimport { debounce } from \"../helpers/schedulers\";\nimport { checkRTL } from \"../helpers/string\";\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\nimport RichTextProcessor from \"../lib/richtextprocessor\";\n\nlet init = () => {\n  document.addEventListener('paste', (e) => {\n    if(!(e.target as HTMLElement).hasAttribute('contenteditable') && !(e.target as HTMLElement).parentElement.hasAttribute('contenteditable')) {\n      return;\n    }\n    //console.log('document paste');\n\n    //console.log('messageInput paste');\n\n    e.preventDefault();\n    // @ts-ignore\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\n\n    let entities = RichTextProcessor.parseEntities(text);\n    //console.log('messageInput paste', text, entities);\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\n    //text = RichTextProcessor.wrapEmojiText(text);\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\n\n    // console.log('messageInput paste after', text);\n\n    // @ts-ignore\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\n\n    // @ts-ignore\n    //console.log('paste text', text, );\n    window.document.execCommand('insertHTML', false, text);\n  });\n\n  init = null;\n};\n\nconst checkAndSetRTL = (input: HTMLElement) => {\n  //const isEmpty = isInputEmpty(input);\n  //console.log('input', isEmpty);\n\n  //const char = [...getRichValue(input)][0];\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\n  let direction = 'ltr';\n  if(char && checkRTL(char)) {\n    direction = 'rtl';\n  }\n\n  //console.log('RTL', direction, char);\n\n  input.style.direction = direction;\n};\n\nexport enum InputState {\n  Neutral = 0,\n  Valid = 1,\n  Error = 2\n};\n\nexport type InputFieldOptions = {\n  placeholder?: LangPackKey, \n  label?: LangPackKey, \n  labelOptions?: any[],\n  labelText?: string,\n  name?: string, \n  maxLength?: number, \n  showLengthOn?: number,\n  plainText?: true,\n  animate?: true\n};\n\nclass InputField {\n  public container: HTMLElement;\n  public input: HTMLElement;\n  public inputFake: HTMLElement;\n  public label: HTMLLabelElement;\n\n  public originalValue: string;\n\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\n  protected wasInputFakeClientHeight: number;\n  protected showScrollDebounced: () => void;\n\n  constructor(public options: InputFieldOptions = {}) {\n    this.container = document.createElement('div');\n    this.container.classList.add('input-field');\n\n    if(options.maxLength) {\n      options.showLengthOn = Math.round(options.maxLength / 3);\n    }\n\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\n\n    let label = options.label || options.labelText;\n\n    let input: HTMLElement;\n    if(!plainText) {\n      if(init) {\n        init();\n      }\n\n      this.container.innerHTML = `\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\n      `;\n\n      input = this.container.firstElementChild as HTMLElement;\n      const observer = new MutationObserver(() => {\n        checkAndSetRTL(input);\n\n        if(processInput) {\n          processInput();\n        }\n      });\n\n      // * because if delete all characters there will br left\n      input.addEventListener('input', () => {\n        if(isInputEmpty(input)) {\n          input.innerHTML = '';\n        }\n\n        if(this.inputFake) {\n          this.inputFake.innerHTML = input.innerHTML;\n          this.onFakeInput();\n        }\n      });\n      \n      // ! childList for paste first symbol\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\n\n      if(options.animate) {\n        input.classList.add('scrollable', 'scrollable-y');\n        this.wasInputFakeClientHeight = 0;\n        this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\n        this.inputFake = document.createElement('div');\n        this.inputFake.setAttribute('contenteditable', 'true');\n        this.inputFake.className = input.className + ' input-field-input-fake';\n      }\n    } else {\n      this.container.innerHTML = `\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\n      `;\n\n      input = this.container.firstElementChild as HTMLElement;\n      input.addEventListener('input', () => checkAndSetRTL(input));\n    }\n\n    if(placeholder) {\n      _i18n(input, placeholder, undefined, 'placeholder');\n\n      if(this.inputFake) {\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\n      }\n    }\n\n    if(label || placeholder) {\n      const border = document.createElement('div');\n      border.classList.add('input-field-border');\n      this.container.append(border);\n    }\n\n    if(label) {\n      this.label = document.createElement('label');\n      this.setLabel();\n      this.container.append(this.label);\n    }\n\n    let processInput: () => void;\n    if(maxLength) {\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\n      let showingLength = false;\n\n      processInput = () => {\n        const wasError = input.classList.contains('error');\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input)].length;\n        const diff = maxLength - inputLength;\n        const isError = diff < 0;\n        input.classList.toggle('error', isError);\n\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\n\n        if(isError || diff <= showLengthOn) {\n          this.setLabel();\n          labelEl.append(` (${maxLength - inputLength})`);\n          if(!showingLength) showingLength = true;\n        } else if((wasError && !isError) || showingLength) {\n          this.setLabel();\n          showingLength = false;\n        }\n      };\n\n      input.addEventListener('input', processInput);\n    }\n\n    this.input = input;\n  }\n\n  public select() {\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\n      (this.input as HTMLInputElement).select(); // * select text\n    }\n  }\n\n  public setLabel() {\n    this.label.textContent = '';\n    if(this.options.labelText) {\n      this.label.innerHTML = this.options.labelText;\n    } else {\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\n    }\n  }\n\n  public onFakeInput() {\n    const {scrollHeight, clientHeight} = this.inputFake;\n    if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\n      this.showScrollDebounced();\n    }\n\n    this.wasInputFakeClientHeight = clientHeight;\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\n  }\n\n  get value() {\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input);\n    //return getRichValue(this.input);\n  }\n\n  set value(value: string) {\n    this.setValueSilently(value, false);\n\n    const event = new Event('input', {bubbles: true, cancelable: true});\n    this.input.dispatchEvent(event);\n  }\n\n  public setValueSilently(value: string, fireFakeInput = true) {\n    if(this.options.plainText) {\n      (this.input as HTMLInputElement).value = value;\n    } else {\n      this.input.innerHTML = value;\n      \n      if(this.inputFake) {\n        this.inputFake.innerHTML = value;\n\n        if(fireFakeInput) {\n          this.onFakeInput();\n        }\n      }\n    }\n  }\n\n  public isValid() {\n    return !this.input.classList.contains('error') && this.value !== this.originalValue;\n  }\n\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\n    this.originalValue = value;\n\n    if(!this.options.plainText) {\n      value = RichTextProcessor.wrapDraftText(value);\n    }\n\n    if(silent) {\n      this.setValueSilently(value, false); \n    } else {\n      this.value = value;\n    }\n  }\n\n  public setState(state: InputState, label?: LangPackKey) {\n    if(label) {\n      this.label.textContent = '';\n      this.label.append(i18n(label, this.options.labelOptions));\n    }\n\n    this.input.classList.toggle('error', !!(state & InputState.Error));\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\n  }\n\n  public setError(label?: LangPackKey) {\n    this.setState(InputState.Error, label);\n  }\n}\n\nexport default InputField;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport { logger, LogTypes } from \"../lib/logger\";\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\nimport { cancelEvent } from \"../helpers/dom\";\n/*\nvar el = $0;\nvar height = 0;\nvar checkUp = false;\n\ndo {\n  height += el.scrollHeight;\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\nconsole.log(height);\n*/\n\n/*\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\n\t//_el.style.display = '';\t\n\t//return;\n\n\tlet el = _el.parentElement;\n\tlet height = el.scrollHeight;\n\tlet width = el.scrollWidth;\n\tel.style.width = width + 'px';\n\tel.style.height = height + 'px';\n\t_el.style.display = 'none';\n});\n*/\n\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\nconst scrollsIntersector = new IntersectionObserver(entries => {\n  for(let entry of entries) {\n    const scrollable = scrollables.get(entry.target as HTMLElement);\n\n    if(entry.isIntersecting) {\n      scrollable.isVisible = true;\n    } else {\n      scrollable.isVisible = false;\n\n      if(!isInDOM(entry.target)) {\n        scrollsIntersector.unobserve(scrollable.container);\n        scrollables.delete(scrollable.container);\n      }\n    }\n  }\n}); */\n\nexport class ScrollableBase {\n  protected log: ReturnType<typeof logger>;\n\n  public onScrollMeasure: number = 0;\n  protected onScroll: () => void;\n\n  public isHeavyAnimationInProgress = false;\n  protected needCheckAfterAnimation = false;\n\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\n    this.container.classList.add('scrollable');\n\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\n\n    if(el) {\n      Array.from(el.children).forEach(c => this.container.append(c));\n\n      el.append(this.container);\n    }\n    //this.onScroll();\n  }\n\n  protected setListeners() {\n    window.addEventListener('resize', this.onScroll, {passive: true});\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\n\n    useHeavyAnimationCheck(() => {\n      this.isHeavyAnimationInProgress = true;\n\n      if(this.onScrollMeasure) {\n        this.needCheckAfterAnimation = true;\n        window.cancelAnimationFrame(this.onScrollMeasure);\n      }\n    }, () => {\n      this.isHeavyAnimationInProgress = false;\n\n      if(this.needCheckAfterAnimation) {\n        this.onScroll();\n        this.needCheckAfterAnimation = false;\n      }\n    });\n  }\n\n  public append(element: HTMLElement) {\n    this.container.append(element);\n  }\n\n  public scrollIntoViewNew(\n    element: HTMLElement,\n    position: ScrollLogicalPosition,\n    margin?: number,\n    maxDistance?: number,\n    forceDirection?: FocusDirection,\n    forceDuration?: number,\n    axis?: 'x' | 'y'\n  ) {\n    //return Promise.resolve();\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\n  }\n}\n\nexport type SliceSides = 'top' | 'bottom';\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\n\nexport default class Scrollable extends ScrollableBase {\n  public splitUp: HTMLElement;\n  public padding: HTMLElement;\n  \n  public onAdditionalScroll: () => void = null;\n  public onScrolledTop: () => void = null;\n  public onScrolledBottom: () => void = null;\n  \n  public lastScrollTop: number = 0;\n  public lastScrollDirection: number = 0;\n\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\n\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\n    super(el, logPrefix);\n\n    /* if(withPaddingContainer) {\n      this.padding = document.createElement('div');\n      this.padding.classList.add('scrollable-padding');\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\n      this.container.append(this.padding);\n    } */\n\n    this.container.classList.add('scrollable-y');\n    this.setListeners();\n  }\n\n  public setVirtualContainer(el?: HTMLElement) {\n    this.splitUp = el;\n    this.log('setVirtualContainer:', el, this);\n  }\n\n  public onScroll = () => {\n    //if(this.debug) {\n      //this.log('onScroll call', this.onScrollMeasure);\n    //}\n\n    //return;\n\n    if(this.isHeavyAnimationInProgress) {\n      if(this.onScrollMeasure) {\n        window.cancelAnimationFrame(this.onScrollMeasure);\n      }\n\n      this.needCheckAfterAnimation = true;\n      return;\n    }\n\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\n      this.onScrollMeasure = 0;\n\n      const scrollTop = this.container.scrollTop;\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\n      this.lastScrollTop = scrollTop;\n\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\n        this.onAdditionalScroll();\n      }\n      \n      if(this.checkForTriggers) {\n        this.checkForTriggers();\n      }\n    });\n  };\n\n  public checkForTriggers = () => {\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.onScroll();\n      return;\n    }\n\n    const scrollHeight = this.container.scrollHeight;\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\n      return;\n    }\n\n    const clientHeight = this.container.clientHeight;\n    const maxScrollTop = scrollHeight - clientHeight;\n    const scrollTop = this.lastScrollTop;\n\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\n\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\n      this.onScrolledTop();\n    }\n\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\n      this.onScrolledBottom();\n    }\n  };\n\n  public prepend(...elements: HTMLElement[]) {\n    (this.splitUp || this.padding || this.container).prepend(...elements);\n  }\n\n  public append(...elements: HTMLElement[]) {\n    (this.splitUp || this.padding || this.container).append(...elements);\n  }\n\n  public getDistanceToEnd() {\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\n  }\n\n  get isScrolledDown() {\n    return this.getDistanceToEnd() <= 1;\n  }\n\n  set scrollTop(y: number) {\n    this.container.scrollTop = y;\n  }\n  \n  get scrollTop() {\n    //this.log.trace('get scrollTop');\n    return this.container.scrollTop;\n  }\n  \n  get scrollHeight() {\n    return this.container.scrollHeight;\n  }\n}\n\nexport class ScrollableX extends ScrollableBase {\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\n    super(el, logPrefix, container);\n\n    this.container.classList.add('scrollable-x');\n\n    if(!isTouchSupported) {\n      const scrollHorizontally = (e: any) => {\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\n          this.container.scrollLeft += e.deltaY / 4;\n          cancelEvent(e);\n        }\n      };\n      \n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport function nextRandomInt(maxValue: number) {\n  return Math.floor(Math.random() * maxValue);\n}\n\nexport function randomLong() {\n  return '' + nextRandomInt(0xFFFFFFFF) + nextRandomInt(0xFFFFFF);\n  //return '' + parseInt(nextRandomInt(0xFFFFFFFF).toString(16) + nextRandomInt(0xFFFFFFFF).toString(16), 16);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport { getDeepProperty } from \"../helpers/object\";\nimport { ripple } from \"./ripple\";\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\n\nexport type CheckboxFieldOptions = {\n  text?: LangPackKey,\n  textArgs?: any[],\n  name?: string, \n  round?: boolean, \n  toggle?: boolean,\n  stateKey?: string,\n  stateValues?: any[],\n  disabled?: boolean,\n  checked?: boolean,\n  restriction?: boolean,\n  withRipple?: boolean,\n  withHover?: boolean,\n};\nexport default class CheckboxField {\n  public input: HTMLInputElement;\n  public label: HTMLLabelElement;\n  public span: HTMLSpanElement;\n\n  constructor(options: CheckboxFieldOptions = {}) {\n    const label = this.label = document.createElement('label');\n    label.classList.add('checkbox-field');\n\n    if(options.restriction) {\n      label.classList.add('checkbox-field-restriction');\n    }\n\n    if(options.round) {\n      label.classList.add('checkbox-field-round');\n    }\n\n    if(options.disabled) {\n      this.toggleDisability(true);\n    }\n\n    const input = this.input = document.createElement('input');\n    input.type = 'checkbox';\n    if(options.name) {\n      input.id = 'input-' + options.name;\n    }\n\n    if(options.checked) {\n      input.checked = true;\n    }\n\n    if(options.stateKey) {\n      appStateManager.getState().then(state => {\n        const stateValue = getDeepProperty(state, options.stateKey);\n        let checked: boolean;\n        if(options.stateValues) {\n          checked = options.stateValues.indexOf(stateValue) === 1;\n        } else {\n          checked = stateValue;\n        }\n\n        this.setValueSilently(checked);\n\n        input.addEventListener('change', () => {\n          let value: any;\n          if(options.stateValues) {\n            value = options.stateValues[input.checked ? 1 : 0];\n          } else {\n            value = input.checked;\n          }\n\n          appStateManager.setByKey(options.stateKey, value);\n        });\n      });\n    }\n\n    let span: HTMLSpanElement;\n    if(options.text) {\n      span = this.span = document.createElement('span');\n      span.classList.add('checkbox-caption');\n      _i18n(span, options.text, options.textArgs);\n    } else {\n      label.classList.add('checkbox-without-caption');\n    }\n\n    label.append(input);\n\n    if(options.toggle) {\n      label.classList.add('checkbox-field-toggle');\n\n      const toggle = document.createElement('div');\n      toggle.classList.add('checkbox-toggle');\n      label.append(toggle);\n    } else {\n      const box = document.createElement('div');\n      box.classList.add('checkbox-box');\n  \n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      checkSvg.classList.add('checkbox-box-check');\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n      use.setAttributeNS(null, 'href', '#check');\n      use.setAttributeNS(null, 'x', '-1');\n      checkSvg.append(use);\n  \n      const bg = document.createElement('div');\n      bg.classList.add('checkbox-box-background');\n  \n      const border = document.createElement('div');\n      border.classList.add('checkbox-box-border');\n  \n      box.append(border, bg, checkSvg);\n  \n      label.append(box);\n    }\n\n    if(span) {\n      label.append(span);\n    }\n\n    if(options.withRipple) {\n      label.classList.add('checkbox-ripple', 'hover-effect');\n      ripple(label, undefined, undefined, true);\n      //label.prepend(input);\n    } else if(options.withHover) {\n      label.classList.add('hover-effect');\n    }\n  }\n\n  get checked() {\n    return this.input.checked;\n  }\n\n  set checked(checked: boolean) {\n    this.setValueSilently(checked);\n\n    const event = new Event('change', {bubbles: true, cancelable: true});\n    this.input.dispatchEvent(event);\n  }\n\n  public setValueSilently(checked: boolean) {\n    this.input.checked = checked;\n  }\n\n  public toggleDisability(disable: boolean) {\n    this.label.classList.toggle('checkbox-disabled', disable);\n    return () => this.toggleDisability(!disable);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function findUpTag(el: any, tag: string): HTMLElement {\n  return el.closest(tag);\n  /* if(el.tagName === tag) return el; // 03.02.2020\n\n  while(el.parentElement) {\n    el = el.parentElement;\n    if(el.tagName === tag) \n      return el;\n  }\n  return null; */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport { blobConstruct } from \"../helpers/blob\";\n\nexport class FileManager {\n  public blobSupported = true;\n  \n  constructor() {\n    try {\n      blobConstruct([], '');\n    } catch(e) {\n      this.blobSupported = false;\n    }\n  }\n  \n  public isAvailable() {\n    return this.blobSupported;\n  }\n  \n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\n    if(bytes instanceof Blob) { // is file bytes\n      return new Promise((resolve, reject) => {\n        let fileReader = new FileReader();\n        fileReader.onload = function(event) {\n          let arrayBuffer = event.target.result as ArrayBuffer;\n          \n          let arr = new Uint8Array(arrayBuffer);\n          \n          fileWriter.write(arr).then(resolve, reject);\n        };\n        \n        fileReader.readAsArrayBuffer(bytes);\n      });\n    } else {\n      return fileWriter.write(bytes);\n    }\n  }\n\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\n    const blobParts: Array<Uint8Array | string> = [];\n    const fakeFileWriter = {\n      write: async(part: Uint8Array | string) => {\n        if(!this.blobSupported) {\n          throw false;\n        }\n        \n        blobParts.push(part);\n      },\n      truncate: () => {\n        blobParts.length = 0;\n      },\n      finalize: (saveToStorage = true) => {\n        const blob = blobConstruct(blobParts, mimeType);\n\n        if(saveToStorage && saveFileCallback) {\n          saveFileCallback(blob);\n        }\n        \n        return blob;\n      }\n    };\n    \n    return fakeFileWriter;\n  }\n}\n\nexport default new FileManager();\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../config/modes';\nimport { blobConstruct } from '../helpers/blob';\nimport FileManager from './filemanager';\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\n//import { logger } from './polyfill';\n\nexport default class CacheStorageController {\n  private static STORAGES: CacheStorageController[] = [];\n  //public dbName = 'cachedFiles';\n  private openDbPromise: Promise<Cache>;\n\n  private useStorage = true;\n\n  //private log: ReturnType<typeof logger> = logger('CS');\n\n  constructor(private dbName: string) {\n    if(Modes.test) {\n      this.dbName += '_test';\n    }\n    \n    this.openDatabase();\n    CacheStorageController.STORAGES.push(this);\n  }\n\n  private openDatabase(): Promise<Cache> {\n    if(this.openDbPromise) {\n      return this.openDbPromise;\n    }\n\n    return this.openDbPromise = caches.open(this.dbName);\n  }\n\n  public delete(entryName: string) {\n    return this.timeoutOperation((cache) => {\n      return cache.delete('/' + entryName);\n    });\n  }\n\n  public deleteAll() {\n    return caches.delete(this.dbName);\n  }\n\n  public save(entryName: string, response: Response) {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    return this.timeoutOperation((cache) => {\n      return cache.put('/' + entryName, response);\n    });\n  }\n\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    //return Promise.resolve(blobConstruct([blob]));\n    if(!(blob instanceof Blob)) {\n      blob = blobConstruct(blob) as Blob;\n    }\n\n    return this.save(fileName, new Response(blob)).then(() => {\n      return blob as Blob;\n    });\n  }\n\n  /* public getBlobSize(blob: any) {\n    return blob.size || blob.byteLength || blob.length;\n  } */\n\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\n    if(!this.useStorage) return Promise.reject('STORAGE_OFFLINE');\n\n    /* if(method === 'blob') {\n      return Promise.reject();\n    } */\n\n    // const str = `get fileName: ${fileName}`;\n    // console.time(str);\n    return this.timeoutOperation(async(cache) => {\n      const response = await cache.match('/' + fileName);\n\n      if(!response || !cache) {\n        //console.warn('getFile:', response, fileName);\n        throw 'NO_ENTRY_FOUND';\n      }\n   \n      const promise = response[method]();\n      // promise.then(() => {\n      //   console.timeEnd(str);\n      // });\n      return promise;\n    });\n  }\n\n  private timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\n    return new Promise<T>(async(resolve, reject) => {\n      let rejected = false;\n      const timeout = setTimeout(() => {\n        reject();\n        //console.warn('CACHESTORAGE TIMEOUT');\n        rejected = true;\n      }, 15e3);\n\n      try {\n        const cache = await this.openDatabase();\n        if(!cache) {\n          throw 'no cache?';\n        }\n\n        const res = await callback(cache);\n\n        if(rejected) return;\n        resolve(res);\n      } catch(err) {\n        reject(err);\n      }\n\n      clearTimeout(timeout);\n    });\n  }\n\n  public getFileWriter(fileName: string, mimeType: string) {\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\n      return this.saveFile(fileName, blob);\n    });\n\n    return Promise.resolve(fakeWriter);\n  }\n\n  public static toggleStorage(enabled: boolean) {\n    return Promise.all(this.STORAGES.map(storage => {\n      storage.useStorage = enabled;\n      \n      if(!enabled) {\n        return storage.deleteAll();\n      }\n    }));\n  }\n}\n\n//const cacheStorage = new CacheStorageController(); \n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\n//export default cacheStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { formatPhoneNumber, putPreloader } from \"../components/misc\";\nimport Scrollable from '../components/scrollable';\nimport Countries, { Country as _Country } from \"../countries\";\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\nimport { RichTextProcessor } from '../lib/richtextprocessor';\nimport { attachClickEvent, cancelEvent, replaceContent, toggleDisability } from \"../helpers/dom\";\nimport Page from \"./page\";\nimport InputField from \"../components/inputField\";\nimport CheckboxField from \"../components/checkboxField\";\nimport Button from \"../components/button\";\nimport { isAppleMobile } from \"../helpers/userAgent\";\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport App from \"../config/app\";\nimport Modes from \"../config/modes\";\nimport { _i18n, i18n } from \"../lib/langPack\";\nimport lottieLoader from \"../lib/lottieLoader\";\nimport { ripple } from \"../components/ripple\";\nimport findUpTag from \"../helpers/dom/findUpTag\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport { randomLong } from \"../helpers/random\";\nimport AppStorage from \"../lib/storage\";\nimport CacheStorageController from \"../lib/cacheStorage\";\nimport pageSignQR from \"./pageSignQR\";\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\n\ntype Country = _Country & {\n  li?: HTMLLIElement[]\n};\n\n//import _countries from '../countries_pretty.json';\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\n\nlet onFirstMount = () => {\n  if(Modes.test) {\n    Countries.push({\n      name: 'Test Country',\n      phoneCode: '999 66',\n      code: 'TC',\n      emoji: '🤔',\n      pattern: '999 66 XXX XX'\n    });\n  \n    console.log('Added test country to list!');\n  }\n\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\n  const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\n\n  let lastCountrySelected: Country = null;\n\n  const inputWrapper = document.createElement('div');\n  inputWrapper.classList.add('input-wrapper');\n\n  const countryInputField = new InputField({\n    label: 'Login.CountrySelectorLabel',\n    name: randomLong(),\n    plainText: true\n  });\n\n  countryInputField.container.classList.add('input-select');\n\n  const countryInput = countryInputField.input as HTMLInputElement;\n  countryInput.autocomplete = randomLong();\n\n  const selectWrapper = document.createElement('div');\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\n\n  const arrowDown = document.createElement('span');\n  arrowDown.classList.add('arrow', 'arrow-down');\n  countryInputField.container.append(arrowDown);\n\n  const selectList = document.createElement('ul');\n  selectWrapper.appendChild(selectList);\n\n  const scroll = new Scrollable(selectWrapper);\n\n  let initSelect = () => {\n    initSelect = null;\n\n    countries.forEach((c) => {\n      const emoji = c.emoji;\n\n      const liArr: Array<HTMLLIElement> = [];\n      c.phoneCode.split(' and ').forEach((phoneCode: string) => {\n        const li = document.createElement('li');\n        const spanEmoji = document.createElement('span');\n\n        const kek = RichTextProcessor.wrapRichText(emoji);\n\n        li.appendChild(spanEmoji);\n        spanEmoji.outerHTML = kek;\n  \n        li.append(c.name);\n\n        const span = document.createElement('span');\n        span.classList.add('phone-code');\n        span.innerText = '+' + phoneCode;\n        li.appendChild(span);\n\n        liArr.push(li);\n        selectList.append(li);\n      });\n\n      c.li = liArr;\n    });\n    \n    selectList.addEventListener('mousedown', (e) => {\n      if(e.button !== 0) { // other buttons but left shall not pass\n        return;\n      }\n      \n      let target = e.target as HTMLElement;\n      if(target.tagName !== 'LI') target = findUpTag(target, 'LI');\n      \n      selectCountryByTarget(target);\n      //console.log('clicked', e, countryName, phoneCode);\n    });\n\n    countryInputField.container.appendChild(selectWrapper);\n  };\n\n  const selectCountryByTarget = (target: HTMLElement) => {\n    const countryName = target.childNodes[1].textContent;//target.innerText.split('\\n').shift();\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\n\n    countryInput.value = countryName;\n    lastCountrySelected = countries.find(c => c.name === countryName);\n    \n    telEl.value = lastValue = phoneCode;\n    hidePicker();\n    setTimeout(() => telEl.focus(), 0);\n  };\n  \n  initSelect();\n\n  let hideTimeout: number;\n\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\n    if(initSelect) {\n      initSelect();\n    } else {\n      countries.forEach((c) => {\n        c.li.forEach(li => li.style.display = '');\n      });\n    }\n\n    clearTimeout(hideTimeout);\n    hideTimeout = undefined;\n\n    selectWrapper.classList.remove('hide');\n    void selectWrapper.offsetWidth; // reflow\n    selectWrapper.classList.add('active');\n\n    countryInputField.select();\n\n    fastSmoothScroll(page.pageEl.parentElement.parentElement, countryInput, 'start', 4);\n\n    setTimeout(() => {\n      if(!mouseDownHandlerAttached) {\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\n        mouseDownHandlerAttached = true;\n      }\n    }, 0);\n  });\n\n  let mouseDownHandlerAttached = false;\n  const onMouseDown = (e: MouseEvent) => {\n    if(findUpClassName(e.target, 'input-select')) {\n      return;\n    }\n    if(e.target === countryInput) {\n      return;\n    }\n\n    hidePicker();\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\n    mouseDownHandlerAttached = false;\n  };\n\n  const hidePicker = () => {\n    if(hideTimeout !== undefined) return;\n    selectWrapper.classList.remove('active');\n    hideTimeout = window.setTimeout(() => {\n      selectWrapper.classList.add('hide');\n      hideTimeout = undefined;\n    }, 200);\n  };\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\n    hidePicker();\n    \n    e.cancelBubble = true;\n  }, {capture: true}); */\n\n  countryInput.addEventListener('keyup', function(this: typeof countryInput, e) {\n    if(e.ctrlKey || e.key === 'Control') return false;\n\n    //let i = new RegExp('^' + this.value, 'i');\n    let _value = this.value.toLowerCase();\n    let matches: Country[] = [];\n    countries.forEach((c) => {\n      let good = c.name.toLowerCase().indexOf(_value) !== -1/*  === 0 */;//i.test(c.name);\n\n      c.li.forEach(li => li.style.display = good ? '' : 'none');\n      if(good) matches.push(c);\n    });\n\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\n      if(matches[0].name === lastCountrySelected) return false;\n      //console.log('clicking', matches[0]);\n\n      var clickEvent = document.createEvent('MouseEvents');\n      clickEvent.initEvent('mousedown', true, true);\n      matches[0].li[0].dispatchEvent(clickEvent);\n      return false;\n    } else  */if(matches.length === 0) {\n      countries.forEach((c) => {\n        c.li.forEach(li => li.style.display = '');\n      });\n    } else if(matches.length === 1 && e.key === 'Enter') {\n      selectCountryByTarget(matches[0].li[0]);\n    }\n  });\n\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\n    e.cancelBubble = true;\n    e.preventDefault();\n    if(countryInput.matches(':focus')) countryInput.blur();\n    else countryInput.focus();\n  });\n\n  let pasted = false;\n  let lastValue = '';\n  \n  const telInputField = new InputField({\n    label: 'Login.PhoneLabel',\n    plainText: true,\n    name: 'phone'\n  });\n  let telEl = telInputField.input as HTMLInputElement;\n  telEl.type = 'tel';\n  telEl.autocomplete = 'rr55RandomRR55';\n  telEl.addEventListener('input', function(this: typeof telEl, e) {\n    //console.log('input', this.value);\n    this.classList.remove('error');\n\n    lottieLoader.loadLottieWorkers();\n\n    const value = this.value;\n    const diff = Math.abs(value.length - lastValue.length);\n    if(diff > 1 && !pasted && isAppleMobile) {\n      this.value = lastValue + value;\n    }\n\n    pasted = false;\n\n    telInputField.setLabel();\n\n    let formatted: string, country: Country;\n    if(this.value.replace(/\\++/, '+') === '+') {\n      this.value = '+';\n    } else {\n      const o = formatPhoneNumber(this.value);\n      formatted = o.formatted;\n      country = o.country;\n      this.value = lastValue = formatted ? '+' + formatted : '';\n    }\n\n    //console.log(formatted, country);\n\n    let countryName = country ? country.name : ''/* 'Unknown' */;\n    if(countryName !== countryInput.value && (!lastCountrySelected || !country || lastCountrySelected.phoneCode !== country.phoneCode)) {\n      countryInput.value = countryName;\n      lastCountrySelected = country;\n    }\n\n    //if(country && (this.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\n    if(country || (this.value.length - 1) > 1) {\n      btnNext.style.visibility = '';\n    } else {\n      btnNext.style.visibility = 'hidden';\n    }\n  });\n\n  telEl.addEventListener('paste', (e) => {\n    pasted = true;\n    //console.log('paste', telEl.value);\n  });\n\n  /* telEl.addEventListener('change', (e) => {\n    console.log('change', telEl.value);\n  }); */\n\n  telEl.addEventListener('keypress', function(this: typeof telEl, e) {\n    //console.log('keypress', this.value);\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\n      return onSubmit();\n    } else if(/\\D/.test(e.key) && !(e.metaKey || e.ctrlKey) && !(e.key === '+' && e.shiftKey/*  && !this.value */)) {\n      e.preventDefault();\n      return false;\n    }\n  });\n\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n    this.removeAttribute('readonly'); // fix autocomplete\n  });*/\n\n  const signedCheckboxField = new CheckboxField({\n    text: 'Login.KeepSigned', \n    name: 'keepSession',\n    withRipple: true\n  });\n\n  signedCheckboxField.input.addEventListener('change', () => {\n    const keepSigned = signedCheckboxField.checked;\n    appStateManager.pushToState('keepSigned', keepSigned);\n    \n    AppStorage.toggleStorage(keepSigned);\n    CacheStorageController.toggleStorage(keepSigned);\n    apiManager.toggleStorage(keepSigned);\n  });\n\n  appStateManager.getState().then(state => {\n    signedCheckboxField.checked = state.keepSigned;\n  });\n\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\n  btnNext.style.visibility = 'hidden';\n\n  const onSubmit = (e?: Event) => {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\n\n    replaceContent(btnNext, i18n('PleaseWait'));\n    putPreloader(btnNext);\n\n    //return;\n\n    let phone_number = telEl.value;\n    apiManager.invokeApi('auth.sendCode', {\n      phone_number: phone_number,\n      api_id: App.id,\n      api_hash: App.hash,\n      settings: {\n        _: 'codeSettings' // that's how we sending Type\n      }\n      //lang_code: navigator.language || 'en'\n    }).then((code) => {\n      //console.log('got code', code);\n\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\n    }).catch(err => {\n      toggle();\n\n      switch(err.type) {\n        case 'PHONE_NUMBER_INVALID':\n          telInputField.setError();\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\n          telEl.classList.add('error');\n          replaceContent(btnNext, i18n('Login.Next'));\n          break;\n        default:\n          console.error('auth.sendCode error:', err);\n          btnNext.innerText = err.type;\n          break;\n      }\n    });\n  };\n\n  attachClickEvent(btnNext, onSubmit);\n\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\n\n  let qrMounted = false;\n  btnQr.addEventListener('click', () => {\n    pageSignQR.mount();\n    /* const promise = import('./pageSignQR');\n    btnQr.disabled = true;\n\n    let preloaderDiv: HTMLElement;\n    if(!qrMounted) {\n      preloaderDiv = putPreloader(btnQr);\n      qrMounted = true;\n    }\n\n    promise.then(module => {\n      module.default.mount();\n\n      setTimeout(() => {\n        btnQr.removeAttribute('disabled');\n        if(preloaderDiv) {\n          preloaderDiv.remove();\n        }\n      }, 200);\n    }); */\n  });\n\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\n\n  const h4 = document.createElement('h4');\n  _i18n(h4, 'Login.Title');\n\n  const subtitle = document.createElement('div');\n  subtitle.classList.add('subtitle');\n  _i18n(subtitle, 'Login.StartText');\n\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\n\n  let tryAgain = () => {\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\n      const dcs = [1, 2, 3, 4, 5];\n      const done: number[] = [nearestDcResult.this_dc];\n\n      let promise: Promise<any>;\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\n          done.push(nearestDcResult.nearest_dc)\n        });\n      }\n\n      (promise || Promise.resolve()).then(() => {\n        const g = () => {\n          const dcId = dcs.shift();\n          if(!dcId) return;\n\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\n            apiManager.getNetworker(dcId, {fileDownload: true}).finally(g);\n          }, done.includes(dcId) ? 0 : 3000);\n        };\n        \n        g();\n      });\n      \n      return nearestDcResult;\n    }).then((nearestDcResult) => {\n      let country = countries.find((c) => c.code === nearestDcResult.country);\n      if(country) {\n        if(!countryInput.value.length && !telEl.value.length) {\n          countryInput.value = country.name;\n          lastCountrySelected = country;\n          telEl.value = lastValue = '+' + country.phoneCode.split(' and ').shift();\n        }\n      }\n  \n      //console.log('woohoo', nearestDcResult, country);\n    })//.catch(tryAgain);\n  };\n\n  if(!isTouchSupported) {\n    setTimeout(() => {\n      telEl.focus();\n    }, 0);\n  }\n\n  getLanguageChangeButton(inputWrapper);\n\n  tryAgain();\n};\n\nconst page = new Page('page-sign', true, onFirstMount, () => {\n  if(btnNext) {\n    replaceContent(btnNext, i18n('Login.Next'));\n    ripple(btnNext, undefined, undefined, true);\n    btnNext.removeAttribute('disabled');\n  }\n\n  if(btnQr) {\n    btnQr.removeAttribute('disabled');\n  }\n\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\n});\n\nexport default page;\n"],"sourceRoot":""}