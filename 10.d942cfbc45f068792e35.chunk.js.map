{"version":3,"sources":["webpack:///./src/components/button.ts","webpack:///./src/components/inputField.ts","webpack:///./src/components/ripple.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/pages/pageIm.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/pages/pageSignIn.ts","webpack:///./src/pages/pageSignQR.ts"],"names":["className","options","button","document","createElement","asDiv","icon","noRipple","rippleSquare","classList","add","onlyMobile","disabled","setAttribute","text","append","init","addEventListener","e","target","hasAttribute","parentElement","preventDefault","originalEvent","clipboardData","getData","entities","parseEntities","filter","_","wrapRichText","noLinks","wrappingDraft","window","execCommand","checkAndSetRTL","input","char","HTMLInputElement","value","innerText","direction","style","InputState","this","container","maxLength","showLengthOn","Math","round","placeholder","name","plainText","processInput","label","labelText","innerHTML","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","showScrollDebounced","remove","undefined","border","setLabel","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","length","diff","isError","toggle","select","textContent","labelOptions","scrollHeight","clientHeight","height","setValueSilently","event","Event","bubbles","cancelable","dispatchEvent","fireFakeInput","originalValue","silent","wrapDraftText","state","Error","Valid","setState","rippleClickId","ripple","elem","callback","Promise","resolve","onEnd","prepend","querySelector","r","handler","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","delay","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","size","sqrt","abs","width","x","y","isRippleUnneeded","includes","tagName","touchEnd","settings","animationsEnabled","touches","once","cancelBubble","stopPropagation","passive","dataset","ScrollableBase","el","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Array","from","children","forEach","c","onScroll","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","super","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","bottom","splitUp","scrollTop","checkForTriggers","maxScrollTop","setListeners","elements","padding","offsetHeight","getDistanceToEnd","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","toggleDisability","span","type","id","checked","stateKey","getState","then","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","disable","page","pushToState","m","default","broadcast","requestedServerLanguage","getCacheLangPack","langPack","local","getLangPack","lang_code","finally","findUpTag","tag","closest","passwordManager","invokeApi","result","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","computeSRP","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","all","hashes","new_password_hash","inputCheckPassword","auth","saveApiUser","user","setUserAuth","code","LoginPage","body","imageDiv","title","titleLangKey","subtitle","subtitleLangKey","withInputWrapper","inputWrapper","PasswordInputField","passwordVisible","onVisibilityClick","toggleVisible","onVisibilityClickAdditional","autocomplete","stealthy","tabIndex","insertBefore","cloneNode","nextSibling","PasswordMonkey","passwordInputField","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","noCache","_animation","animation","currentFrame","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","passwordInput","btnNext","btnNextI18n","IntlElement","key","getStateInterval","setInterval","_state","wrapEmojiText","onSubmit","update","preloader","check","response","clearInterval","mount","monkey","removeAttribute","catch","err","isMobile","load","focus","btnQr","test","push","phoneCode","emoji","pattern","console","countries","sort","a","b","localeCompare","lastCountrySelected","countryInputField","countryInput","selectWrapper","arrowDown","selectList","appendChild","initSelect","liArr","split","li","spanEmoji","kek","outerHTML","selectCountryByTarget","countryName","childNodes","find","telEl","lastValue","hidePicker","hideTimeout","display","clearTimeout","offsetWidth","pageEl","mouseDownHandlerAttached","onMouseDown","ctrlKey","_value","toLowerCase","matches","good","blur","pasted","telInputField","loadLottieWorkers","formatted","country","o","visibility","metaKey","shiftKey","signedCheckboxField","keepSigned","toggleStorage","phone_number","api_id","api_hash","hash","Object","assign","setError","error","qrMounted","promise","preloaderDiv","module","h4","config","suggested_lang_code","lastRequestedLangCode","getStrings","res","backup","string","backupString","strings","get","btnChangeLanguage","nearestDcResult","dcs","done","this_dc","nearest_dc","getNetworker","g","dcId","shift","fileDownload","cachedPromise","btnBack","helpList","stop","QRCodeStyling","prevToken","ignoreErrors","iterate","isLoop","loginToken","except_ids","dc_id","setBaseDcId","token","authorization","url","documentElement","surfaceColor","trim","textColor","primaryColor","logoUrl","fetch","blob","Blob","reader","FileReader","onload","readAsDataURL","qrCode","devicePixelRatio","data","image","dotsOptions","color","cornersSquareOptions","imageOptions","imageSize","backgroundOptions","qrOptions","errorCorrectionLevel","lastChild","_drawingPromise","race","_canvas","_image","slice","timestamp","expires","serverTimeOffset","warn","handled","func"],"mappings":"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","file":"10.d942cfbc45f068792e35.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nconst Button = (className: string, options: Partial<{\r\n  noRipple: true, \r\n  onlyMobile: true, \r\n  icon: string, \r\n  rippleSquare: true, \r\n  text: LangPackKey, \r\n  disabled: boolean,\r\n  asDiv: boolean\r\n}> = {}) => {\r\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\r\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\r\n\r\n  if(!options.noRipple) {\r\n    if(options.rippleSquare) {\r\n      button.classList.add('rp-square');\r\n    }\r\n\r\n    ripple(button);\r\n  }\r\n\r\n  if(options.onlyMobile) {\r\n    button.classList.add('only-handhelds');\r\n  }\r\n\r\n  if(options.disabled) {\r\n    button.setAttribute('disabled', 'true');\r\n  }\r\n\r\n  if(options.text) {\r\n    button.append(i18n(options.text));\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default Button;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { getRichValue, isInputEmpty } from \"../helpers/dom\";\r\nimport { debounce } from \"../helpers/schedulers\";\r\nimport { checkRTL } from \"../helpers/string\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!(e.target as HTMLElement).hasAttribute('contenteditable') && !(e.target as HTMLElement).parentElement.hasAttribute('contenteditable')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\nconst checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n};\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  protected wasInputFakeClientHeight: number;\r\n  protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    if(options.maxLength) {\r\n      options.showLengthOn = Math.round(options.maxLength / 3);\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        this.wasInputFakeClientHeight = 0;\r\n        this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input)].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput() {\r\n    const {scrollHeight, clientHeight} = this.inputFake;\r\n    if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    }\r\n\r\n    this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input);\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    const event = new Event('input', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && this.value !== this.originalValue;\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {isTouchSupported} from \"../helpers/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!isTouchSupported) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(isTouchSupported) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    elem.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      elem.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        elem.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    elem.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y'\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: HTMLElement[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!isTouchSupported) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","//import {stackBlurImage} from '../lib/StackBlur';\r\n//import appStateManager from \"../lib/appManagers/appStateManager\";\r\n/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { blurActiveElement } from \"../helpers/dom\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport I18n from \"../lib/langPack\";\r\nimport Page from \"./page\";\r\n\r\nlet onFirstMount = () => {\r\n  //return;\r\n  appStateManager.pushToState('authState', {_: 'authStateSignedIn'});\r\n  // ! TOO SLOW\r\n  /* appStateManager.saveState(); */\r\n\r\n  import('../lib/rootScope').then(m => {\r\n    m.default.broadcast('im_mount');\r\n  });\r\n\r\n  if(!I18n.requestedServerLanguage) {\r\n    I18n.getCacheLangPack().then(langPack => {\r\n      if(langPack.local) {\r\n        I18n.getLangPack(langPack.lang_code);\r\n      }\r\n    });\r\n  }\r\n\r\n  blurActiveElement();\r\n  return new Promise<void>((resolve) => {\r\n    window.requestAnimationFrame(() => {\r\n      const promise = import('../lib/appManagers/appDialogsManager');\r\n      promise.finally(async() => {\r\n        //alert('pageIm!');\r\n        resolve();\r\n    \r\n        //AudioContext && global.navigator && global.navigator.mediaDevices && global.navigator.mediaDevices.getUserMedia && global.WebAssembly;\r\n    \r\n        /* // @ts-ignore\r\n        var AudioContext = globalThis.AudioContext || globalThis.webkitAudioContext;\r\n        alert('AudioContext:' + typeof(AudioContext));\r\n        // @ts-ignore\r\n        alert('global.navigator:' + typeof(navigator));\r\n        alert('navigator.mediaDevices:' + typeof(navigator.mediaDevices));\r\n        alert('navigator.mediaDevices.getUserMedia:' + typeof(navigator.mediaDevices?.getUserMedia));\r\n        alert('global.WebAssembly:' + typeof(WebAssembly)); */\r\n    \r\n        //(Array.from(document.getElementsByClassName('rp')) as HTMLElement[]).forEach(el => ripple(el));\r\n      });\r\n    });\r\n  });\r\n\r\n  //let promise = /* Promise.resolve() */.then(() => {//import('../lib/services').then(services => {\r\n    /* fetch('assets/img/camomile.jpg')\r\n    .then(res => res.blob())\r\n    .then(blob => {\r\n      let img = new Image();\r\n      let url = URL.createObjectURL(blob);\r\n      img.src = url;\r\n      img.onload = () => {\r\n        let id = 'chat-background-canvas';\r\n        var canvas  = document.getElementById(id) as HTMLCanvasElement;\r\n        //URL.revokeObjectURL(url);\r\n  \r\n        let elements = ['.chat-container'].map(selector => {\r\n          return document.querySelector(selector) as HTMLDivElement;\r\n        });\r\n  \r\n        stackBlurImage(img, id, 15, 0);\r\n  \r\n        canvas.toBlob(blob => {\r\n          //let dataUrl = canvas.toDataURL('image/jpeg', 1);\r\n          let dataUrl = URL.createObjectURL(blob);\r\n  \r\n          elements.forEach(el => {\r\n            el.style.backgroundImage = 'url(' + dataUrl + ')';\r\n          });\r\n        }, 'image/jpeg', 1);\r\n      };\r\n    }); */\r\n  //});\r\n};\r\n\r\nconst page = new Page('page-chats', false, onFirstMount);\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountPasswordInputSettings, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport type CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appUsersManager from '../appManagers/appUsersManager';\r\nimport apiManager from './mtprotoworker';\r\n//import { computeCheck } from \"../crypto/srp\";\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: ReturnType<CryptoWorkerMethods['computeSRP']>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.computeSRP(settings.currentPassword, state);\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.computeSRP(settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.computeSRP(password, state).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          appUsersManager.saveApiUser(auth.user);\r\n          apiManager.setUserAuth(auth.user.id);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/misc';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport passwordManager from '../lib/mtproto/passwordManager';\r\nimport Page from './page';\r\nimport pageIm from './pageIm';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport { attachClickEvent, cancelEvent, htmlToSpan, replaceContent, toggleDisability } from '../helpers/dom';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && passwordManager.getState().then(_state => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          pageIm.mount();\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { formatPhoneNumber, putPreloader } from \"../components/misc\";\r\nimport Scrollable from '../components/scrollable';\r\nimport Countries, { Country as _Country } from \"../countries\";\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\r\nimport { RichTextProcessor } from '../lib/richtextprocessor';\r\nimport { attachClickEvent, cancelEvent, replaceContent, toggleDisability } from \"../helpers/dom\";\r\nimport Page from \"./page\";\r\nimport InputField from \"../components/inputField\";\r\nimport CheckboxField from \"../components/checkboxField\";\r\nimport Button from \"../components/button\";\r\nimport { isAppleMobile } from \"../helpers/userAgent\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport App from \"../config/app\";\r\nimport Modes from \"../config/modes\";\r\nimport I18n, { _i18n, i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { LangPackString } from \"../layer\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { ripple } from \"../components/ripple\";\r\nimport findUpTag from \"../helpers/dom/findUpTag\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { randomLong } from \"../helpers/random\";\r\nimport AppStorage from \"../lib/storage\";\r\nimport CacheStorageController from \"../lib/cacheStorage\";\r\n\r\ntype Country = _Country & {\r\n  li?: HTMLLIElement[]\r\n};\r\n\r\n//import _countries from '../countries_pretty.json';\r\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\r\n\r\nlet onFirstMount = () => {\r\n  if(Modes.test) {\r\n    Countries.push({\r\n      name: 'Test Country',\r\n      phoneCode: '999 66',\r\n      code: 'TC',\r\n      emoji: '🤔',\r\n      pattern: '999 66 XXX XX'\r\n    });\r\n  \r\n    console.log('Added test country to list!');\r\n  }\r\n\r\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\r\n  const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  let lastCountrySelected: Country = null;\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const countryInputField = new InputField({\r\n    label: 'Login.CountrySelectorLabel',\r\n    name: randomLong(),\r\n    plainText: true\r\n  });\r\n\r\n  countryInputField.container.classList.add('input-select');\r\n\r\n  const countryInput = countryInputField.input as HTMLInputElement;\r\n  countryInput.autocomplete = randomLong();\r\n\r\n  const selectWrapper = document.createElement('div');\r\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\r\n\r\n  const arrowDown = document.createElement('span');\r\n  arrowDown.classList.add('arrow', 'arrow-down');\r\n  countryInputField.container.append(arrowDown);\r\n\r\n  const selectList = document.createElement('ul');\r\n  selectWrapper.appendChild(selectList);\r\n\r\n  const scroll = new Scrollable(selectWrapper);\r\n\r\n  let initSelect = () => {\r\n    initSelect = null;\r\n\r\n    countries.forEach((c) => {\r\n      const emoji = c.emoji;\r\n\r\n      const liArr: Array<HTMLLIElement> = [];\r\n      c.phoneCode.split(' and ').forEach((phoneCode: string) => {\r\n        const li = document.createElement('li');\r\n        const spanEmoji = document.createElement('span');\r\n\r\n        const kek = RichTextProcessor.wrapRichText(emoji);\r\n\r\n        li.appendChild(spanEmoji);\r\n        spanEmoji.outerHTML = kek;\r\n  \r\n        li.append(c.name);\r\n\r\n        const span = document.createElement('span');\r\n        span.classList.add('phone-code');\r\n        span.innerText = '+' + phoneCode;\r\n        li.appendChild(span);\r\n\r\n        liArr.push(li);\r\n        selectList.append(li);\r\n      });\r\n\r\n      c.li = liArr;\r\n    });\r\n    \r\n    selectList.addEventListener('mousedown', (e) => {\r\n      if(e.button !== 0) { // other buttons but left shall not pass\r\n        return;\r\n      }\r\n      \r\n      let target = e.target as HTMLElement;\r\n      if(target.tagName !== 'LI') target = findUpTag(target, 'LI');\r\n      \r\n      selectCountryByTarget(target);\r\n      //console.log('clicked', e, countryName, phoneCode);\r\n    });\r\n\r\n    countryInputField.container.appendChild(selectWrapper);\r\n  };\r\n\r\n  const selectCountryByTarget = (target: HTMLElement) => {\r\n    const countryName = target.childNodes[1].textContent;//target.innerText.split('\\n').shift();\r\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\r\n\r\n    countryInput.value = countryName;\r\n    lastCountrySelected = countries.find(c => c.name === countryName);\r\n    \r\n    telEl.value = lastValue = phoneCode;\r\n    hidePicker();\r\n    setTimeout(() => telEl.focus(), 0);\r\n  };\r\n  \r\n  initSelect();\r\n\r\n  let hideTimeout: number;\r\n\r\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\r\n    if(initSelect) {\r\n      initSelect();\r\n    } else {\r\n      countries.forEach((c) => {\r\n        c.li.forEach(li => li.style.display = '');\r\n      });\r\n    }\r\n\r\n    clearTimeout(hideTimeout);\r\n    hideTimeout = undefined;\r\n\r\n    selectWrapper.classList.remove('hide');\r\n    void selectWrapper.offsetWidth; // reflow\r\n    selectWrapper.classList.add('active');\r\n\r\n    countryInputField.select();\r\n\r\n    fastSmoothScroll(page.pageEl.parentElement.parentElement, countryInput, 'start', 4);\r\n\r\n    setTimeout(() => {\r\n      if(!mouseDownHandlerAttached) {\r\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\r\n        mouseDownHandlerAttached = true;\r\n      }\r\n    }, 0);\r\n  });\r\n\r\n  let mouseDownHandlerAttached = false;\r\n  const onMouseDown = (e: MouseEvent) => {\r\n    if(findUpClassName(e.target, 'input-select')) {\r\n      return;\r\n    }\r\n    if(e.target === countryInput) {\r\n      return;\r\n    }\r\n\r\n    hidePicker();\r\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\r\n    mouseDownHandlerAttached = false;\r\n  };\r\n\r\n  const hidePicker = () => {\r\n    if(hideTimeout !== undefined) return;\r\n    selectWrapper.classList.remove('active');\r\n    hideTimeout = window.setTimeout(() => {\r\n      selectWrapper.classList.add('hide');\r\n      hideTimeout = undefined;\r\n    }, 200);\r\n  };\r\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\r\n    hidePicker();\r\n    \r\n    e.cancelBubble = true;\r\n  }, {capture: true}); */\r\n\r\n  countryInput.addEventListener('keyup', function(this: typeof countryInput, e) {\r\n    if(e.ctrlKey || e.key === 'Control') return false;\r\n\r\n    //let i = new RegExp('^' + this.value, 'i');\r\n    let _value = this.value.toLowerCase();\r\n    let matches: Country[] = [];\r\n    countries.forEach((c) => {\r\n      let good = c.name.toLowerCase().indexOf(_value) !== -1/*  === 0 */;//i.test(c.name);\r\n\r\n      c.li.forEach(li => li.style.display = good ? '' : 'none');\r\n      if(good) matches.push(c);\r\n    });\r\n\r\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\r\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\r\n      if(matches[0].name === lastCountrySelected) return false;\r\n      //console.log('clicking', matches[0]);\r\n\r\n      var clickEvent = document.createEvent('MouseEvents');\r\n      clickEvent.initEvent('mousedown', true, true);\r\n      matches[0].li[0].dispatchEvent(clickEvent);\r\n      return false;\r\n    } else  */if(matches.length === 0) {\r\n      countries.forEach((c) => {\r\n        c.li.forEach(li => li.style.display = '');\r\n      });\r\n    } else if(matches.length === 1 && e.key === 'Enter') {\r\n      selectCountryByTarget(matches[0].li[0]);\r\n    }\r\n  });\r\n\r\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\r\n    e.cancelBubble = true;\r\n    e.preventDefault();\r\n    if(countryInput.matches(':focus')) countryInput.blur();\r\n    else countryInput.focus();\r\n  });\r\n\r\n  let pasted = false;\r\n  let lastValue = '';\r\n  \r\n  const telInputField = new InputField({\r\n    label: 'Login.PhoneLabel',\r\n    plainText: true,\r\n    name: 'phone'\r\n  });\r\n  let telEl = telInputField.input as HTMLInputElement;\r\n  telEl.type = 'tel';\r\n  telEl.autocomplete = 'rr55RandomRR55';\r\n  telEl.addEventListener('input', function(this: typeof telEl, e) {\r\n    //console.log('input', this.value);\r\n    this.classList.remove('error');\r\n\r\n    lottieLoader.loadLottieWorkers();\r\n\r\n    const value = this.value;\r\n    const diff = Math.abs(value.length - lastValue.length);\r\n    if(diff > 1 && !pasted && isAppleMobile) {\r\n      this.value = lastValue + value;\r\n    }\r\n\r\n    pasted = false;\r\n\r\n    telInputField.setLabel();\r\n\r\n    let formatted: string, country: Country;\r\n    if(this.value.replace(/\\++/, '+') === '+') {\r\n      this.value = '+';\r\n    } else {\r\n      const o = formatPhoneNumber(this.value);\r\n      formatted = o.formatted;\r\n      country = o.country;\r\n      this.value = lastValue = formatted ? '+' + formatted : '';\r\n    }\r\n\r\n    //console.log(formatted, country);\r\n\r\n    let countryName = country ? country.name : ''/* 'Unknown' */;\r\n    if(countryName !== countryInput.value && (!lastCountrySelected || !country || lastCountrySelected.phoneCode !== country.phoneCode)) {\r\n      countryInput.value = countryName;\r\n      lastCountrySelected = country;\r\n    }\r\n\r\n    //if(country && (this.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\r\n    if(country || (this.value.length - 1) > 1) {\r\n      btnNext.style.visibility = '';\r\n    } else {\r\n      btnNext.style.visibility = 'hidden';\r\n    }\r\n  });\r\n\r\n  telEl.addEventListener('paste', (e) => {\r\n    pasted = true;\r\n    //console.log('paste', telEl.value);\r\n  });\r\n\r\n  /* telEl.addEventListener('change', (e) => {\r\n    console.log('change', telEl.value);\r\n  }); */\r\n\r\n  telEl.addEventListener('keypress', function(this: typeof telEl, e) {\r\n    //console.log('keypress', this.value);\r\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\r\n      return onSubmit();\r\n    } else if(/\\D/.test(e.key) && !(e.metaKey || e.ctrlKey) && !(e.key === '+' && e.shiftKey/*  && !this.value */)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\r\n    this.removeAttribute('readonly'); // fix autocomplete\r\n  });*/\r\n\r\n  const signedCheckboxField = new CheckboxField({\r\n    text: 'Login.KeepSigned', \r\n    name: 'keepSession',\r\n    withRipple: true\r\n  });\r\n\r\n  signedCheckboxField.input.addEventListener('change', () => {\r\n    const keepSigned = signedCheckboxField.checked;\r\n    appStateManager.pushToState('keepSigned', keepSigned);\r\n    \r\n    AppStorage.toggleStorage(keepSigned);\r\n    CacheStorageController.toggleStorage(keepSigned);\r\n    apiManager.toggleStorage(keepSigned);\r\n  });\r\n\r\n  appStateManager.getState().then(state => {\r\n    signedCheckboxField.checked = state.keepSigned;\r\n  });\r\n\r\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\r\n  btnNext.style.visibility = 'hidden';\r\n\r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\r\n\r\n    replaceContent(btnNext, i18n('PleaseWait'));\r\n    putPreloader(btnNext);\r\n\r\n    //return;\r\n\r\n    let phone_number = telEl.value;\r\n    apiManager.invokeApi('auth.sendCode', {\r\n      phone_number: phone_number,\r\n      api_id: App.id,\r\n      api_hash: App.hash,\r\n      settings: {\r\n        _: 'codeSettings' // that's how we sending Type\r\n      }\r\n      //lang_code: navigator.language || 'en'\r\n    }).then((code) => {\r\n      //console.log('got code', code);\r\n\r\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\r\n    }).catch(err => {\r\n      toggle();\r\n\r\n      switch(err.type) {\r\n        case 'PHONE_NUMBER_INVALID':\r\n          telInputField.setError();\r\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\r\n          telEl.classList.add('error');\r\n          replaceContent(btnNext, i18n('Login.Next'));\r\n          break;\r\n        default:\r\n          console.error('auth.sendCode error:', err);\r\n          btnNext.innerText = err.type;\r\n          break;\r\n      }\r\n    });\r\n  };\r\n\r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\r\n\r\n  let qrMounted = false;\r\n  btnQr.addEventListener('click', () => {\r\n    const promise = import('./pageSignQR');\r\n    btnQr.disabled = true;\r\n\r\n    let preloaderDiv: HTMLElement;\r\n    if(!qrMounted) {\r\n      preloaderDiv = putPreloader(btnQr);\r\n      qrMounted = true;\r\n    }\r\n\r\n    promise.then(module => {\r\n      module.default.mount();\r\n\r\n      setTimeout(() => {\r\n        btnQr.removeAttribute('disabled');\r\n        if(preloaderDiv) {\r\n          preloaderDiv.remove();\r\n        }\r\n      }, 200);\r\n    });\r\n  });\r\n\r\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.Title');\r\n\r\n  const subtitle = document.createElement('div');\r\n  subtitle.classList.add('subtitle');\r\n  _i18n(subtitle, 'Login.StartText');\r\n\r\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\r\n\r\n  let tryAgain = () => {\r\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\r\n      const dcs = [1, 2, 3, 4, 5];\r\n      const done: number[] = [nearestDcResult.this_dc];\r\n\r\n      let promise: Promise<any>;\r\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\r\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\r\n          done.push(nearestDcResult.nearest_dc)\r\n        });\r\n      }\r\n\r\n      (promise || Promise.resolve()).then(() => {\r\n        const g = () => {\r\n          const dcId = dcs.shift();\r\n          if(!dcId) return;\r\n\r\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\r\n            apiManager.getNetworker(dcId, {fileDownload: true}).finally(g);\r\n          }, done.includes(dcId) ? 0 : 3000);\r\n        };\r\n        \r\n        g();\r\n      });\r\n      \r\n      return nearestDcResult;\r\n    }).then((nearestDcResult) => {\r\n      let country = countries.find((c) => c.code === nearestDcResult.country);\r\n      if(country) {\r\n        if(!countryInput.value.length && !telEl.value.length) {\r\n          countryInput.value = country.name;\r\n          lastCountrySelected = country;\r\n          telEl.value = lastValue = '+' + country.phoneCode.split(' and ').shift();\r\n        }\r\n      }\r\n  \r\n      //console.log('woohoo', nearestDcResult, country);\r\n    })//.catch(tryAgain);\r\n  };\r\n\r\n  if(!isTouchSupported) {\r\n    setTimeout(() => {\r\n      telEl.focus();\r\n    }, 0);\r\n  }\r\n\r\n  apiManager.invokeApi('help.getConfig').then(config => {\r\n    if(config.suggested_lang_code !== I18n.lastRequestedLangCode) {\r\n      //I18n.loadLangPack(config.suggested_lang_code);\r\n\r\n      Promise.all([\r\n        I18n.getStrings(config.suggested_lang_code, ['Login.ContinueOnLanguage']),\r\n        I18n.getCacheLangPack()\r\n      ]).then(res => {\r\n        const backup: LangPackString[] = [];\r\n        res[0].forEach(string => {\r\n          const backupString = I18n.strings.get(string.key as LangPackKey);\r\n          if(!backupString) {\r\n            return;\r\n          }\r\n          \r\n          backup.push(backupString);\r\n          I18n.strings.set(string.key as LangPackKey, string);\r\n        });\r\n\r\n        const btnChangeLanguage = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.ContinueOnLanguage'});\r\n        inputWrapper.append(btnChangeLanguage);\r\n\r\n        backup.forEach(string => {\r\n          I18n.strings.set(string.key as LangPackKey, string);\r\n        });\r\n        \r\n        attachClickEvent(btnChangeLanguage, (e) => {\r\n          cancelEvent(e);\r\n\r\n          btnChangeLanguage.disabled = true;\r\n          putPreloader(btnChangeLanguage);\r\n\r\n          I18n.getLangPack(config.suggested_lang_code).then(() => {\r\n            btnChangeLanguage.remove();\r\n          });\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  tryAgain();\r\n};\r\n\r\nconst page = new Page('page-sign', true, onFirstMount, () => {\r\n  if(btnNext) {\r\n    replaceContent(btnNext, i18n('Login.Next'));\r\n    ripple(btnNext, undefined, undefined, true);\r\n    btnNext.removeAttribute('disabled');\r\n  }\r\n\r\n  if(btnQr) {\r\n    btnQr.removeAttribute('disabled');\r\n  }\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport apiManager from '../lib/mtproto/mtprotoworker';\r\nimport Page from './page';\r\nimport pageIm from './pageIm';\r\nimport pagePassword from './pagePassword';\r\nimport pageSignIn from './pageSignIn';\r\nimport serverTimeManager from '../lib/mtproto/serverTimeManager';\r\nimport { AuthAuthorization, AuthLoginToken } from '../layer';\r\nimport { bytesCmp, bytesToBase64 } from '../helpers/bytes';\r\nimport { pause } from '../helpers/schedulers';\r\nimport App from '../config/app';\r\nimport Button from '../components/button';\r\nimport { _i18n, i18n, LangPackKey } from '../lib/langPack';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport rootScope from '../lib/rootScope';\r\nimport { putPreloader } from '../components/misc';\r\n\r\nlet onFirstMount = async() => {\r\n  const pageElement = page.pageEl;\r\n  const imageDiv = pageElement.querySelector('.auth-image') as HTMLDivElement;\r\n\r\n  let preloader = putPreloader(imageDiv, true);\r\n\r\n  const inputWrapper = document.createElement('div');\r\n  inputWrapper.classList.add('input-wrapper');\r\n\r\n  const btnBack = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Cancel'});\r\n  inputWrapper.append(btnBack);\r\n\r\n  const container = imageDiv.parentElement;\r\n\r\n  const h4 = document.createElement('h4');\r\n  _i18n(h4, 'Login.QR.Title');\r\n\r\n  const helpList = document.createElement('ol');\r\n  helpList.classList.add('qr-description');\r\n  (['Login.QR.Help1', 'Login.QR.Help2', 'Login.QR.Help3'] as LangPackKey[]).forEach((key) => {\r\n    const li = document.createElement('li');\r\n    li.append(i18n(key));\r\n    helpList.append(li);\r\n  });\r\n\r\n  container.append(h4, helpList, inputWrapper);\r\n\r\n  btnBack.addEventListener('click', () => {\r\n    pageSignIn.mount();\r\n    stop = true;\r\n  });\r\n  \r\n  const results = await Promise.all([\r\n    import('qr-code-styling' as any)\r\n  ]);\r\n  const QRCodeStyling = results[0].default;\r\n\r\n  let stop = false;\r\n  rootScope.addEventListener('user_auth', () => {\r\n    stop = true;\r\n    cachedPromise = null;\r\n  }, true);\r\n  \r\n  let options: {dcId?: number, ignoreErrors: true} = {ignoreErrors: true};\r\n  let prevToken: Uint8Array | number[];\r\n\r\n  const iterate = async(isLoop: boolean) => {\r\n    try {\r\n      let loginToken = await apiManager.invokeApi('auth.exportLoginToken', {\r\n        api_id: App.id,\r\n        api_hash: App.hash,\r\n        except_ids: []\r\n      }, {ignoreErrors: true});\r\n  \r\n      if(loginToken._ === 'auth.loginTokenMigrateTo') {\r\n        if(!options.dcId) {\r\n          options.dcId = loginToken.dc_id;\r\n          apiManager.setBaseDcId(loginToken.dc_id);\r\n          //continue;\r\n        }\r\n        \r\n        loginToken = await apiManager.invokeApi('auth.importLoginToken', {\r\n          token: loginToken.token\r\n        }, options) as AuthLoginToken.authLoginToken;\r\n      }\r\n\r\n      if(loginToken._ === 'auth.loginTokenSuccess') {\r\n        const authorization = loginToken.authorization as any as AuthAuthorization.authAuthorization;\r\n        apiManager.setUserAuth(authorization.user.id);\r\n        pageIm.mount();\r\n        return true;\r\n      }\r\n\r\n      /* // to base64\r\n      var decoder = new TextDecoder('utf8');\r\n      var b64encoded = btoa(String.fromCharCode.apply(null, [...loginToken.token])); */\r\n\r\n      if(!prevToken || !bytesCmp(prevToken, loginToken.token)) {\r\n        prevToken = loginToken.token;\r\n\r\n        let encoded = bytesToBase64(loginToken.token);\r\n        let url = \"tg://login?token=\" + encoded.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=+$/, \"\");\r\n\r\n        const style = window.getComputedStyle(document.documentElement);\r\n        const surfaceColor = style.getPropertyValue('--surface-color').trim();\r\n        const textColor = style.getPropertyValue('--primary-text-color').trim();\r\n        const primaryColor = style.getPropertyValue('--primary-color').trim();\r\n\r\n        const logoUrl = await fetch('assets/img/logo_padded.svg')\r\n        .then(res => res.text())\r\n        .then(text => {\r\n          text = text.replace(/(fill:).+?(;)/, `$1${primaryColor}$2`);\r\n          const blob = new Blob([text], {type: 'image/svg+xml;charset=utf-8'});\r\n\r\n          // * because iOS Safari doesn't want to eat objectURL\r\n          return new Promise<string>((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              resolve(e.target.result as string);\r\n            };\r\n            reader.readAsDataURL(blob);\r\n          });\r\n          //return URL.createObjectURL(blob);\r\n        });\r\n\r\n        const qrCode = new QRCodeStyling({\r\n          width: 240 * window.devicePixelRatio,\r\n          height: 240 * window.devicePixelRatio,\r\n          data: url,\r\n          image: logoUrl,\r\n          dotsOptions: {\r\n            color: textColor,\r\n            type: 'rounded'\r\n          },\r\n          cornersSquareOptions: {\r\n            type: 'extra-rounded'\r\n          },\r\n          imageOptions: {\r\n            imageSize: 1,\r\n            margin: 0\r\n          },\r\n          backgroundOptions: {\r\n            color: surfaceColor\r\n          },\r\n          qrOptions: {\r\n            errorCorrectionLevel: \"L\"\r\n          }\r\n        });\r\n\r\n        qrCode.append(imageDiv);\r\n        (imageDiv.lastChild as HTMLCanvasElement).classList.add('qr-canvas');\r\n\r\n        let promise: Promise<void>;\r\n        if(qrCode._drawingPromise) {\r\n          promise = qrCode._drawingPromise;\r\n        } else {\r\n          promise = Promise.race([\r\n            pause(1000),\r\n            new Promise<void>((resolve) => {\r\n              qrCode._canvas._image.addEventListener('load', () => {\r\n                window.requestAnimationFrame(() => resolve());\r\n              }, {once: true});\r\n            })\r\n          ]);\r\n        }\r\n\r\n        // * это костыль, но библиотека не предоставляет никаких событий\r\n        await promise.then(() => {\r\n          if(preloader) {\r\n            preloader.style.animation = 'hide-icon .4s forwards';\r\n\r\n            const c = imageDiv.children[1] as HTMLElement;\r\n            c.style.display = 'none';\r\n            c.style.animation = 'grow-icon .4s forwards';\r\n            setTimeout(() => {\r\n              c.style.display = '';\r\n            }, 150);\r\n\r\n            setTimeout(() => {\r\n              c.style.animation = '';\r\n            }, 500);\r\n            preloader = undefined;\r\n          } else {\r\n            Array.from(imageDiv.children).slice(0, -1).forEach(el => {\r\n              el.remove();\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if(isLoop) {\r\n        let timestamp = Date.now() / 1000;\r\n        let diff = loginToken.expires - timestamp - serverTimeManager.serverTimeOffset;\r\n  \r\n        await pause(diff > 5 ? 5e3 : 1e3 * diff | 0);\r\n      }\r\n    } catch(err) {\r\n      switch(err.type) {\r\n        case 'SESSION_PASSWORD_NEEDED':\r\n          console.warn('pageSignQR: SESSION_PASSWORD_NEEDED');\r\n          err.handled = true;\r\n          pagePassword.mount();\r\n          stop = true;\r\n          cachedPromise = null;\r\n          break;\r\n        default:\r\n          console.error('pageSignQR: default error:', err);\r\n          stop = true;\r\n          break;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  //await iterate(false);\r\n\r\n  return async() => {\r\n    stop = false;\r\n\r\n    do {\r\n      if(stop) {\r\n        break;\r\n      }\r\n  \r\n      const needBreak = await iterate(true);\r\n      if(needBreak) {\r\n        break;\r\n      }\r\n    } while(true);\r\n  };\r\n};\r\n\r\nlet cachedPromise: Promise<() => Promise<void>>;\r\nconst page = new Page('page-signQR', true, () => {\r\n  return cachedPromise;\r\n}, () => {\r\n  //console.log('onMount');\r\n  if(!cachedPromise) cachedPromise = onFirstMount();\r\n  cachedPromise.then(func => {\r\n    func();\r\n  });\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStateSignQr'});\r\n});\r\n\r\nexport default page;\r\n"],"sourceRoot":""}