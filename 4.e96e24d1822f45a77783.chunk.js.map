{"version":3,"sources":["webpack:///./src/lib/appManagers/appStateManager.ts","webpack:///./src/helpers/mediaSizes.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/helpers/dom/whichChild.ts","webpack:///./src/components/animationIntersector.ts","webpack:///./src/helpers/number.ts","webpack:///./src/helpers/calcImageInBox.ts","webpack:///./src/components/horizontalMenu.ts","webpack:///./src/components/transition.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/helpers/dom/findUpAsChild.ts"],"names":["STATE_VERSION","version","STATE_INIT","allDialogsLoaded","pinnedOrders","contactsList","updates","filters","maxSeenMsgId","stateCreatedTime","Date","now","recentEmoji","topPeers","recentSearch","authState","_","hiddenPinnedMessages","settings","messagesTextSize","sendShortcut","animationsEnabled","autoDownload","contacts","private","groups","channels","autoPlay","gifs","videos","stickers","suggest","loop","emoji","big","themes","name","background","type","blur","slug","highlightningColor","color","theme","notifications","sound","keepSigned","ALL_KEYS","Object","keys","REFRESH_KEYS","REFRESH_KEYS_WEEK","AppStateManager","super","log","neededPeers","Map","singlePeerMap","storages","users","chats","dialogs","storagesResults","storage","this","loadSavedState","loaded","console","time","Promise","resolve","storagesKeys","storagesPromises","map","key","getAll","promises","get","concat","all","then","arr","state","i","length","value","undefined","pushToState","splice","auth","shift","shiftedWebKAuth","push","values","dcID","baseDcId","id","obj","forEach","idx","set","localStorage","getItem","JSON","parse","err","getFromCache","error","broadcast","r","s","hasOwnProperty","nightTheme","find","t","missingKey","timeEnd","catch","first","split","direct","peerId","limit","has","Set","add","dispatchEvent","keepPeerSingle","existsPeerId","delete","size","appStateManager","ScreenSize","MediaSize","width","height","boxSize","fitted","aspect","makeMediaSize","MediaSizes","screenSizes","mobile","medium","large","sizes","handhelds","regular","webpage","album","esgSticker","animatedSticker","staticSticker","emojiSticker","desktop","isMobile","handleResize","innerWidth","window","activeScreen","wasScreen","active","addEventListener","rAF","cancelAnimationFrame","requestAnimationFrame","mediaSizes","Worker_fn","Worker","convert","Math","round","min","max","el","worker","options","reqId","paused","direction","speed","autoplay","group","frames","cachingDelta","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","devicePixelRatio","needUpscale","noCache","Infinity","canvas","document","createElement","classList","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","args","sendQuery","jsonString","setMainLoop","clearPendingRAF","clearTimeout","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","frInterval","delta","frThen","setTimeout","renderFrame2","renderFrame","fps","method","mainLoopForwards","mainLoopBackwards","bind","currentMethod","frameListener","listenerResults","diff","appendChild","defaultListener","onError","onerror","onmessage","event","queryMethodListener","queryMethodArguments","call","message","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","buffer","isWebAssemblySupported","loadPromise","reject","workersLimit","players","workers","curWorkerNum","logger","Error","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","animationIntersector","getAnimations","animation","checkAnimation","element","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","smth","ty","k","c","foundReplacement","p","applyTo","iterateIt","it","layer","layers","shapes","shape","params","url","loadLottieWorkers","fetch","res","arrayBuffer","gzipUncompress","str","loadAnimationWorker","assign","animationData","race","newAnimationData","applyReplacements","stringify","parseInt","container","style","initPlayer","addAnimation","loadFromData","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","querySelector","selectTab","horizontalMenu","page","onShown","isAuthPage","display","whichChild","pageEl","fastSmoothScroll","firstElementChild","className","onFirstMount","onMount","installed","body","setPage","FocusDirection","position","margin","maxDistance","forceDirection","forceDuration","axis","Static","scrollWithJs","getBoundingClientRect","elementRect","containerRect","offsetTop","top","scrollTop","Up","Down","promise","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementPosition","elementSize","containerSize","scrollPosition","scrollSize","path","remainingPath","target","duration","abs","startAt","tick","currentPath","transition","isAnimating","heavyAnimationPromise","promisesInQueue","dispatchHeavyAnimationEvent","timeout","finally","filter","Boolean","perf","performance","_heavyAnimationPromise","isFulfilled","onHeavyAnimationEnd","interruptHeavyAnimation","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","remove","removeManual","removeEventListener","isInDOM","isConnected","elem","parentNode","previousElementSibling","visible","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","idle","isIDLE","entry","isIntersecting","clearCache","on","doc","checkAnimations","found","HTMLVideoElement","src","load","findAndSplice","unobserve","observe","blurred","destroy","removeAnimation","animations","refreshGroup","numberThousandSplitter","x","joiner","parts","toString","replace","join","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","formatNumber","clamp","v","calcImageInBox","imageW","imageH","boxW","boxH","noZoom","boxedImageW","boxedImageH","tabs","content","onClick","onTransitionEnd","transitionTime","scrollableX","dataset","proxy","Proxy","apply","that","animate","children","selectTarget","tabContent","canChange","scrollIntoViewNew","parentElement","prevId","contains","prev","tagName","toLowerCase","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","e","tab","slideNavigation","prevTabContent","toRight","elements","reverse","offsetWidth","slideTabs","scrollableContainer","overflowY","TransitionSlider","isHeavy","animationFunction","Transition","onTransitionEndCallbacks","animationDeferred","animationStarted","from","self","HTMLElement","_from","to","onTransitionEndCallback","toggle","callback","instances","cancelAnimationByKey","instance","getAnimationInstance","isCancelled","deferred","animateSingle","createAnimationInstance","findUpAsChild","parent"],"mappings":"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","file":"4.e96e24d1822f45a77783.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type { Dialog } from './appMessagesManager';\r\nimport type { UserAuth } from '../mtproto/mtproto_config';\r\nimport type { User } from './appUsersManager';\r\nimport type { AuthState } from '../../types';\r\nimport type FiltersStorage from '../storages/filters';\r\nimport type DialogsStorage from '../storages/dialogs';\r\nimport EventListenerBase from '../../helpers/eventListenerBase';\r\nimport rootScope from '../rootScope';\r\nimport stateStorage from '../stateStorage';\r\nimport { logger } from '../logger';\r\nimport { copy, setDeepProperty, validateInitObject } from '../../helpers/object';\r\nimport App from '../../config/app';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport AppStorage from '../storage';\r\nimport { Chat } from '../../layer';\r\nimport { isMobile } from '../../helpers/userAgent';\r\nimport DATABASE_STATE from '../../config/databases/state';\r\nimport sessionStorage from '../sessionStorage';\r\n\r\nconst REFRESH_EVERY = 24 * 60 * 60 * 1000; // 1 day\r\nconst REFRESH_EVERY_WEEK = 24 * 60 * 60 * 1000 * 7; // 7 days\r\nconst STATE_VERSION = App.version;\r\n\r\nexport type Background = {\r\n  type: 'color' | 'image' | 'default',\r\n  blur: boolean,\r\n  highlightningColor?: string,\r\n  color?: string,\r\n  slug?: string,\r\n};\r\n\r\nexport type Theme = {\r\n  name: 'day' | 'night' | 'system',\r\n  background: Background\r\n};\r\n\r\nexport type State = {\r\n  allDialogsLoaded: DialogsStorage['allDialogsLoaded'],\r\n  pinnedOrders: DialogsStorage['pinnedOrders'],\r\n  contactsList: number[],\r\n  updates: Partial<{\r\n    seq: number,\r\n    pts: number,\r\n    date: number\r\n  }>,\r\n  filters: FiltersStorage['filters'],\r\n  maxSeenMsgId: number,\r\n  stateCreatedTime: number,\r\n  recentEmoji: string[],\r\n  topPeers: number[],\r\n  recentSearch: number[],\r\n  version: typeof STATE_VERSION,\r\n  authState: AuthState,\r\n  hiddenPinnedMessages: {[peerId: string]: number},\r\n  settings: {\r\n    messagesTextSize: number,\r\n    sendShortcut: 'enter' | 'ctrlEnter',\r\n    animationsEnabled: boolean,\r\n    autoDownload: {\r\n      contacts: boolean\r\n      private: boolean\r\n      groups: boolean\r\n      channels: boolean\r\n    },\r\n    autoPlay: {\r\n      gifs: boolean,\r\n      videos: boolean\r\n    },\r\n    stickers: {\r\n      suggest: boolean,\r\n      loop: boolean\r\n    },\r\n    emoji: {\r\n      suggest: boolean,\r\n      big: boolean\r\n    },\r\n    background?: Background, // ! DEPRECATED\r\n    themes: Theme[],\r\n    theme: Theme['name'],\r\n    notifications: {\r\n      sound: boolean\r\n    },\r\n    nightTheme?: boolean, // ! DEPRECATED\r\n  },\r\n  keepSigned: boolean\r\n};\r\n\r\nexport const STATE_INIT: State = {\r\n  allDialogsLoaded: {},\r\n  pinnedOrders: {},\r\n  contactsList: [],\r\n  updates: {},\r\n  filters: {},\r\n  maxSeenMsgId: 0,\r\n  stateCreatedTime: Date.now(),\r\n  recentEmoji: [],\r\n  topPeers: [],\r\n  recentSearch: [],\r\n  version: STATE_VERSION,\r\n  authState: {\r\n    _: isMobile ? 'authStateSignIn' : 'authStateSignQr'\r\n  },\r\n  hiddenPinnedMessages: {},\r\n  settings: {\r\n    messagesTextSize: 16,\r\n    sendShortcut: 'enter',\r\n    animationsEnabled: true,\r\n    autoDownload: {\r\n      contacts: true,\r\n      private: true,\r\n      groups: true,\r\n      channels: true\r\n    },\r\n    autoPlay: {\r\n      gifs: true,\r\n      videos: true\r\n    },\r\n    stickers: {\r\n      suggest: true,\r\n      loop: true\r\n    },\r\n    emoji: {\r\n      suggest: true,\r\n      big: true\r\n    },\r\n    themes: [{\r\n      name: 'day',\r\n      background: {\r\n        type: 'image',\r\n        blur: false,\r\n        slug: 'ByxGo2lrMFAIAAAAmkJxZabh8eM', // * new blurred camomile,\r\n        highlightningColor: 'hsla(85.5319, 36.9171%, 40.402%, 0.4)'\r\n      }\r\n    }, {\r\n      name: 'night',\r\n      background: {\r\n        type: 'color',\r\n        blur: false,\r\n        color: '#0f0f0f',\r\n        highlightningColor: 'hsla(0, 0%, 3.82353%, 0.4)'\r\n      }\r\n    }],\r\n    theme: 'system',\r\n    notifications: {\r\n      sound: false\r\n    }\r\n  },\r\n  keepSigned: true\r\n};\r\n\r\nconst ALL_KEYS = Object.keys(STATE_INIT) as any as Array<keyof State>;\r\n\r\nconst REFRESH_KEYS = ['contactsList', 'stateCreatedTime',\r\n  'maxSeenMsgId', 'filters', 'topPeers'] as any as Array<keyof State>;\r\n\r\nconst REFRESH_KEYS_WEEK = ['dialogs', 'allDialogsLoaded', 'updates', 'pinnedOrders'] as any as Array<keyof State>;\r\n\r\nexport class AppStateManager extends EventListenerBase<{\r\n  save: (state: State) => Promise<void>,\r\n  peerNeeded: (peerId: number) => void,\r\n  peerUnneeded: (peerId: number) => void,\r\n}> {\r\n  public static STATE_INIT = STATE_INIT;\r\n  private loaded: Promise<State>;\r\n  private log = logger('STATE'/* , LogLevels.error */);\r\n\r\n  private state: State;\r\n\r\n  private neededPeers: Map<number, Set<string>> = new Map();\r\n  private singlePeerMap: Map<string, number> = new Map();\r\n\r\n  public storages = {\r\n    users: new AppStorage<Record<number, User>, typeof DATABASE_STATE>(DATABASE_STATE, 'users'),\r\n    chats: new AppStorage<Record<number, Chat>, typeof DATABASE_STATE>(DATABASE_STATE, 'chats'),\r\n    dialogs: new AppStorage<Record<number, Dialog>, typeof DATABASE_STATE>(DATABASE_STATE, 'dialogs')\r\n  };\r\n\r\n  public storagesResults: {[key in keyof AppStateManager['storages']]: any[]} = {} as any;\r\n\r\n  public storage = stateStorage;\r\n\r\n  constructor() {\r\n    super();\r\n    this.loadSavedState();\r\n  }\r\n\r\n  public loadSavedState(): Promise<State> {\r\n    if(this.loaded) return this.loaded;\r\n    console.time('load state');\r\n    this.loaded = new Promise((resolve) => {\r\n      const storagesKeys = Object.keys(this.storages) as Array<keyof AppStateManager['storages']>;\r\n      const storagesPromises: Promise<any>[] = storagesKeys.map(key => this.storages[key].getAll());\r\n\r\n      const promises: Promise<any>[] = ALL_KEYS.map(key => stateStorage.get(key))\r\n      .concat(sessionStorage.get('user_auth'))\r\n      .concat(stateStorage.get('user_auth' as any)) // support old webk format\r\n      .concat(storagesPromises);\r\n\r\n      Promise.all(promises).then(async(arr) => {\r\n        /* const self = this;\r\n        const skipHandleKeys = new Set(['isProxy', 'filters', 'drafts']);\r\n        const getHandler = (path?: string) => {\r\n          return {\r\n            get(target: any, key: any) {\r\n              if(key === 'isProxy') {\r\n                return true;\r\n              }\r\n\r\n              const prop = target[key];\r\n\r\n              if(prop !== undefined && !skipHandleKeys.has(key) && !prop.isProxy && typeof(prop) === 'object') {\r\n                target[key] = new Proxy(prop, getHandler(path || key));\r\n                return target[key];\r\n              }\r\n              \r\n              return prop;\r\n            },\r\n            set(target: any, key: any, value: any) {\r\n              console.log('Setting', target, `.${key} to equal`, value, path);\r\n          \r\n              target[key] = value;\r\n\r\n              // @ts-ignore\r\n              self.pushToState(path || key, path ? self.state[path] : value, false);\r\n\r\n              return true;\r\n            }\r\n          };\r\n        }; */\r\n\r\n        let state: State = this.state = {} as any;\r\n\r\n        // ! then can't store false values\r\n        for(let i = 0, length = ALL_KEYS.length; i < length; ++i) {\r\n          const key = ALL_KEYS[i];\r\n          const value = arr[i];\r\n          if(value !== undefined) {\r\n            // @ts-ignore\r\n            state[key] = value;\r\n          } else {\r\n            this.pushToState(key, copy(STATE_INIT[key]));\r\n          }\r\n        }\r\n\r\n        arr.splice(0, ALL_KEYS.length);\r\n\r\n        // * Read auth\r\n        let auth = arr.shift() as UserAuth | number;\r\n        let shiftedWebKAuth = arr.shift() as UserAuth | number;\r\n        if(!auth && shiftedWebKAuth) { // support old webk auth\r\n          auth = shiftedWebKAuth;\r\n          const keys: string[] = ['dc', 'server_time_offset', 'xt_instance'];\r\n          for(let i = 1; i <= 5; ++i) {\r\n            keys.push(`dc${i}_server_salt`);\r\n            keys.push(`dc${i}_auth_key`);\r\n          }\r\n\r\n          const values = await Promise.all(keys.map(key => stateStorage.get(key as any)));\r\n          keys.push('user_auth');\r\n          values.push(typeof(auth) === 'number' ? {dcID: values[0] || App.baseDcId, id: auth} : auth);\r\n\r\n          let obj: any = {};\r\n          keys.forEach((key, idx) => {\r\n            obj[key] = values[idx];\r\n          });\r\n\r\n          await sessionStorage.set(obj);\r\n        }\r\n        \r\n        if(!auth) { // try to read Webogram's session from localStorage\r\n          try {\r\n            const keys = Object.keys(localStorage);\r\n            for(let i = 0; i < keys.length; ++i) {\r\n              const key = keys[i];\r\n              let value: any;\r\n              try {\r\n                value = localStorage.getItem(key);\r\n                value = JSON.parse(value);\r\n              } catch(err) {\r\n                //console.error(err);\r\n              }\r\n\r\n              sessionStorage.set({\r\n                [key as any]: value\r\n              });\r\n            }\r\n\r\n            auth = sessionStorage.getFromCache('user_auth');\r\n          } catch(err) {\r\n            this.log.error('localStorage import error', err);\r\n          }\r\n        }\r\n\r\n        if(auth) {\r\n          // ! Warning ! DON'T delete this\r\n          state.authState = {_: 'authStateSignedIn'};\r\n          rootScope.broadcast('user_auth', typeof(auth) === 'number' ? {dcID: 0, id: auth} : auth); // * support old version\r\n        }\r\n\r\n        // * Read storages\r\n        for(let i = 0, length = storagesKeys.length; i < length; ++i) {\r\n          this.storagesResults[storagesKeys[i]] = arr[i] as any;\r\n        }\r\n\r\n        arr.splice(0, storagesKeys.length);\r\n\r\n        const time = Date.now();\r\n        if((state.stateCreatedTime + REFRESH_EVERY) < time) {\r\n          if(DEBUG) {\r\n            this.log('will refresh state', state.stateCreatedTime, time);\r\n          }\r\n\r\n          const r = (keys: typeof REFRESH_KEYS) => {\r\n            keys.forEach(key => {\r\n              this.pushToState(key, copy(STATE_INIT[key]));\r\n  \r\n              // @ts-ignore\r\n              const s = this.storagesResults[key];\r\n              if(s && s.length) {\r\n                s.length = 0;\r\n              }\r\n            });\r\n          };\r\n          \r\n          r(REFRESH_KEYS);\r\n\r\n          if((state.stateCreatedTime + REFRESH_EVERY_WEEK) < time) {\r\n            if(DEBUG) {\r\n              this.log('will refresh updates');\r\n            }\r\n\r\n            r(REFRESH_KEYS_WEEK);\r\n          }\r\n        }\r\n        \r\n        //state = this.state = new Proxy(state, getHandler());\r\n\r\n        // * support old version\r\n        if(!state.settings.hasOwnProperty('theme') && state.settings.hasOwnProperty('nightTheme')) {\r\n          state.settings.theme = state.settings.nightTheme ? 'night' : 'day';\r\n          this.pushToState('settings', state.settings);\r\n        }\r\n\r\n        // * support old version\r\n        if(!state.settings.hasOwnProperty('themes') && state.settings.background) {\r\n          state.settings.themes = copy(STATE_INIT.settings.themes);\r\n          const theme = state.settings.themes.find(t => t.name === state.settings.theme);\r\n          if(theme) {\r\n            theme.background = state.settings.background;\r\n            this.pushToState('settings', state.settings);\r\n          }\r\n        }\r\n\r\n        validateInitObject(STATE_INIT, state, (missingKey) => {\r\n          // @ts-ignore\r\n          this.pushToState(missingKey, state[missingKey]);\r\n        });\r\n\r\n        if(state.version !== STATE_VERSION) {\r\n          this.pushToState('version', STATE_VERSION);\r\n        }\r\n\r\n        // ! probably there is better place for it\r\n        rootScope.settings = state.settings;\r\n\r\n        if(DEBUG) {\r\n          this.log('state res', state, copy(state));\r\n        }\r\n        \r\n        //return resolve();\r\n\r\n        console.timeEnd('load state');\r\n        resolve(state);\r\n      }).catch(resolve);\r\n    });\r\n\r\n    return this.loaded;\r\n  }\r\n\r\n  public getState() {\r\n    return this.state === undefined ? this.loadSavedState() : Promise.resolve(this.state);\r\n  }\r\n\r\n  public setByKey(key: string, value: any) {\r\n    setDeepProperty(this.state, key, value);\r\n    rootScope.broadcast('settings_updated', {key, value});\r\n\r\n    const first = key.split('.')[0];\r\n    // @ts-ignore\r\n    this.pushToState(first, this.state[first]);\r\n  }\r\n\r\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true) {\r\n    if(direct) {\r\n      this.state[key] = value;\r\n    }\r\n\r\n    this.storage.set({\r\n      [key]: value\r\n    });\r\n  }\r\n\r\n  public requestPeer(peerId: number, type: string, limit?: number) {\r\n    let set = this.neededPeers.get(peerId);\r\n    if(set && set.has(type)) {\r\n      return;\r\n    }\r\n\r\n    if(!set) {\r\n      set = new Set();\r\n      this.neededPeers.set(peerId, set);\r\n    }\r\n\r\n    set.add(type);\r\n    this.dispatchEvent('peerNeeded', peerId);\r\n\r\n    if(limit !== undefined) {\r\n      this.keepPeerSingle(peerId, type);\r\n    }\r\n  }\r\n\r\n  public isPeerNeeded(peerId: number) {\r\n    return this.neededPeers.has(peerId);\r\n  }\r\n\r\n  public keepPeerSingle(peerId: number, type: string) {\r\n    const existsPeerId = this.singlePeerMap.get(type);\r\n    if(existsPeerId && existsPeerId !== peerId && this.neededPeers.has(existsPeerId)) {\r\n      const set = this.neededPeers.get(existsPeerId);\r\n      set.delete(type);\r\n\r\n      if(!set.size) {\r\n        this.neededPeers.delete(existsPeerId);\r\n        this.dispatchEvent('peerUnneeded', existsPeerId);\r\n      }\r\n    }\r\n\r\n    if(peerId) {\r\n      this.singlePeerMap.set(type, peerId);\r\n    }\r\n  }\r\n\r\n  /* public resetState() {\r\n    for(let i in this.state) {\r\n      // @ts-ignore\r\n      this.state[i] = false;\r\n    }\r\n    sessionStorage.set(this.state).then(() => {\r\n      location.reload();\r\n    });\r\n  } */\r\n}\r\n\r\n//console.trace('appStateManager include');\r\n\r\nconst appStateManager = new AppStateManager();\r\nMOUNT_CLASS_TO.appStateManager = appStateManager;\r\nexport default appStateManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport calcImageInBox from \"./calcImageInBox\";\r\nimport EventListenerBase from \"./eventListenerBase\";\r\n\r\nexport class MediaSize {\r\n  constructor(public width = 0, public height = width) {\r\n\r\n  }\r\n\r\n  public aspect(boxSize: MediaSize, fitted: boolean) {\r\n    return calcImageInBox(this.width, this.height, boxSize.width, boxSize.height, fitted);\r\n  }\r\n\r\n  public aspectFitted(boxSize: MediaSize) {\r\n    return this.aspect(boxSize, true);\r\n  }\r\n\r\n  public aspectCovered(boxSize: MediaSize) {\r\n    return this.aspect(boxSize, false);\r\n  }\r\n}\r\n\r\nexport function makeMediaSize(width?: number, height?: number): MediaSize {\r\n  return new MediaSize(width, height);\r\n}\r\n\r\ntype MediaTypeSizes = {\r\n  regular: MediaSize,\r\n  webpage: MediaSize,\r\n  album: MediaSize,\r\n  esgSticker: MediaSize,\r\n  animatedSticker: MediaSize,\r\n  staticSticker: MediaSize,\r\n  emojiSticker: MediaSize\r\n};\r\n\r\nexport enum ScreenSize {\r\n  mobile,\r\n  medium,\r\n  large\r\n}\r\n\r\nconst MOBILE_SIZE = 600;\r\nconst MEDIUM_SIZE = 1275;\r\nconst LARGE_SIZE = 1680;\r\n\r\nclass MediaSizes extends EventListenerBase<{\r\n  changeScreen: (from: ScreenSize, to: ScreenSize) => void\r\n}> {\r\n  private screenSizes: {key: ScreenSize, value: number}[] = [\r\n    {key: ScreenSize.mobile, value: MOBILE_SIZE},\r\n    {key: ScreenSize.medium, value: MEDIUM_SIZE},\r\n    {key: ScreenSize.large, value: LARGE_SIZE}\r\n  ];\r\n\r\n  private sizes: {[k in 'desktop' | 'handhelds']: MediaTypeSizes} = {\r\n    handhelds: {\r\n      regular: makeMediaSize(270, 270),\r\n      webpage: makeMediaSize(270, 200),\r\n      album: makeMediaSize(270, 0),\r\n      esgSticker: makeMediaSize(68, 68),\r\n      animatedSticker: makeMediaSize(180, 180),\r\n      staticSticker: makeMediaSize(180, 180),\r\n      emojiSticker: makeMediaSize(112, 112)\r\n    },\r\n    desktop: {\r\n      regular: makeMediaSize(400, 320),\r\n      webpage: makeMediaSize(400, 320),\r\n      album: makeMediaSize(420, 0),\r\n      esgSticker: makeMediaSize(80, 80),\r\n      animatedSticker: makeMediaSize(200, 200),\r\n      staticSticker: makeMediaSize(200, 200),\r\n      emojiSticker: makeMediaSize(112, 112)\r\n    }\r\n  };\r\n\r\n  public isMobile = false;\r\n  public active: MediaTypeSizes;\r\n  public activeScreen: ScreenSize;\r\n  public rAF: number;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    window.addEventListener('resize', () => {\r\n      if(this.rAF) window.cancelAnimationFrame(this.rAF);\r\n      this.rAF = window.requestAnimationFrame(() => {\r\n        this.handleResize();\r\n        this.rAF = 0;\r\n      });\r\n    });\r\n    this.handleResize();\r\n  }\r\n\r\n  private handleResize = () => {\r\n    const innerWidth = window.innerWidth;\r\n    //this.isMobile = innerWidth <= 720;\r\n    \r\n    let activeScreen = this.screenSizes[0].key;\r\n    for(let i = this.screenSizes.length - 1; i >= 0; --i) {\r\n      if(this.screenSizes[i].value < innerWidth) {\r\n        activeScreen = (this.screenSizes[i + 1] || this.screenSizes[i]).key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    const wasScreen = this.activeScreen;\r\n    this.activeScreen = activeScreen;\r\n    this.isMobile = this.activeScreen === ScreenSize.mobile;\r\n    this.active = this.isMobile ? this.sizes.handhelds : this.sizes.desktop;\r\n\r\n    //console.time('esg');\r\n    //const computedStyle = window.getComputedStyle(document.documentElement);\r\n    //this.active.esgSticker.width = parseFloat(computedStyle.getPropertyValue('--esg-sticker-size'));\r\n    //console.timeEnd('esg');\r\n\r\n    if(wasScreen !== activeScreen) {\r\n      //console.log('changeScreen', this.activeScreen, activeScreen);\r\n\r\n      if(wasScreen !== undefined) {\r\n        this.dispatchEvent('changeScreen', this.activeScreen, activeScreen);\r\n      }\r\n    }\r\n\r\n    /* if(this.isMobile) {\r\n      for(let i in this.active) {\r\n        // @ts-ignore\r\n        let size = this.active[i];\r\n        size.width = innerWidth \r\n      }\r\n    } */\r\n  };\r\n}\r\n\r\nconst mediaSizes = new MediaSizes();\r\nMOUNT_CLASS_TO.mediaSizes = mediaSizes;\r\nexport default mediaSizes;\r\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"rlottie.worker.86bed2789739b353d39d.bundle.worker.js\");\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\r\nimport animationIntersector from \"../components/animationIntersector\";\r\nimport { MOUNT_CLASS_TO } from '../config/debug';\r\nimport EventListenerBase from \"../helpers/eventListenerBase\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { clamp } from '../helpers/number';\r\nimport { pause } from '../helpers/schedulers';\r\nimport { isAndroid, isApple, isAppleMobile, isSafari } from \"../helpers/userAgent\";\r\nimport { logger, LogTypes } from \"./logger\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\n\r\nlet convert = (value: number) => {\r\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\r\n};\r\n\r\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\r\ntype RLottieOptions = {\r\n  container: HTMLElement, \r\n  autoplay?: boolean, \r\n  animationData: string, \r\n  loop?: boolean, \r\n  width?: number,\r\n  height?: number,\r\n  group?: string,\r\n  noCache?: true,\r\n  needUpscale?: true,\r\n  skipRatio?: number\r\n};\r\n\r\nexport class RLottiePlayer extends EventListenerBase<{\r\n  enterFrame: (frameNo: number) => void,\r\n  ready: () => void,\r\n  firstFrame: () => void,\r\n  cached: () => void\r\n}> {\r\n  public static reqId = 0;\r\n\r\n  public reqId = 0;\r\n  public curFrame: number;\r\n  public frameCount: number;\r\n  public fps: number;\r\n  public skipDelta: number;\r\n\r\n  public worker: QueryableWorker;\r\n  \r\n  public width = 0;\r\n  public height = 0;\r\n\r\n  public el: HTMLElement;\r\n  public canvas: HTMLCanvasElement;\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public paused = true;\r\n  //public paused = false;\r\n  public direction = 1;\r\n  public speed = 1;\r\n  public autoplay = true;\r\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public loop = true;\r\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\r\n  public group = '';\r\n\r\n  private frInterval: number;\r\n  private frThen: number;\r\n  private rafId: number;\r\n\r\n  //private caching = false;\r\n  //private removed = false;\r\n\r\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\r\n  public imageData: ImageData;\r\n  public clamped: Uint8ClampedArray;\r\n  public cachingDelta = 0;\r\n\r\n  //private playedTimes = 0;\r\n\r\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\r\n  private frameListener: () => void;\r\n\r\n  constructor({el, worker, options}: {\r\n    el: HTMLElement,\r\n    worker: QueryableWorker,\r\n    options: RLottieOptions\r\n  }) {\r\n    super(true);\r\n\r\n    this.reqId = ++RLottiePlayer['reqId'];\r\n    this.el = el;\r\n    this.worker = worker;\r\n\r\n    for(let i in options) {\r\n      if(this.hasOwnProperty(i)) {\r\n        // @ts-ignore\r\n        this[i] = options[i];\r\n      }\r\n    }\r\n\r\n    this._loop = this.loop;\r\n    this._autoplay = this.autoplay;\r\n\r\n    // * Skip ratio (30fps)\r\n    let skipRatio: number;\r\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\r\n    else if((isAndroid || isAppleMobile || (isApple && !isSafari)) && this.width < 100 && this.height < 100) {\r\n      skipRatio = 0.5;\r\n    }\r\n\r\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\r\n\r\n    //options.needUpscale = true;\r\n\r\n    // * Pixel ratio\r\n    //const pixelRatio = window.devicePixelRatio;\r\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\r\n    if(pixelRatio > 1) {\r\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\r\n      if(options.needUpscale) {\r\n        this.width = Math.round(this.width * pixelRatio);\r\n        this.height = Math.round(this.height * pixelRatio);\r\n      } else if(pixelRatio > 1) {\r\n        if(this.width > 100 && this.height > 100) {\r\n          if(isApple || !mediaSizes.isMobile) {\r\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\r\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\r\n            this.width = Math.round(this.width * pixelRatio);\r\n            this.height = Math.round(this.height * pixelRatio);\r\n          } else if(pixelRatio > 2.5) {\r\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\r\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\r\n          }\r\n        } else {\r\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\r\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\r\n        }\r\n      }\r\n    }\r\n\r\n    //options.noCache = true;\r\n    \r\n    // * Cache frames params\r\n    if(!options.noCache/*  && false */) {\r\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\r\n      if(isApple && this.width > 100 && this.height > 100) {\r\n        this.cachingDelta = 2; //2 // 50%\r\n      } else if(this.width < 100 && this.height < 100) {\r\n        this.cachingDelta = Infinity; // 100%\r\n      } else {\r\n        this.cachingDelta = 4; // 75%\r\n      }\r\n    }\r\n    \r\n    // this.cachingDelta = Infinity;\r\n    // if(isApple) {\r\n    //   this.cachingDelta = 0; //2 // 50%\r\n    // }\r\n\r\n    /* this.width *= 0.8;\r\n    this.height *= 0.8; */\r\n    \r\n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.classList.add('rlottie');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n    this.context = this.canvas.getContext('2d');\r\n\r\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n    this.imageData = new ImageData(this.width, this.height);\r\n  }\r\n\r\n  public clearCache() {\r\n    this.frames = {};\r\n  }\r\n\r\n  public sendQuery(methodName: string, ...args: any[]) {\r\n    //console.trace('RLottie sendQuery:', methodName);\r\n    this.worker.sendQuery(methodName, this.reqId, ...args);\r\n  }\r\n\r\n  public loadFromData(jsonString: string) {\r\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\r\n  }\r\n\r\n  public play() {\r\n    if(!this.paused) return;\r\n\r\n    //return;\r\n\r\n    //console.log('RLOTTIE PLAY' + this.reqId);\r\n\r\n    this.paused = false;\r\n    this.setMainLoop();\r\n  }\r\n\r\n  public pause(clearPendingRAF = true) {\r\n    if(this.paused) return;\r\n\r\n    this.paused = true;\r\n    if(clearPendingRAF) {\r\n      clearTimeout(this.rafId);\r\n    }\r\n    //window.cancelAnimationFrame(this.rafId);\r\n  }\r\n\r\n  public stop(renderFirstFrame = true) {\r\n    this.pause();\r\n\r\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\r\n    if(renderFirstFrame) {\r\n      this.requestFrame(this.curFrame);\r\n      //this.sendQuery('renderFrame', this.curFrame);\r\n    }\r\n  }\r\n\r\n  public restart() {\r\n    this.stop(false);\r\n    this.play();\r\n  }\r\n\r\n  public setSpeed(speed: number) {\r\n    this.speed = speed;\r\n\r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public setDirection(direction: number) {\r\n    this.direction = direction;\r\n    \r\n    if(!this.paused) {\r\n      this.setMainLoop();\r\n    }\r\n  }\r\n\r\n  public remove() {\r\n    //alert('remove');\r\n    lottieLoader.onDestroy(this.reqId);\r\n    this.pause();\r\n    this.sendQuery('destroy');\r\n    //this.removed = true;\r\n  }\r\n\r\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\r\n    /* this.setListenerResult('enterFrame', frameNo);\r\n    return; */\r\n\r\n    try {\r\n      this.imageData.data.set(frame);\r\n      \r\n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\r\n      //let perf = performance.now();\r\n      this.context.putImageData(this.imageData, 0, 0);\r\n      //console.log('renderFrame2 perf:', performance.now() - perf);\r\n    } catch(err) {\r\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\r\n      this.autoplay = false;\r\n      this.pause();\r\n      return;\r\n    }\r\n    \r\n    //console.log('set result enterFrame', frameNo);\r\n    this.dispatchEvent('enterFrame', frameNo);\r\n  }\r\n\r\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\r\n    //console.log('renderFrame', frameNo, this);\r\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\r\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\r\n    }\r\n\r\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\r\n      this.setListenerResult('enterFrame', frameNo);\r\n      if(frameNo === (this.frameCount - 1)) {\r\n        this.setListenerResult('cached');\r\n      }\r\n\r\n      return;\r\n    } */\r\n\r\n    if(this.frInterval) {\r\n      const now = Date.now(), delta = now - this.frThen;\r\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\r\n\r\n      if(delta < 0) {\r\n        if(this.rafId) clearTimeout(this.rafId);\r\n        return this.rafId = window.setTimeout(() => {\r\n          this.renderFrame2(frame, frameNo);\r\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\r\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\r\n      }\r\n    }\r\n\r\n    this.renderFrame2(frame, frameNo);\r\n  }\r\n\r\n  public requestFrame(frameNo: number) {\r\n    if(this.frames[frameNo]) {\r\n      this.renderFrame(this.frames[frameNo], frameNo);\r\n    } else if(isSafari) {\r\n      this.sendQuery('renderFrame', frameNo);\r\n    } else {\r\n      if(!this.clamped.length) { // fix detached\r\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\r\n      }\r\n      \r\n      this.sendQuery('renderFrame', frameNo, this.clamped);\r\n    }\r\n  }\r\n\r\n  private mainLoopForwards() {\r\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\r\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame + this.skipDelta) >= this.frameCount) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n  private mainLoopBackwards() {\r\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\r\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\r\n\r\n    this.requestFrame(frame);\r\n    if((frame - this.skipDelta) < 0) {\r\n      //this.playedTimes++;\r\n\r\n      if(!this.loop) {\r\n        this.pause(false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public setMainLoop() {\r\n    //window.cancelAnimationFrame(this.rafId);\r\n    clearTimeout(this.rafId);\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n\r\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\r\n\r\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\r\n    this.currentMethod = method;\r\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\r\n\r\n    //setTimeout(() => {\r\n      //this.addListener('enterFrame', this.frameListener);\r\n    //}, 0);\r\n\r\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\r\n      this.frameListener();\r\n    }\r\n  \r\n    //this.mainLoop(method);\r\n    //this.r(method);\r\n    //method();\r\n  }\r\n\r\n  public async onLoad(frameCount: number, fps: number) {\r\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\r\n    this.frameCount = frameCount;\r\n    this.fps = fps;\r\n\r\n    // * Handle 30fps stickers if 30fps set\r\n    if(this.fps < 60 && this.skipDelta !== 1) {\r\n      const diff = 60 / fps;\r\n      this.skipDelta = this.skipDelta / diff | 0;\r\n    }\r\n\r\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\r\n    this.frThen = Date.now() - this.frInterval;\r\n    //this.sendQuery('renderFrame', 0);\r\n    \r\n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \r\n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \r\n\r\n    /* console.time('cache' + this.reqId);\r\n    for(let i = 0; i < frameCount; ++i) {\r\n      //if(this.removed) return;\r\n      \r\n      if(i % 4) {\r\n        await new Promise((resolve) => {\r\n          delete this.listenerResults.enterFrame;\r\n          this.addListener('enterFrame', resolve, true);\r\n          this.requestFrame(i);\r\n        });  \r\n      }\r\n    }\r\n    \r\n    console.timeEnd('cache' + this.reqId); */\r\n    //console.log('cached');\r\n    /* this.el.innerHTML = '';\r\n    this.el.append(this.canvas);\r\n    return; */\r\n\r\n    this.requestFrame(0);\r\n    this.dispatchEvent('ready');\r\n    this.addEventListener('enterFrame', () => {\r\n      this.dispatchEvent('firstFrame');\r\n\r\n      this.el.appendChild(this.canvas);\r\n\r\n      //console.log('enterFrame firstFrame');\r\n \r\n      //let lastTime = this.frThen;\r\n      this.frameListener = () => {\r\n        if(this.paused) {\r\n          return;\r\n        }\r\n\r\n        const time = Date.now();\r\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\r\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\r\n          return;\r\n        } */\r\n\r\n        //lastTime = time;\r\n\r\n        this.frThen = time + this.frInterval;\r\n        const canContinue = this.currentMethod();\r\n        if(!canContinue && !this.loop && this.autoplay) {\r\n          this.autoplay = false;\r\n        }\r\n      };\r\n\r\n      this.addEventListener('enterFrame', this.frameListener);\r\n    }, true);\r\n  }\r\n}\r\n\r\nclass QueryableWorker extends EventListenerBase<any> {\r\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\r\n    super();\r\n\r\n    if(onError) {\r\n      this.worker.onerror = onError;\r\n    }\r\n\r\n    this.worker.onmessage = (event) => {\r\n      //return;\r\n      //console.log('worker onmessage', event.data);\r\n      if(event.data instanceof Object &&\r\n        event.data.hasOwnProperty('queryMethodListener') &&\r\n        event.data.hasOwnProperty('queryMethodArguments')) {\r\n        /* if(event.data.queryMethodListener === 'frame') {\r\n          return;\r\n        } */\r\n\r\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\r\n      } else {\r\n        this.defaultListener.call(this, event.data);\r\n      }\r\n    };\r\n  }\r\n\r\n  public postMessage(message: any) {\r\n    this.worker.postMessage(message);\r\n  }\r\n\r\n  public terminate() {\r\n    this.worker.terminate();\r\n  }\r\n\r\n  public sendQuery(queryMethod: string, ...args: any[]) {\r\n    if(isSafari) {\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      });\r\n    } else {\r\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\r\n      const transfer: ArrayBuffer[] = [];\r\n      args.forEach(arg => {\r\n        if(arg instanceof ArrayBuffer) {\r\n          transfer.push(arg);\r\n        }\r\n  \r\n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\r\n          transfer.push(arg.buffer);\r\n        }\r\n      });\r\n  \r\n      //console.log('transfer', transfer);\r\n      this.worker.postMessage({\r\n        'queryMethod': queryMethod,\r\n        'queryMethodArguments': args\r\n      }, transfer as PostMessageOptions);\r\n    }\r\n  }\r\n}\r\n\r\ntype LottieShape = {\r\n  c: {\r\n    k: number[]\r\n  },\r\n  ty: 'st' | 'fl',\r\n  it?: LottieShape[]\r\n};\r\nclass LottieLoader {\r\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\r\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\r\n  public loaded = false;\r\n\r\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\r\n  private static COLORREPLACEMENTS = [\r\n    [\r\n      [0xf77e41, 0xcb7b55],\r\n\t\t\t[0xffb139, 0xf6b689],\r\n\t\t\t[0xffd140, 0xffcda7],\r\n\t\t\t[0xffdf79, 0xffdfc5],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0xa45a38],\r\n\t\t\t[0xffb139, 0xdf986b],\r\n\t\t\t[0xffd140, 0xedb183],\r\n\t\t\t[0xffdf79, 0xf4c3a0],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x703a17],\r\n\t\t\t[0xffb139, 0xab673d],\r\n\t\t\t[0xffd140, 0xc37f4e],\r\n\t\t\t[0xffdf79, 0xd89667],\r\n    ],\r\n\r\n    [\r\n      [0xf77e41, 0x4a2409],\r\n\t\t\t[0xffb139, 0x7d3e0e],\r\n\t\t\t[0xffd140, 0x965529],\r\n\t\t\t[0xffdf79, 0xa96337],\r\n    ],\r\n\r\n    [\r\n\t\t\t[0xf77e41, 0x200f0a],\r\n\t\t\t[0xffb139, 0x412924],\r\n\t\t\t[0xffd140, 0x593d37],\r\n\t\t\t[0xffdf79, 0x63453f],\r\n    ]\r\n  ];\r\n\r\n  private workersLimit = 4;\r\n  private players: {[reqId: number]: RLottiePlayer} = {};\r\n\r\n  private workers: QueryableWorker[] = [];\r\n  private curWorkerNum = 0;\r\n\r\n  private log = logger('LOTTIE', LogTypes.Error);\r\n\r\n  public getAnimation(element: HTMLElement) {\r\n    for(const i in this.players) {\r\n      if(this.players[i].el === element) {\r\n        return this.players[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public setLoop(loop: boolean) {\r\n    for(const i in this.players) {\r\n      const player = this.players[i];\r\n      player.loop = loop;\r\n      player.autoplay = player._autoplay;\r\n    }\r\n  }\r\n\r\n  public loadLottieWorkers() {\r\n    if(this.loadPromise) {\r\n      return this.loadPromise;\r\n    }\r\n\r\n    return this.loadPromise = new Promise((resolve, reject) => {\r\n      let remain = this.workersLimit;\r\n      for(let i = 0; i < this.workersLimit; ++i) {\r\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\r\n\r\n        worker.addEventListener('ready', () => {\r\n          this.log('worker #' + i + ' ready');\r\n\r\n          worker.addEventListener('frame', this.onFrame);\r\n          worker.addEventListener('loaded', this.onPlayerLoaded);\r\n          worker.addEventListener('error', this.onPlayerError);\r\n\r\n          --remain;\r\n          if(!remain) {\r\n            this.log('workers ready');\r\n            resolve();\r\n            this.loaded = true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private applyReplacements(object: {\r\n    layers: Array<{shapes: LottieShape[]}>\r\n  }, toneIndex: number) {\r\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\r\n\r\n    const applyTo = (smth: LottieShape) => {\r\n      const k = smth.c.k;\r\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\r\n\r\n      const foundReplacement = replacements.find(p => p[0] === color);\r\n      if(foundReplacement) {\r\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\r\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\r\n        k[2] = (foundReplacement[1] & 255) / 255;\r\n      }\r\n\r\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\r\n    };\r\n\r\n    const checkSmth = (smth: LottieShape) => {\r\n      switch(smth.ty) {\r\n        case 'st':\r\n        case 'fl':\r\n          applyTo(smth);\r\n          break;\r\n      }\r\n\r\n      if(smth.hasOwnProperty('it')) {\r\n        iterateIt(smth.it);\r\n      }\r\n    };\r\n\r\n    const iterateIt = (it: LottieShape['it']) => {\r\n      for(const smth of it) {\r\n        checkSmth(smth);\r\n      }\r\n    };\r\n\r\n    try {\r\n      for(const layer of object.layers) {\r\n        if(!layer.shapes) continue;\r\n  \r\n        for(const shape of layer.shapes) {\r\n          if(!shape.it) {\r\n            checkSmth(shape);\r\n            continue;\r\n          }\r\n\r\n          iterateIt(shape.it);\r\n        }\r\n      }\r\n    } catch(err) {\r\n      this.log.warn('cant apply replacements', err, object, toneIndex);\r\n    }\r\n  }\r\n\r\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    \r\n    if(!this.loaded) {\r\n      this.loadLottieWorkers();\r\n    }\r\n    \r\n    return fetch(url)\r\n    .then(res => res.arrayBuffer())\r\n    .then(data => apiManager.gzipUncompress<string>(data, true))\r\n    /* .then(str => {\r\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\r\n    }) */\r\n    .then(str => {\r\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str/* JSON.parse(str) */, needUpscale: true}));\r\n    });\r\n  }\r\n\r\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\r\n    return Promise.race([\r\n      /* new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', () => {\r\n          setTimeout(() => resolve(), 1500);\r\n        }, true);\r\n      }) */\r\n      new Promise<void>((resolve) => {\r\n        player.addEventListener('firstFrame', resolve, true);\r\n      }),\r\n      pause(2500)\r\n    ]);\r\n  }\r\n\r\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\r\n    if(!this.isWebAssemblySupported) {\r\n      return this.loadPromise as any;\r\n    }\r\n    //params.autoplay = true;\r\n\r\n    if(toneIndex >= 1 && toneIndex <= 5) {\r\n      /* params.animationData = copy(params.animationData);\r\n      this.applyReplacements(params.animationData, toneIndex); */\r\n\r\n      const newAnimationData = JSON.parse(params.animationData);\r\n      this.applyReplacements(newAnimationData, toneIndex);\r\n      params.animationData = JSON.stringify(newAnimationData);\r\n    }\r\n\r\n    if(!this.loaded) {\r\n      await this.loadLottieWorkers();\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      params.width = parseInt(params.container.style.width);\r\n      params.height = parseInt(params.container.style.height);\r\n    }\r\n\r\n    if(!params.width || !params.height) {\r\n      throw new Error('No size for sticker!');\r\n    }\r\n\r\n    params.group = group;\r\n\r\n    const player = this.initPlayer(params.container, params);\r\n    animationIntersector.addAnimation(player, group);\r\n\r\n    return player;\r\n  }\r\n\r\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\r\n      return;\r\n    }\r\n\r\n    this.log.debug('onPlayerLoaded');\r\n    rlPlayer.onLoad(frameCount, fps);\r\n    //rlPlayer.addListener('firstFrame', () => {\r\n      //animationIntersector.addAnimation(player, group);\r\n    //}, true);\r\n  };\r\n\r\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(!rlPlayer) {\r\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\r\n      return;\r\n    }\r\n\r\n    rlPlayer.clamped = frame;\r\n    rlPlayer.renderFrame(frame, frameNo);\r\n  };\r\n\r\n  private onPlayerError = (reqId: number, error: Error) => {\r\n    const rlPlayer = this.players[reqId];\r\n    if(rlPlayer) {\r\n      // ! will need refactoring later, this is not the best way to remove the animation\r\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\r\n      animations.forEach(animation => {\r\n        animationIntersector.checkAnimation(animation, true, true);\r\n      });\r\n    }\r\n  };\r\n\r\n  public onDestroy(reqId: number) {\r\n    delete this.players[reqId];\r\n  }\r\n\r\n  public destroyWorkers() {\r\n    this.workers.forEach((worker, idx) => {\r\n      worker.terminate();\r\n      this.log('worker #' + idx + ' terminated');\r\n    });\r\n\r\n    this.log('workers destroyed');\r\n    this.workers.length = 0;\r\n  }\r\n\r\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\r\n    const rlPlayer = new RLottiePlayer({\r\n      el, \r\n      worker: this.workers[this.curWorkerNum++],\r\n      options\r\n    });\r\n\r\n    this.players[rlPlayer.reqId] = rlPlayer;\r\n    if(this.curWorkerNum >= this.workers.length) {\r\n      this.curWorkerNum = 0;\r\n    }\r\n\r\n    rlPlayer.loadFromData(options.animationData);\r\n\r\n    return rlPlayer;\r\n  }\r\n}\r\n\r\nconst lottieLoader = new LottieLoader();\r\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\r\nexport default lottieLoader;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Page from \"./page\";\r\nimport lottieLoader from \"../lib/lottieLoader\";\r\nimport { horizontalMenu } from \"../components/horizontalMenu\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nclass PagesManager {\r\n  private pageId = -1;\r\n  private page: Page;\r\n\r\n  private selectTab: ReturnType<typeof horizontalMenu>;\r\n  public pagesDiv: HTMLDivElement;\r\n  public scrollableDiv: HTMLElement;\r\n\r\n  constructor() {\r\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\r\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\r\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\r\n      if(this.page?.onShown) {\r\n        this.page.onShown();\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPage(page: Page) {\r\n    if(page.isAuthPage) {\r\n      this.pagesDiv.style.display = '';\r\n\r\n      let id = whichChild(page.pageEl);\r\n      if(this.pageId === id) return;\r\n\r\n      this.selectTab(id);\r\n\r\n      if(this.pageId !== -1 && id > 1) {\r\n        lottieLoader.loadLottieWorkers();\r\n      }\r\n\r\n\r\n\r\n      this.pageId = id;\r\n\r\n      if(this.scrollableDiv) {\r\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\r\n      }\r\n    } else {\r\n      this.pagesDiv.style.display = 'none';\r\n      page.pageEl.style.display = '';\r\n\r\n      this.pageId = -1;\r\n    }\r\n\r\n    this.page = page;\r\n  }\r\n}\r\n\r\nconst pagesManager = new PagesManager();\r\nMOUNT_CLASS_TO.pagesManager = pagesManager;\r\nexport default pagesManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport pagesManager from \"./pagesManager\";\r\n\r\nexport default class Page {\r\n  public pageEl: HTMLDivElement;\r\n  private installed = false;\r\n\r\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\r\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\r\n  }\r\n\r\n  public async mount(...args: any[]) {\r\n    //this.pageEl.style.display = '';\r\n\r\n    if(this.onMount) {\r\n      this.onMount(...args);\r\n    }\r\n\r\n    if(!this.installed) {\r\n      if(this.onFirstMount) {\r\n        try {\r\n          const res = this.onFirstMount(...args);\r\n          if(res instanceof Promise) {\r\n            await res;\r\n          }\r\n        } catch(err) {\r\n          console.error('PAGE MOUNT ERROR:', err);\r\n        }\r\n      }\r\n      \r\n      this.installed = true;\r\n    }\r\n\r\n    pagesManager.setPage(this);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's fastSmoothScroll slightly patched\r\n\r\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\r\nimport { fastRaf } from './schedulers';\r\nimport { animateSingle, cancelAnimationByKey } from './animation';\r\nimport rootScope from '../lib/rootScope';\r\nimport isInDOM from './dom/isInDOM';\r\n\r\nconst MAX_DISTANCE = 1500;\r\nconst MIN_JS_DURATION = 250;\r\nconst MAX_JS_DURATION = 600;\r\n\r\nexport enum FocusDirection {\r\n  Up,\r\n  Down,\r\n  Static,\r\n};\r\n\r\nexport default function fastSmoothScroll(\r\n  container: HTMLElement,\r\n  element: HTMLElement,\r\n  position: ScrollLogicalPosition,\r\n  margin = 0,\r\n  maxDistance = MAX_DISTANCE,\r\n  forceDirection?: FocusDirection,\r\n  forceDuration?: number,\r\n  axis: 'x' | 'y' = 'y'\r\n) {\r\n  //return;\r\n\r\n  if(!rootScope.settings.animationsEnabled) {\r\n    forceDirection = FocusDirection.Static;\r\n  }\r\n\r\n  if(forceDirection === FocusDirection.Static) {\r\n    forceDuration = 0;\r\n    return scrollWithJs(container, element, position, margin, forceDuration, axis);\r\n    /* return Promise.resolve();\r\n\r\n    element.scrollIntoView({ block: position });\r\n\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve(); */\r\n  }\r\n\r\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const containerRect = container.getBoundingClientRect();\r\n  \r\n    const offsetTop = elementRect.top - containerRect.top;\r\n    if(forceDirection === undefined) {\r\n      if(offsetTop < -maxDistance) {\r\n        container.scrollTop += (offsetTop + maxDistance);\r\n      } else if(offsetTop > maxDistance) {\r\n        container.scrollTop += (offsetTop - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\r\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\r\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\r\n    }\r\n    /* const { offsetTop } = element;\r\n\r\n    if(forceDirection === undefined) {\r\n      const offset = offsetTop - container.scrollTop;\r\n\r\n      if(offset < -maxDistance) {\r\n        container.scrollTop += (offset + maxDistance);\r\n      } else if(offset > maxDistance) {\r\n        container.scrollTop += (offset - maxDistance);\r\n      }\r\n    } else if(forceDirection === FocusDirection.Up) {\r\n      container.scrollTop = offsetTop + maxDistance;\r\n    } else if(forceDirection === FocusDirection.Down) {\r\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\r\n    } */\r\n  }\r\n\r\n  const promise = new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      scrollWithJs(container, element, position, margin, forceDuration, axis)\r\n      .then(resolve);\r\n    });\r\n  });\r\n\r\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\r\n}\r\n\r\nfunction scrollWithJs(\r\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number, axis: 'x' | 'y' = 'y'\r\n) {\r\n  if(!isInDOM(element)) {\r\n    cancelAnimationByKey(container);\r\n    return Promise.resolve();\r\n  }\r\n  \r\n  const rectStartKey = axis === 'y' ? 'top' : 'left';\r\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\r\n  const sizeKey = axis === 'y' ? 'height' : 'width';\r\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\r\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\r\n\r\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\r\n  const elementRect = element.getBoundingClientRect();\r\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\r\n\r\n  //const transformable = container.firstElementChild as HTMLElement;\r\n\r\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\r\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\r\n\r\n  const containerSize = containerRect[sizeKey];\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  /* const elementPosition = element.offsetTop;\r\n  const elementSize = element.offsetHeight;\r\n\r\n  const scrollPosition = container[scrollPositionKey];\r\n  const scrollSize = container[scrollSizeKey];\r\n  const containerSize = container.offsetHeight; */\r\n\r\n  let path!: number;\r\n\r\n  switch(position) {\r\n    case 'start':\r\n      path = elementPosition - margin;\r\n      break;\r\n    case 'end':\r\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\r\n        : elementPosition - margin;\r\n      break;\r\n  }\r\n  /* switch (position) {\r\n    case 'start':\r\n      path = (elementPosition - margin) - scrollPosition;\r\n      break;\r\n    case 'end':\r\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\r\n      break;\r\n    // 'nearest' is not supported yet\r\n    case 'nearest':\r\n    case 'center':\r\n      path = elementSize < containerSize\r\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\r\n        : (elementPosition - margin) - scrollPosition;\r\n      break;\r\n  } */\r\n\r\n  // console.log('scrollWithJs: will scroll path:', path, element);\r\n\r\n  /* let existsTransform = 0;\r\n  const currentTransform = transformable.style.transform;\r\n  if(currentTransform) {\r\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\r\n    //path += existsTransform;\r\n  } */\r\n\r\n  if(path < 0) {\r\n    const remainingPath = -scrollPosition;\r\n    path = Math.max(path, remainingPath);\r\n  } else if(path > 0) {\r\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\r\n    path = Math.min(path, remainingPath);\r\n  }\r\n\r\n  const target = container[scrollPositionKey] + path;\r\n  const duration = forceDuration ?? (\r\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\r\n  );\r\n  const startAt = Date.now();\r\n\r\n  /* transformable.classList.add('no-transition');\r\n\r\n  const tickTransform = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n    const currentPath = path * transition(t);\r\n\r\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\r\n    container.dataset.translate = '' + -currentPath;\r\n\r\n    const willContinue = t < 1;\r\n    if(!willContinue) {\r\n      fastRaf(() => {\r\n        delete container.dataset.transform;\r\n        container.dataset.transform = '';\r\n        transformable.style.transform = '';\r\n        void transformable.offsetLeft; // reflow\r\n        transformable.classList.remove('no-transition');\r\n        void transformable.offsetLeft; // reflow\r\n        container[scrollPositionKey] = Math.round(target);\r\n      });\r\n    }\r\n\r\n    return willContinue;\r\n  };\r\n  \r\n  return animateSingle(tickTransform, container); */\r\n\r\n  /* return new Promise((resolve) => {\r\n    fastRaf(() => {\r\n      transformable.style.transform = '';\r\n      transformable.style.transition = '';\r\n\r\n      setTimeout(resolve, duration);\r\n    });\r\n  });\r\n\r\n  const transformableHeight = transformable.scrollHeight;\r\n  //transformable.style.minHeight = `${transformableHeight}px`;\r\n  */\r\n\r\n  const tick = () => {\r\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\r\n\r\n    const currentPath = path * (1 - transition(t));\r\n    container[scrollPositionKey] = Math.round(target - currentPath);\r\n    \r\n    return t < 1;\r\n  };\r\n\r\n  if(!duration || !path) {\r\n    cancelAnimationByKey(container);\r\n    tick();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  /* return new Promise((resolve) => {\r\n    setTimeout(resolve, duration);\r\n  }).then(() => {\r\n    transformable.classList.add('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.style.transform = '';\r\n    transformable.style.transition = '';\r\n    void transformable.offsetLeft; // reflow\r\n    transformable.classList.remove('no-transition');\r\n    void transformable.offsetLeft; // reflow\r\n    fastRaf(() => {\r\n      \r\n      container[scrollPositionKey] = Math.round(target);\r\n      //transformable.style.minHeight = ``;\r\n    });\r\n    \r\n  }); */\r\n\r\n  return animateSingle(tick, container);\r\n}\r\n\r\nfunction transition(t: number) {\r\n  return 1 - ((1 - t) ** 3.5);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\r\n\r\nimport { AnyToVoidFunction } from '../types';\r\nimport ListenerSetter from '../helpers/listenerSetter';\r\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\r\nimport { pause } from '../helpers/schedulers';\r\nimport rootScope from '../lib/rootScope';\r\nimport DEBUG from '../config/debug';\r\n\r\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\r\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\r\n\r\nlet isAnimating = false;\r\nlet heavyAnimationPromise: CancellablePromise<void> = deferredPromise<void>();\r\nlet promisesInQueue = 0;\r\n\r\nheavyAnimationPromise.resolve();\r\n\r\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\r\n\r\nexport function dispatchHeavyAnimationEvent(promise: Promise<any>, timeout?: number) {\r\n  if(!isAnimating) {\r\n    heavyAnimationPromise = deferredPromise<void>();\r\n    rootScope.broadcast(ANIMATION_START_EVENT);\r\n    isAnimating = true;\r\n    DEBUG && log('start');\r\n  }\r\n  \r\n  ++promisesInQueue;\r\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\r\n\r\n  const promises = [\r\n    timeout !== undefined ? pause(timeout) : undefined,\r\n    promise.finally(() => {})\r\n  ].filter(Boolean);\r\n\r\n  const perf = performance.now();\r\n  const _heavyAnimationPromise = heavyAnimationPromise;\r\n  Promise.race(promises).then(() => {\r\n    if(heavyAnimationPromise !== _heavyAnimationPromise || heavyAnimationPromise.isFulfilled) { // interrupted\r\n      return;\r\n    }\r\n\r\n    --promisesInQueue;\r\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\r\n    if(promisesInQueue <= 0) {\r\n      onHeavyAnimationEnd();\r\n    }\r\n  });\r\n\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nfunction onHeavyAnimationEnd() {\r\n  if(heavyAnimationPromise.isFulfilled) {\r\n    return;\r\n  }\r\n\r\n  isAnimating = false;\r\n  promisesInQueue = 0;\r\n  rootScope.broadcast(ANIMATION_END_EVENT);\r\n  heavyAnimationPromise.resolve();\r\n\r\n  DEBUG && log('end');\r\n}\r\n\r\nexport function interruptHeavyAnimation() {\r\n  onHeavyAnimationEnd();\r\n}\r\n\r\nexport function getHeavyAnimationPromise() {\r\n  return heavyAnimationPromise;\r\n}\r\n\r\nexport default function(\r\n  handleAnimationStart: AnyToVoidFunction,\r\n  handleAnimationEnd: AnyToVoidFunction,\r\n  listenerSetter?: ListenerSetter\r\n) {\r\n  //useEffect(() => {\r\n    if(isAnimating) {\r\n      handleAnimationStart();\r\n    }\r\n\r\n    const add = listenerSetter ? listenerSetter.add.bind(listenerSetter, rootScope) : rootScope.addEventListener.bind(rootScope);\r\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\r\n    add(ANIMATION_START_EVENT, handleAnimationStart);\r\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\r\n\r\n    return () => {\r\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\r\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\r\n    };\r\n  //}, [handleAnimationEnd, handleAnimationStart]);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function whichChild(elem: Node) {\r\n  if(!elem.parentNode) {\r\n    return -1;\r\n  }\r\n  \r\n  let i = 0;\r\n  // @ts-ignore\r\n  while((elem = elem.previousElementSibling) !== null) ++i;\r\n  return i;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"../helpers/dom/isInDOM\";\r\n\r\nexport interface AnimationItem {\r\n  el: HTMLElement,\r\n  group: string,\r\n  animation: RLottiePlayer | HTMLVideoElement\r\n};\r\n\r\nexport class AnimationIntersector {\r\n  public observer: IntersectionObserver;\r\n  private visible: Set<AnimationItem> = new Set();\r\n\r\n  private byGroups: {[group: string]: AnimationItem[]} = {};\r\n  private lockedGroups: {[group: string]: true} = {};\r\n  private onlyOnePlayableGroup: string = '';\r\n  \r\n  private intersectionLockedGroups: {[group: string]: true} = {};\r\n  private videosLocked = false;\r\n\r\n  constructor() {\r\n    this.observer = new IntersectionObserver((entries) => {\r\n      if(rootScope.idle.isIDLE) return;\r\n\r\n      for(const entry of entries) {\r\n        const target = entry.target;\r\n\r\n        for(const group in this.byGroups) {\r\n          if(this.intersectionLockedGroups[group]) {\r\n            continue;\r\n          }\r\n\r\n          const player = this.byGroups[group].find(p => p.el === target);\r\n          if(player) {\r\n            if(entry.isIntersecting) {\r\n              this.visible.add(player);\r\n              this.checkAnimation(player, false);\r\n            } else {\r\n              this.visible.delete(player);\r\n              this.checkAnimation(player, true);\r\n\r\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\r\n                //console.warn('will clear cache', player);\r\n                player.animation.clearCache();\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    rootScope.on('audio_play', ({doc}) => {\r\n      if(doc.type === 'round') {\r\n        this.videosLocked = true;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n\r\n    rootScope.on('audio_pause', () => {\r\n      if(this.videosLocked) {\r\n        this.videosLocked = false;\r\n        this.checkAnimations();\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAnimations(element: HTMLElement) {\r\n    const found: AnimationItem[] = [];\r\n    for(const group in this.byGroups) {\r\n      for(const player of this.byGroups[group]) {\r\n        if(player.el === element) {\r\n          found.push(player);\r\n        }\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n\r\n  public removeAnimation(player: AnimationItem) {\r\n    //console.log('destroy animation');\r\n    const {el, animation} = player;\r\n    animation.remove();\r\n\r\n    if(animation instanceof HTMLVideoElement && isSafari) {\r\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\r\n        animation.src = '';\r\n        animation.load();\r\n      }, 1e3);\r\n    }\r\n\r\n    for(const group in this.byGroups) {\r\n      this.byGroups[group].findAndSplice(p => p === player);\r\n    }\r\n  \r\n    this.observer.unobserve(el);\r\n    this.visible.delete(player);\r\n  }\r\n\r\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\r\n    const player = {\r\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \r\n      animation: animation, \r\n      group\r\n    };\r\n\r\n    if(animation instanceof RLottiePlayer) {\r\n      if(!rootScope.settings.stickers.loop && animation.loop) {\r\n        animation.loop = rootScope.settings.stickers.loop;\r\n      }\r\n    }\r\n\r\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\r\n    this.observer.observe(player.el);\r\n  }\r\n\r\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\r\n    if(rootScope.idle.isIDLE) return;\r\n    \r\n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\r\n\r\n    if(group && !this.byGroups[group]) {\r\n      //console.warn('no animation group:', group);\r\n      this.byGroups[group] = [];\r\n      return;\r\n    }\r\n\r\n    for(const group of groups) {\r\n      const animations = this.byGroups[group];\r\n\r\n      animations.forEach(player => {\r\n        this.checkAnimation(player, blurred, destroy);\r\n      });\r\n    }\r\n  }\r\n\r\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\r\n    const {el, animation, group} = player;\r\n    //return;\r\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\r\n      this.removeAnimation(player);\r\n      return;\r\n    }\r\n\r\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\r\n      if(!animation.paused) {\r\n        //console.warn('pause animation:', animation);\r\n        animation.pause();\r\n      }\r\n    } else if(animation.paused && \r\n      this.visible.has(player) && \r\n      animation.autoplay && \r\n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\r\n    ) {\r\n      //console.warn('play animation:', animation);\r\n      animation.play();\r\n    }\r\n  }\r\n\r\n  public setOnlyOnePlayableGroup(group: string) {\r\n    this.onlyOnePlayableGroup = group;\r\n  }\r\n\r\n  public lockGroup(group: string) {\r\n    this.lockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockGroup(group: string) {\r\n    delete this.lockedGroups[group];\r\n    this.checkAnimations(undefined, group);\r\n  }\r\n\r\n  public refreshGroup(group: string) {\r\n    const animations = this.byGroups[group];\r\n    if(animations && animations.length) {\r\n      animations.forEach(animation => {\r\n        this.observer.unobserve(animation.el);\r\n      });\r\n\r\n      window.requestAnimationFrame(() => {\r\n        animations.forEach(animation => {\r\n          this.observer.observe(animation.el);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public lockIntersectionGroup(group: string) {\r\n    this.intersectionLockedGroups[group] = true;\r\n  }\r\n\r\n  public unlockIntersectionGroup(group: string) {\r\n    delete this.intersectionLockedGroups[group];\r\n    this.refreshGroup(group);\r\n  }\r\n}\r\n\r\nconst animationIntersector = new AnimationIntersector();\r\nif(MOUNT_CLASS_TO) {\r\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\r\n}\r\nexport default animationIntersector;","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport function numberThousandSplitter(x: number, joiner = ' ') {\r\n  const parts = x.toString().split(\".\");\r\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\r\n  return parts.join(\".\");\r\n}\r\n\r\nexport function formatBytes(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n\r\nexport function formatNumber(bytes: number, decimals = 2) {\r\n  if(bytes === 0) return '0';\r\n\r\n  const k = 1000;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['', 'K', 'M', 'B', 'T'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\r\n}\r\n\r\nexport function clamp(v: number, min: number, max: number): number {\r\n  return v < min ? min : ((v > max) ? max : v);\r\n}\r\n\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { makeMediaSize } from \"./mediaSizes\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\n\r\nexport default function calcImageInBox(imageW: number, imageH: number, boxW: number, boxH: number, noZoom = true) {\r\n  if(imageW < boxW && imageH < boxH && noZoom) {\r\n    return makeMediaSize(imageW, imageH);\r\n  }\r\n\r\n  let boxedImageW = boxW;\r\n  let boxedImageH = boxH;\r\n\r\n  if((imageW / imageH) > (boxW / boxH)) {\r\n    boxedImageH = (imageH * boxW / imageW) | 0;\r\n  } else {\r\n    boxedImageW = (imageW * boxH / imageH) | 0;\r\n    if(boxedImageW > boxW) {\r\n      boxedImageH = (boxedImageH * boxW / boxedImageW) | 0;\r\n      boxedImageW = boxW;\r\n    }\r\n  }\r\n\r\n  // if (Config.Navigator.retina) {\r\n  //   imageW = Math.floor(imageW / 2)\r\n  //   imageH = Math.floor(imageH / 2)\r\n  // }\r\n\r\n  if(noZoom && boxedImageW >= imageW && boxedImageH >= imageH) {\r\n    boxedImageW = imageW;\r\n    boxedImageH = imageH;\r\n  }\r\n\r\n  return makeMediaSize(boxedImageW, boxedImageH);\r\n}\r\n\r\nMOUNT_CLASS_TO.calcImageInBox = calcImageInBox;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { TransitionSlider } from \"./transition\";\r\nimport { ScrollableX } from \"./scrollable\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { fastRaf } from \"../helpers/schedulers\";\r\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\n\r\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\r\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\r\n\r\n  if(tabs) {\r\n    const proxy = new Proxy(selectTab, {\r\n      apply: (target, that, args) => {\r\n        const id = +args[0];\r\n        const animate = args[1] !== undefined ? args[1] : true;\r\n  \r\n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\r\n        selectTarget(el, id, animate);\r\n      }\r\n    });\r\n\r\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\r\n      const tabContent = content.children[id] as HTMLDivElement;\r\n\r\n      if(onClick) {\r\n        const canChange = onClick(id, tabContent, animate);\r\n        if(canChange !== undefined && !canChange) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if(scrollableX) {\r\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        animate = false;\r\n      }\r\n\r\n      const prevId = selectTab.prevId();\r\n      if(target.classList.contains('active') || id === prevId) {\r\n        return false;\r\n      }\r\n      \r\n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\r\n\r\n      fastRaf(() => {\r\n        prev && prev.classList.remove('active');\r\n      });\r\n      \r\n      // stripe from ZINCHUK\r\n      if(useStripe && prevId !== -1 && animate) {\r\n        fastRaf(() => {\r\n          const indicator = target.querySelector('i')!;\r\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\r\n    \r\n          currentIndicator.classList.remove('animate');\r\n          indicator.classList.remove('animate');\r\n    \r\n          // We move and resize our indicator so it repeats the position and size of the previous one.\r\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\r\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\r\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\r\n  \r\n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\r\n    \r\n          requestAnimationFrame(() => {\r\n            // Now we remove the transform to let it animate to its own position and size.\r\n            indicator.classList.add('animate');\r\n            indicator.style.transform = 'none';\r\n          });\r\n        });\r\n      }\r\n      // stripe END\r\n\r\n      fastRaf(() => {\r\n        target.classList.add('active');\r\n      });\r\n      \r\n      selectTab(id, animate);\r\n    };\r\n\r\n    const useStripe = !tabs.classList.contains('no-stripe');\r\n\r\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\r\n    const tagName = tabs.firstElementChild.tagName;\r\n    tabs.addEventListener('click', function(e) {\r\n      let target = e.target as HTMLElement;\r\n      \r\n      target = findUpAsChild(target, tabs);\r\n      \r\n      //console.log('tabs click:', target);\r\n      \r\n      if(!target) return false;\r\n\r\n      let id: number;\r\n      if(target.dataset.tab) {\r\n        id = +target.dataset.tab;\r\n        if(id === -1) {\r\n          return false;\r\n        }\r\n      } else {\r\n        id = whichChild(target);\r\n      }\r\n\r\n      selectTarget(target, id);\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n  \r\n  return selectTab;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport rootScope from \"../lib/rootScope\";\r\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\r\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\r\nimport whichChild from \"../helpers/dom/whichChild\";\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport { isSafari } from \"../helpers/userAgent\";\r\n\r\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  const width = prevTabContent.getBoundingClientRect().width;\r\n  const elements = [tabContent, prevTabContent];\r\n  if(toRight) elements.reverse();\r\n  elements[0].style.filter = `brightness(80%)`;\r\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\r\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n  tabContent.classList.add('active');\r\n  void tabContent.offsetWidth; // reflow\r\n\r\n  tabContent.style.transform = '';\r\n  tabContent.style.filter = '';\r\n\r\n  return () => {\r\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\r\n  };\r\n}\r\n\r\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\r\n  // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n  const scrollableContainer = findUpClassName(tabContent, 'scrollable-y');\r\n  if(scrollableContainer && scrollableContainer.style.overflowY !== 'hidden') {\r\n    // const scrollBarWidth = scrollableContainer.offsetWidth - scrollableContainer.clientWidth;\r\n    scrollableContainer.style.overflowY = 'hidden';\r\n    // scrollableContainer.style.paddingRight = `${scrollBarWidth}px`;\r\n    // this.container.classList.add('sliding');\r\n  }\r\n\r\n  //window.requestAnimationFrame(() => {\r\n    const width = prevTabContent.getBoundingClientRect().width;\r\n    /* tabContent.style.setProperty('--width', width + 'px');\r\n    prevTabContent.style.setProperty('--width', width + 'px');\r\n\r\n    tabContent.classList.add('active'); */\r\n    //void tabContent.offsetWidth; // reflow\r\n    const elements = [tabContent, prevTabContent];\r\n    if(toRight) elements.reverse();\r\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\r\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\r\n  \r\n    tabContent.classList.add('active');\r\n    void tabContent.offsetWidth; // reflow\r\n  \r\n    tabContent.style.transform = '';\r\n  //});\r\n  \r\n  return () => {\r\n    prevTabContent.style.transform = '';\r\n\r\n    if(scrollableContainer) {\r\n      // Jolly Cobra's // Workaround for scrollable content flickering during animation.\r\n      if(isSafari) { // ! safari doesn't respect sticky header, so it flicks when overflow is changing\r\n        scrollableContainer.style.display = 'none';\r\n      }\r\n\r\n      scrollableContainer.style.overflowY = '';\r\n\r\n      if(isSafari) {\r\n        void scrollableContainer.offsetLeft; // reflow\r\n        scrollableContainer.style.display = '';\r\n      }\r\n\r\n      // scrollableContainer.style.paddingRight = '0';\r\n      // this.container.classList.remove('sliding');\r\n    }\r\n  };\r\n}\r\n\r\nexport const TransitionSlider = (content: HTMLElement, type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\r\n  let animationFunction: TransitionFunction = null;\r\n\r\n  switch(type) {\r\n    case 'tabs':\r\n      animationFunction = slideTabs;\r\n      break;\r\n    case 'navigation':\r\n      animationFunction = slideNavigation;\r\n      break;\r\n    /* default:\r\n      break; */\r\n  }\r\n\r\n  content.dataset.animation = type;\r\n  \r\n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\r\n};\r\n\r\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\r\n\r\nconst Transition = (content: HTMLElement, animationFunction: TransitionFunction, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\r\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\r\n  let animationDeferred: CancellablePromise<void>;\r\n  let animationStarted = 0;\r\n  let from: HTMLElement = null;\r\n\r\n  // TODO: check for transition type (transform, etc) using by animationFunction\r\n  content.addEventListener(animationFunction ? 'transitionend' : 'animationend', (e) => {\r\n    if((e.target as HTMLElement).parentElement !== content) {\r\n      return;\r\n    }\r\n    \r\n    //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\r\n\r\n    const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\r\n    if(callback) callback();\r\n\r\n    if(e.target !== from) {\r\n      return;\r\n    }\r\n\r\n    if(!animationDeferred && isHeavy) return;\r\n\r\n    if(animationDeferred) {\r\n      animationDeferred.resolve();\r\n      animationDeferred = undefined;\r\n    }\r\n\r\n    if(onTransitionEnd) {\r\n      onTransitionEnd(selectTab.prevId());\r\n    }\r\n\r\n    content.classList.remove('animating', 'backwards', 'disable-hover');\r\n  });\r\n\r\n  function selectTab(id: number | HTMLElement, animate = true) {\r\n    const self = selectTab;\r\n\r\n    if(id instanceof HTMLElement) {\r\n      id = whichChild(id);\r\n    }\r\n    \r\n    const prevId = self.prevId();\r\n    if(id === prevId) return false;\r\n\r\n    //console.log('selectTab id:', id);\r\n\r\n    const _from = from;\r\n    const to = content.children[id] as HTMLElement;\r\n\r\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\r\n      animate = false;\r\n    }\r\n\r\n    if(!animate) {\r\n      if(_from) _from.classList.remove('active', 'to', 'from');  \r\n      if(to) {\r\n        to.classList.remove('to', 'from');\r\n        to.classList.add('active');\r\n      }\r\n\r\n      content.classList.remove('animating', 'backwards', 'disable-hover');\r\n\r\n      from = to;\r\n\r\n      if(onTransitionEnd) onTransitionEnd(id);\r\n      return;\r\n    }\r\n\r\n    if(from) {\r\n      from.classList.remove('to');\r\n      from.classList.add('from');\r\n    }\r\n\r\n    content.classList.add('animating', 'disable-hover');\r\n    const toRight = prevId < id;\r\n    content.classList.toggle('backwards', !toRight);\r\n\r\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\r\n    if(!to) {\r\n      //prevTabContent.classList.remove('active');\r\n    } else {\r\n      if(animationFunction) {\r\n        onTransitionEndCallback = animationFunction(to, from, toRight);\r\n      } else {\r\n        to.classList.add('active');\r\n      }\r\n\r\n      to.classList.remove('from');\r\n      to.classList.add('to');\r\n    }\r\n    \r\n    if(to) {\r\n      onTransitionEndCallbacks.set(to, () => {\r\n        to.classList.remove('to');\r\n        onTransitionEndCallbacks.delete(to);\r\n      });\r\n    }\r\n\r\n    if(_from/*  && false */) {\r\n      const callback = () => {\r\n        _from.classList.remove('active', 'from');\r\n\r\n        if(onTransitionEndCallback) {\r\n          onTransitionEndCallback();\r\n        }\r\n\r\n        onTransitionEndCallbacks.delete(_from);\r\n      };\r\n\r\n      if(to) {\r\n        onTransitionEndCallbacks.set(_from, callback);\r\n      } else {\r\n        const timeout = window.setTimeout(callback, transitionTime);\r\n        onTransitionEndCallbacks.set(_from, () => {\r\n          clearTimeout(timeout);\r\n        });\r\n      }\r\n\r\n      if(isHeavy) {\r\n        if(!animationDeferred) {\r\n          animationDeferred = deferredPromise<void>();\r\n          animationStarted = performance.now();\r\n        }\r\n  \r\n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\r\n      }\r\n    }\r\n    \r\n    from = to;\r\n  }\r\n\r\n  //selectTab.prevId = -1;\r\n  selectTab.prevId = () => from ? whichChild(from) : -1;\r\n  \r\n  return selectTab;\r\n};\r\n\r\nexport default Transition;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's animation.ts\r\n\r\nimport { fastRaf } from './schedulers';\r\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\r\n\r\ninterface AnimationInstance {\r\n  isCancelled: boolean;\r\n  deferred: CancellablePromise<void>\r\n}\r\n\r\ntype AnimationInstanceKey = any;\r\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\r\n\r\nexport function createAnimationInstance(key: AnimationInstanceKey) {\r\n  cancelAnimationByKey(key);\r\n\r\n  const instance: AnimationInstance = {\r\n    isCancelled: false, \r\n    deferred: deferredPromise<void>()\r\n  };\r\n\r\n  instances.set(key, instance);\r\n  instance.deferred.then(() => {\r\n    instances.delete(key);\r\n  });\r\n\r\n  return instance;\r\n}\r\n\r\nexport function getAnimationInstance(key: AnimationInstanceKey) {\r\n  return instances.get(key);\r\n}\r\n\r\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\r\n  const instance = getAnimationInstance(key);\r\n  if(instance) {\r\n    instance.isCancelled = true;\r\n    instance.deferred.resolve();\r\n  }\r\n}\r\n\r\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\r\n  if(!instance) {\r\n    instance = createAnimationInstance(key);\r\n  }\r\n\r\n  fastRaf(() => {\r\n    if(instance.isCancelled) {\r\n      return;\r\n    }\r\n    \r\n    if(tick()) {\r\n      animateSingle(tick, key, instance);\r\n    } else {\r\n      instance.deferred.resolve();\r\n    }\r\n  });\r\n\r\n  return instance.deferred;\r\n}\r\n\r\nexport function animate(tick: Function) {\r\n  fastRaf(() => {\r\n    if(tick()) {\r\n      animate(tick);\r\n    }\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAsChild(el: any, parent: any) {\r\n  if(el.parentElement === parent) return el;\r\n  \r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.parentElement === parent) {\r\n      return el;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n"],"sourceRoot":""}