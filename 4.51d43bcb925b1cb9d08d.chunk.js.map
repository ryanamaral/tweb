{"version":3,"sources":["webpack:///./src/lib/appManagers/appStateManager.ts","webpack:///./src/lib/lottieLoader.ts","webpack:///./src/pages/pagesManager.ts","webpack:///./src/pages/page.ts","webpack:///./src/hooks/useHeavyAnimationCheck.ts","webpack:///./src/components/animationIntersector.ts","webpack:///./src/helpers/fastSmoothScroll.ts","webpack:///./src/helpers/number.ts","webpack:///./src/components/transition.ts","webpack:///./src/components/horizontalMenu.ts","webpack:///./src/helpers/dom/findUpAsChild.ts","webpack:///./src/helpers/animation.ts","webpack:///./src/lib/rlottie/rlottie.worker.ts"],"names":["STATE_VERSION","version","STATE_INIT","allDialogsLoaded","pinnedOrders","contactsList","updates","filters","maxSeenMsgId","stateCreatedTime","Date","now","recentEmoji","topPeers","recentSearch","authState","_","hiddenPinnedMessages","settings","messagesTextSize","sendShortcut","animationsEnabled","autoDownload","contacts","private","groups","channels","autoPlay","gifs","videos","stickers","suggest","loop","themes","name","background","type","blur","slug","highlightningColor","color","theme","notifications","sound","keepSigned","ALL_KEYS","Object","keys","REFRESH_KEYS","AppStateManager","super","log","neededPeers","Map","singlePeerMap","storages","users","storeName","chats","dialogs","storagesResults","this","loadSavedState","loaded","console","time","Promise","resolve","storagesKeys","storagesPromises","map","key","getAll","promises","concat","get","all","then","arr","state","i","length","value","undefined","pushToState","splice","auth","shift","broadcast","id","forEach","s","hasOwnProperty","nightTheme","find","t","missingKey","timeEnd","catch","first","split","direct","set","peerId","limit","has","Set","add","dispatchEvent","keepPeerSingle","existsPeerId","delete","size","appStateManager","convert","Math","round","min","max","RLottiePlayer","el","worker","options","reqId","width","height","paused","direction","speed","autoplay","group","frames","cachingDelta","skipRatio","_loop","_autoplay","skipDelta","pixelRatio","window","devicePixelRatio","needUpscale","isMobile","noCache","Infinity","canvas","document","createElement","classList","context","getContext","clamped","Uint8ClampedArray","imageData","ImageData","methodName","args","sendQuery","jsonString","setMainLoop","clearPendingRAF","clearTimeout","rafId","renderFirstFrame","pause","curFrame","frameCount","requestFrame","stop","play","lottieLoader","onDestroy","frame","frameNo","data","putImageData","err","error","frInterval","delta","frThen","setTimeout","renderFrame2","renderFrame","fps","method","mainLoopForwards","mainLoopBackwards","bind","currentMethod","frameListener","listenerResults","diff","addEventListener","appendChild","QueryableWorker","defaultListener","onError","onerror","onmessage","event","queryMethodListener","queryMethodArguments","call","message","postMessage","terminate","queryMethod","transfer","arg","ArrayBuffer","push","buffer","LottieLoader","isWebAssemblySupported","loadPromise","reject","workersLimit","players","workers","curWorkerNum","Error","onPlayerLoaded","rlPlayer","debug","onLoad","warn","onFrame","onPlayerError","getAnimations","animation","checkAnimation","element","player","remain","object","toneIndex","replacements","COLORREPLACEMENTS","checkSmth","smth","ty","k","c","foundReplacement","p","applyTo","iterateIt","it","layer","layers","shapes","shape","params","url","loadLottieWorkers","fetch","res","arrayBuffer","gzipUncompress","str","loadAnimationWorker","assign","animationData","race","newAnimationData","JSON","parse","applyReplacements","stringify","parseInt","container","style","initPlayer","addAnimation","idx","loadFromData","pagesManager","pageId","pagesDiv","getElementById","scrollableDiv","querySelector","selectTab","horizontalMenu","page","onShown","isAuthPage","display","pageEl","fastSmoothScroll","firstElementChild","className","onFirstMount","onMount","installed","body","setPage","isAnimating","heavyAnimationPromise","promisesInQueue","dispatchHeavyAnimationEvent","promise","timeout","finally","filter","Boolean","perf","performance","getHeavyAnimationPromise","handleAnimationStart","handleAnimationEnd","listenerSetter","remove","removeManual","removeEventListener","animationIntersector","visible","byGroups","lockedGroups","onlyOnePlayableGroup","intersectionLockedGroups","videosLocked","observer","IntersectionObserver","entries","idle","isIDLE","entry","target","isIntersecting","clearCache","on","doc","checkAnimations","found","HTMLVideoElement","src","load","findAndSplice","unobserve","observe","blurred","destroy","removeAnimation","animations","requestAnimationFrame","refreshGroup","FocusDirection","position","margin","maxDistance","forceDirection","forceDuration","axis","Static","scrollWithJs","getBoundingClientRect","elementRect","containerRect","offsetTop","top","scrollTop","Up","Down","rectStartKey","rectEndKey","sizeKey","scrollSizeKey","scrollPositionKey","elementPosition","elementSize","containerSize","scrollPosition","scrollSize","path","remainingPath","duration","abs","startAt","tick","currentPath","transition","numberThousandSplitter","x","joiner","parts","toString","replace","join","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","formatNumber","clamp","v","slideNavigation","tabContent","prevTabContent","toRight","elements","reverse","transform","offsetWidth","slideTabs","TransitionSlider","content","transitionTime","onTransitionEnd","isHeavy","animationFunction","dataset","Transition","onTransitionEndCallbacks","animationDeferred","animationStarted","from","animate","self","HTMLElement","prevId","_from","to","children","onTransitionEndCallback","toggle","callback","e","parentElement","tabs","onClick","scrollableX","proxy","Proxy","apply","that","selectTarget","canChange","scrollIntoViewNew","rootScope","contains","prev","tagName","toLowerCase","useStripe","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","parent","findUpAsChild","tab","instances","cancelAnimationByKey","instance","getAnimationInstance","isCancelled","deferred","animateSingle","createAnimationInstance","module","exports","Worker"],"mappings":"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","file":"4.51d43bcb925b1cb9d08d.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Dialog } from './appMessagesManager';\nimport type { UserAuth } from '../mtproto/mtproto_config';\nimport type { User } from './appUsersManager';\nimport type { AuthState } from '../../types';\nimport type FiltersStorage from '../storages/filters';\nimport type DialogsStorage from '../storages/dialogs';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport rootScope from '../rootScope';\nimport sessionStorage from '../sessionStorage';\nimport { logger } from '../logger';\nimport { copy, setDeepProperty, validateInitObject } from '../../helpers/object';\nimport App from '../../config/app';\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\nimport AppStorage from '../storage';\nimport { Chat } from '../../layer';\n\nconst REFRESH_EVERY = 24 * 60 * 60 * 1000; // 1 day\nconst STATE_VERSION = App.version;\n\nexport type Background = {\n  type: 'color' | 'image' | 'default',\n  blur: boolean,\n  highlightningColor?: string,\n  color?: string,\n  slug?: string,\n};\n\nexport type Theme = {\n  name: 'day' | 'night' | 'system',\n  background: Background\n};\n\nexport type State = {\n  allDialogsLoaded: DialogsStorage['allDialogsLoaded'],\n  pinnedOrders: DialogsStorage['pinnedOrders'],\n  contactsList: number[],\n  updates: Partial<{\n    seq: number,\n    pts: number,\n    date: number\n  }>,\n  filters: FiltersStorage['filters'],\n  maxSeenMsgId: number,\n  stateCreatedTime: number,\n  recentEmoji: string[],\n  topPeers: number[],\n  recentSearch: number[],\n  version: typeof STATE_VERSION,\n  authState: AuthState,\n  hiddenPinnedMessages: {[peerId: string]: number},\n  settings: {\n    messagesTextSize: number,\n    sendShortcut: 'enter' | 'ctrlEnter',\n    animationsEnabled: boolean,\n    autoDownload: {\n      contacts: boolean\n      private: boolean\n      groups: boolean\n      channels: boolean\n    },\n    autoPlay: {\n      gifs: boolean,\n      videos: boolean\n    },\n    stickers: {\n      suggest: boolean,\n      loop: boolean\n    },\n    background?: Background, // ! DEPRECATED\n    themes: Theme[],\n    theme: Theme['name'],\n    notifications: {\n      sound: boolean\n    },\n    nightTheme?: boolean, // ! DEPRECATED\n  },\n  keepSigned: boolean\n};\n\nexport const STATE_INIT: State = {\n  allDialogsLoaded: {},\n  pinnedOrders: {},\n  contactsList: [],\n  updates: {},\n  filters: {},\n  maxSeenMsgId: 0,\n  stateCreatedTime: Date.now(),\n  recentEmoji: [],\n  topPeers: [],\n  recentSearch: [],\n  version: STATE_VERSION,\n  authState: {\n    _: 'authStateSignQr'\n  },\n  hiddenPinnedMessages: {},\n  settings: {\n    messagesTextSize: 16,\n    sendShortcut: 'enter',\n    animationsEnabled: true,\n    autoDownload: {\n      contacts: true,\n      private: true,\n      groups: true,\n      channels: true\n    },\n    autoPlay: {\n      gifs: true,\n      videos: true\n    },\n    stickers: {\n      suggest: true,\n      loop: true\n    },\n    themes: [{\n      name: 'day',\n      background: {\n        type: 'image',\n        blur: false,\n        slug: 'ByxGo2lrMFAIAAAAmkJxZabh8eM', // * new blurred camomile,\n        highlightningColor: 'hsla(85.5319, 36.9171%, 40.402%, 0.4)'\n      }\n    }, {\n      name: 'night',\n      background: {\n        type: 'color',\n        blur: false,\n        color: '#0f0f0f',\n        highlightningColor: 'hsla(0, 0%, 3.82353%, 0.4)'\n      }\n    }],\n    theme: 'system',\n    notifications: {\n      sound: false\n    }\n  },\n  keepSigned: true\n};\n\nconst ALL_KEYS = Object.keys(STATE_INIT) as any as Array<keyof State>;\n\nconst REFRESH_KEYS = ['dialogs', 'allDialogsLoaded', 'messages', 'contactsList', 'stateCreatedTime',\n  'updates', 'maxSeenMsgId', 'filters', 'topPeers', 'pinnedOrders'] as any as Array<keyof State>;\n\nexport class AppStateManager extends EventListenerBase<{\n  save: (state: State) => Promise<void>,\n  peerNeeded: (peerId: number) => void,\n  peerUnneeded: (peerId: number) => void,\n}> {\n  public static STATE_INIT = STATE_INIT;\n  private loaded: Promise<State>;\n  private log = logger('STATE'/* , LogLevels.error */);\n\n  private state: State;\n\n  private neededPeers: Map<number, Set<string>> = new Map();\n  private singlePeerMap: Map<string, number> = new Map();\n\n  public storages = {\n    users: new AppStorage<Record<number, User>>({\n      storeName: 'users'\n    }),\n\n    chats: new AppStorage<Record<number, Chat>>({\n      storeName: 'chats'\n    }),\n\n    dialogs: new AppStorage<Record<number, Dialog>>({\n      storeName: 'dialogs'\n    })\n  };\n\n  public storagesResults: {[key in keyof AppStateManager['storages']]: any[]} = {} as any;\n\n  constructor() {\n    super();\n    this.loadSavedState();\n  }\n\n  public loadSavedState(): Promise<State> {\n    if(this.loaded) return this.loaded;\n    console.time('load state');\n    this.loaded = new Promise((resolve) => {\n      const storagesKeys = Object.keys(this.storages) as Array<keyof AppStateManager['storages']>;\n      const storagesPromises = storagesKeys.map(key => this.storages[key].getAll());\n\n      const promises = ALL_KEYS\n      .concat('user_auth' as any)\n      .map(key => sessionStorage.get(key))\n      .concat(storagesPromises);\n\n      Promise.all(promises).then((arr) => {\n        /* const self = this;\n        const skipHandleKeys = new Set(['isProxy', 'filters', 'drafts']);\n        const getHandler = (path?: string) => {\n          return {\n            get(target: any, key: any) {\n              if(key === 'isProxy') {\n                return true;\n              }\n\n              const prop = target[key];\n\n              if(prop !== undefined && !skipHandleKeys.has(key) && !prop.isProxy && typeof(prop) === 'object') {\n                target[key] = new Proxy(prop, getHandler(path || key));\n                return target[key];\n              }\n              \n              return prop;\n            },\n            set(target: any, key: any, value: any) {\n              console.log('Setting', target, `.${key} to equal`, value, path);\n          \n              target[key] = value;\n\n              // @ts-ignore\n              self.pushToState(path || key, path ? self.state[path] : value, false);\n\n              return true;\n            }\n          };\n        }; */\n\n        let state: State = this.state = {} as any;\n\n        // ! then can't store false values\n        for(let i = 0, length = ALL_KEYS.length; i < length; ++i) {\n          const key = ALL_KEYS[i];\n          const value = arr[i];\n          if(value !== undefined) {\n            // @ts-ignore\n            state[key] = value;\n          } else {\n            this.pushToState(key, copy(STATE_INIT[key]));\n          }\n        }\n\n        arr.splice(0, ALL_KEYS.length);\n\n        // * Read auth\n        const auth: UserAuth = arr.shift() as any;\n        if(auth) {\n          // ! Warning ! DON'T delete this\n          state.authState = {_: 'authStateSignedIn'};\n          rootScope.broadcast('user_auth', typeof(auth) !== 'number' ? (auth as any).id : auth); // * support old version\n        }\n\n        // * Read storages\n        for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n          this.storagesResults[storagesKeys[i]] = arr[i];\n        }\n\n        arr.splice(0, storagesKeys.length);\n\n        const time = Date.now();\n        if((state.stateCreatedTime + REFRESH_EVERY) < time) {\n          if(DEBUG) {\n            this.log('will refresh state', state.stateCreatedTime, time);\n          }\n          \n          REFRESH_KEYS.forEach(key => {\n            this.pushToState(key, copy(STATE_INIT[key]));\n\n            // @ts-ignore\n            const s = this.storagesResults[key];\n            if(s && s.length) {\n              s.length = 0;\n            }\n          });\n        }\n        \n        //state = this.state = new Proxy(state, getHandler());\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('theme') && state.settings.hasOwnProperty('nightTheme')) {\n          state.settings.theme = state.settings.nightTheme ? 'night' : 'day';\n          this.pushToState('settings', state.settings);\n        }\n\n        // * support old version\n        if(!state.settings.hasOwnProperty('themes') && state.settings.background) {\n          state.settings.themes = copy(STATE_INIT.settings.themes);\n          const theme = state.settings.themes.find(t => t.name === state.settings.theme);\n          if(theme) {\n            theme.background = state.settings.background;\n            this.pushToState('settings', state.settings);\n          }\n        }\n\n        validateInitObject(STATE_INIT, state, (missingKey) => {\n          // @ts-ignore\n          this.pushToState(missingKey, state[missingKey]);\n        });\n\n        if(state.version !== STATE_VERSION) {\n          this.pushToState('version', STATE_VERSION);\n        }\n\n        // ! probably there is better place for it\n        rootScope.settings = state.settings;\n\n        if(DEBUG) {\n          this.log('state res', state, copy(state));\n        }\n        \n        //return resolve();\n\n        console.timeEnd('load state');\n        resolve(state);\n      }).catch(resolve);\n    });\n\n    return this.loaded;\n  }\n\n  public getState() {\n    return this.state === undefined ? this.loadSavedState() : Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n    rootScope.broadcast('settings_updated', {key, value});\n\n    const first = key.split('.')[0];\n    // @ts-ignore\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    sessionStorage.set({\n      [key]: value\n    });\n  }\n\n  public requestPeer(peerId: number, type: string, limit?: number) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(type)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(type);\n    this.dispatchEvent('peerNeeded', peerId);\n\n    if(limit !== undefined) {\n      this.keepPeerSingle(peerId, type);\n    }\n  }\n\n  public isPeerNeeded(peerId: number) {\n    return this.neededPeers.has(peerId);\n  }\n\n  public keepPeerSingle(peerId: number, type: string) {\n    const existsPeerId = this.singlePeerMap.get(type);\n    if(existsPeerId && existsPeerId !== peerId) {\n      const set = this.neededPeers.get(existsPeerId);\n      set.delete(type);\n\n      if(!set.size) {\n        this.neededPeers.delete(existsPeerId);\n        this.dispatchEvent('peerUnneeded', existsPeerId);\n      }\n    }\n\n    this.singlePeerMap.set(type, peerId);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\n//console.trace('appStateManager include');\n\nconst appStateManager = new AppStateManager();\nMOUNT_CLASS_TO.appStateManager = appStateManager;\nexport default appStateManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport RLottieWorker from 'worker-loader!./rlottie/rlottie.worker';\nimport animationIntersector from \"../components/animationIntersector\";\nimport { MOUNT_CLASS_TO } from '../config/debug';\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport mediaSizes from \"../helpers/mediaSizes\";\nimport { clamp } from '../helpers/number';\nimport { pause } from '../helpers/schedulers';\nimport { isAndroid, isApple, isAppleMobile, isSafari } from \"../helpers/userAgent\";\nimport { logger, LogTypes } from \"./logger\";\nimport apiManager from \"./mtproto/mtprotoworker\";\n\nlet convert = (value: number) => {\n\treturn Math.round(Math.min(Math.max(value, 0), 1) * 255);\n};\n\ntype RLottiePlayerListeners = 'enterFrame' | 'ready' | 'firstFrame' | 'cached';\ntype RLottieOptions = {\n  container: HTMLElement, \n  autoplay?: boolean, \n  animationData: string, \n  loop?: boolean, \n  width?: number,\n  height?: number,\n  group?: string,\n  noCache?: true,\n  needUpscale?: true,\n  skipRatio?: number\n};\n\nexport class RLottiePlayer extends EventListenerBase<{\n  enterFrame: (frameNo: number) => void,\n  ready: () => void,\n  firstFrame: () => void,\n  cached: () => void\n}> {\n  public static reqId = 0;\n\n  public reqId = 0;\n  public curFrame: number;\n  public frameCount: number;\n  public fps: number;\n  public skipDelta: number;\n\n  public worker: QueryableWorker;\n  \n  public width = 0;\n  public height = 0;\n\n  public el: HTMLElement;\n  public canvas: HTMLCanvasElement;\n  public context: CanvasRenderingContext2D;\n\n  public paused = true;\n  //public paused = false;\n  public direction = 1;\n  public speed = 1;\n  public autoplay = true;\n  public _autoplay: boolean; // ! will be used to store original value for settings.stickers.loop\n  public loop = true;\n  public _loop: boolean; // ! will be used to store original value for settings.stickers.loop\n  public group = '';\n\n  private frInterval: number;\n  private frThen: number;\n  private rafId: number;\n\n  //private caching = false;\n  //private removed = false;\n\n  private frames: {[frameNo: string]: Uint8ClampedArray} = {};\n  public imageData: ImageData;\n  public clamped: Uint8ClampedArray;\n  public cachingDelta = 0;\n\n  //private playedTimes = 0;\n\n  private currentMethod: RLottiePlayer['mainLoopForwards'] | RLottiePlayer['mainLoopBackwards'];\n  private frameListener: () => void;\n\n  constructor({el, worker, options}: {\n    el: HTMLElement,\n    worker: QueryableWorker,\n    options: RLottieOptions\n  }) {\n    super(true);\n\n    this.reqId = ++RLottiePlayer['reqId'];\n    this.el = el;\n    this.worker = worker;\n\n    for(let i in options) {\n      if(this.hasOwnProperty(i)) {\n        // @ts-ignore\n        this[i] = options[i];\n      }\n    }\n\n    this._loop = this.loop;\n    this._autoplay = this.autoplay;\n\n    // * Skip ratio (30fps)\n    let skipRatio: number;\n    if(options.skipRatio !== undefined) skipRatio = options.skipRatio;\n    else if((isAndroid || isAppleMobile || (isApple && !isSafari)) && this.width < 100 && this.height < 100) {\n      skipRatio = 0.5;\n    }\n\n    this.skipDelta = skipRatio !== undefined ? 1 / skipRatio | 0 : 1;\n\n    //options.needUpscale = true;\n\n    // * Pixel ratio\n    //const pixelRatio = window.devicePixelRatio;\n    const pixelRatio = clamp(window.devicePixelRatio, 1, 2);\n    if(pixelRatio > 1) {\n      //this.cachingEnabled = true;//this.width < 100 && this.height < 100;\n      if(options.needUpscale) {\n        this.width = Math.round(this.width * pixelRatio);\n        this.height = Math.round(this.height * pixelRatio);\n      } else if(pixelRatio > 1) {\n        if(this.width > 100 && this.height > 100) {\n          if(isApple || !mediaSizes.isMobile) {\n            /* this.width = Math.round(this.width * (pixelRatio - 1));\n            this.height = Math.round(this.height * (pixelRatio - 1)); */\n            this.width = Math.round(this.width * pixelRatio);\n            this.height = Math.round(this.height * pixelRatio);\n          } else if(pixelRatio > 2.5) {\n            this.width = Math.round(this.width * (pixelRatio - 1.5));\n            this.height = Math.round(this.height * (pixelRatio - 1.5));\n          }\n        } else {\n          this.width = Math.round(this.width * Math.max(1.5, pixelRatio - 1.5));\n          this.height = Math.round(this.height * Math.max(1.5, pixelRatio - 1.5));\n        }\n      }\n    }\n\n    //options.noCache = true;\n    \n    // * Cache frames params\n    if(!options.noCache/*  && false */) {\n      // проверка на размер уже после скейлинга, сделано для попапа и сайдбара, где стикеры 80х80 и 68х68, туда нужно 75%\n      if(isApple && this.width > 100 && this.height > 100) {\n        this.cachingDelta = 2; //2 // 50%\n      } else if(this.width < 100 && this.height < 100) {\n        this.cachingDelta = Infinity; // 100%\n      } else {\n        this.cachingDelta = 4; // 75%\n      }\n    }\n    \n    // this.cachingDelta = Infinity;\n    // if(isApple) {\n    //   this.cachingDelta = 0; //2 // 50%\n    // }\n\n    /* this.width *= 0.8;\n    this.height *= 0.8; */\n    \n    //console.log(\"RLottiePlayer width:\", this.width, this.height, options);\n    this.canvas = document.createElement('canvas');\n    this.canvas.classList.add('rlottie');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n    this.imageData = new ImageData(this.width, this.height);\n  }\n\n  public clearCache() {\n    this.frames = {};\n  }\n\n  public sendQuery(methodName: string, ...args: any[]) {\n    //console.trace('RLottie sendQuery:', methodName);\n    this.worker.sendQuery(methodName, this.reqId, ...args);\n  }\n\n  public loadFromData(jsonString: string) {\n    this.sendQuery('loadFromData', jsonString, this.width, this.height/* , this.canvas.transferControlToOffscreen() */);\n  }\n\n  public play() {\n    if(!this.paused) return;\n\n    //return;\n\n    //console.log('RLOTTIE PLAY' + this.reqId);\n\n    this.paused = false;\n    this.setMainLoop();\n  }\n\n  public pause(clearPendingRAF = true) {\n    if(this.paused) return;\n\n    this.paused = true;\n    if(clearPendingRAF) {\n      clearTimeout(this.rafId);\n    }\n    //window.cancelAnimationFrame(this.rafId);\n  }\n\n  public stop(renderFirstFrame = true) {\n    this.pause();\n\n    this.curFrame = this.direction === 1 ? 0 : this.frameCount;\n    if(renderFirstFrame) {\n      this.requestFrame(this.curFrame);\n      //this.sendQuery('renderFrame', this.curFrame);\n    }\n  }\n\n  public restart() {\n    this.stop(false);\n    this.play();\n  }\n\n  public setSpeed(speed: number) {\n    this.speed = speed;\n\n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public setDirection(direction: number) {\n    this.direction = direction;\n    \n    if(!this.paused) {\n      this.setMainLoop();\n    }\n  }\n\n  public remove() {\n    //alert('remove');\n    lottieLoader.onDestroy(this.reqId);\n    this.pause();\n    this.sendQuery('destroy');\n    //this.removed = true;\n  }\n\n  public renderFrame2(frame: Uint8ClampedArray, frameNo: number) {\n    /* this.setListenerResult('enterFrame', frameNo);\n    return; */\n\n    try {\n      this.imageData.data.set(frame);\n      \n      //this.context.putImageData(new ImageData(frame, this.width, this.height), 0, 0);\n      //let perf = performance.now();\n      this.context.putImageData(this.imageData, 0, 0);\n      //console.log('renderFrame2 perf:', performance.now() - perf);\n    } catch(err) {\n      console.error('RLottiePlayer renderFrame error:', err/* , frame */, this.width, this.height);\n      this.autoplay = false;\n      this.pause();\n      return;\n    }\n    \n    //console.log('set result enterFrame', frameNo);\n    this.dispatchEvent('enterFrame', frameNo);\n  }\n\n  public renderFrame(frame: Uint8ClampedArray, frameNo: number) {\n    //console.log('renderFrame', frameNo, this);\n    if(this.cachingDelta && (frameNo % this.cachingDelta || !frameNo) && !this.frames[frameNo]) {\n      this.frames[frameNo] = new Uint8ClampedArray(frame);//frame;\n    }\n\n    /* if(!this.listenerResults.hasOwnProperty('cached')) {\n      this.setListenerResult('enterFrame', frameNo);\n      if(frameNo === (this.frameCount - 1)) {\n        this.setListenerResult('cached');\n      }\n\n      return;\n    } */\n\n    if(this.frInterval) {\n      const now = Date.now(), delta = now - this.frThen;\n      //console.log(`renderFrame delta${this.reqId}:`, this, delta, this.frInterval);\n\n      if(delta < 0) {\n        if(this.rafId) clearTimeout(this.rafId);\n        return this.rafId = window.setTimeout(() => {\n          this.renderFrame2(frame, frameNo);\n        }, this.frInterval > -delta ? -delta % this.frInterval : this.frInterval);\n        //await new Promise((resolve) => setTimeout(resolve, -delta % this.frInterval));\n      }\n    }\n\n    this.renderFrame2(frame, frameNo);\n  }\n\n  public requestFrame(frameNo: number) {\n    if(this.frames[frameNo]) {\n      this.renderFrame(this.frames[frameNo], frameNo);\n    } else if(isSafari) {\n      this.sendQuery('renderFrame', frameNo);\n    } else {\n      if(!this.clamped.length) { // fix detached\n        this.clamped = new Uint8ClampedArray(this.width * this.height * 4);\n      }\n      \n      this.sendQuery('renderFrame', frameNo, this.clamped);\n    }\n  }\n\n  private mainLoopForwards() {\n    const frame = (this.curFrame + this.skipDelta) >= this.frameCount ? this.curFrame = 0 : this.curFrame += this.skipDelta;\n    //console.log('mainLoopForwards', this.curFrame, this.skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame + this.skipDelta) >= this.frameCount) {\n      //this.playedTimes++;\n\n      if(!this.loop) {\n        this.pause(false);\n        return false;\n      }\n    }\n\n    return true;\n  }\n  \n  private mainLoopBackwards() {\n    const frame = (this.curFrame - this.skipDelta) < 0 ? this.curFrame = this.frameCount - 1 : this.curFrame -= this.skipDelta;\n    //console.log('mainLoopBackwards', this.curFrame, this.skipDelta, frame);\n\n    this.requestFrame(frame);\n    if((frame - this.skipDelta) < 0) {\n      //this.playedTimes++;\n\n      if(!this.loop) {\n        this.pause(false);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public setMainLoop() {\n    //window.cancelAnimationFrame(this.rafId);\n    clearTimeout(this.rafId);\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n\n    //console.trace('setMainLoop', this.frInterval, this.direction, this, JSON.stringify(this.listenerResults), this.listenerResults);\n\n    const method = (this.direction === 1 ? this.mainLoopForwards : this.mainLoopBackwards).bind(this);\n    this.currentMethod = method;\n    //this.frameListener && this.removeListener('enterFrame', this.frameListener);\n\n    //setTimeout(() => {\n      //this.addListener('enterFrame', this.frameListener);\n    //}, 0);\n\n    if(this.frameListener && this.listenerResults.hasOwnProperty('enterFrame')) {\n      this.frameListener();\n    }\n  \n    //this.mainLoop(method);\n    //this.r(method);\n    //method();\n  }\n\n  public async onLoad(frameCount: number, fps: number) {\n    this.curFrame = this.direction === 1 ? 0 : frameCount - 1;\n    this.frameCount = frameCount;\n    this.fps = fps;\n\n    // * Handle 30fps stickers if 30fps set\n    if(this.fps < 60 && this.skipDelta !== 1) {\n      const diff = 60 / fps;\n      this.skipDelta = this.skipDelta / diff | 0;\n    }\n\n    this.frInterval = 1000 / this.fps / this.speed * this.skipDelta;\n    this.frThen = Date.now() - this.frInterval;\n    //this.sendQuery('renderFrame', 0);\n    \n    // Кешировать сразу не получится, рендер стикера (тайгер) занимает 519мс, \n    // если рендерить 75% с получением каждого кадра из воркера, будет 475мс, т.е. при 100% было бы 593мс, потеря на передаче 84мс. \n\n    /* console.time('cache' + this.reqId);\n    for(let i = 0; i < frameCount; ++i) {\n      //if(this.removed) return;\n      \n      if(i % 4) {\n        await new Promise((resolve) => {\n          delete this.listenerResults.enterFrame;\n          this.addListener('enterFrame', resolve, true);\n          this.requestFrame(i);\n        });  \n      }\n    }\n    \n    console.timeEnd('cache' + this.reqId); */\n    //console.log('cached');\n    /* this.el.innerHTML = '';\n    this.el.append(this.canvas);\n    return; */\n\n    this.requestFrame(0);\n    this.dispatchEvent('ready');\n    this.addEventListener('enterFrame', () => {\n      this.dispatchEvent('firstFrame');\n\n      this.el.appendChild(this.canvas);\n\n      //console.log('enterFrame firstFrame');\n \n      //let lastTime = this.frThen;\n      this.frameListener = () => {\n        if(this.paused) {\n          return;\n        }\n\n        const time = Date.now();\n        //console.log(`enterFrame handle${this.reqId}`, time, (time - lastTime), this.frInterval);\n        /* if(Math.round(time - lastTime + this.frInterval * 0.25) < Math.round(this.frInterval)) {\n          return;\n        } */\n\n        //lastTime = time;\n\n        this.frThen = time + this.frInterval;\n        const canContinue = this.currentMethod();\n        if(!canContinue && !this.loop && this.autoplay) {\n          this.autoplay = false;\n        }\n      };\n\n      this.addEventListener('enterFrame', this.frameListener);\n    }, true);\n  }\n}\n\nclass QueryableWorker extends EventListenerBase<any> {\n  constructor(private worker: Worker, private defaultListener: (data: any) => void = () => {}, onError?: (error: any) => void) {\n    super();\n\n    if(onError) {\n      this.worker.onerror = onError;\n    }\n\n    this.worker.onmessage = (event) => {\n      //return;\n      //console.log('worker onmessage', event.data);\n      if(event.data instanceof Object &&\n        event.data.hasOwnProperty('queryMethodListener') &&\n        event.data.hasOwnProperty('queryMethodArguments')) {\n        /* if(event.data.queryMethodListener === 'frame') {\n          return;\n        } */\n\n        this.dispatchEvent(event.data.queryMethodListener, ...event.data.queryMethodArguments);\n      } else {\n        this.defaultListener.call(this, event.data);\n      }\n    };\n  }\n\n  public postMessage(message: any) {\n    this.worker.postMessage(message);\n  }\n\n  public terminate() {\n    this.worker.terminate();\n  }\n\n  public sendQuery(queryMethod: string, ...args: any[]) {\n    if(isSafari) {\n      this.worker.postMessage({\n        'queryMethod': queryMethod,\n        'queryMethodArguments': args\n      });\n    } else {\n      //const transfer: (ArrayBuffer | OffscreenCanvas)[] = [];\n      const transfer: ArrayBuffer[] = [];\n      args.forEach(arg => {\n        if(arg instanceof ArrayBuffer) {\n          transfer.push(arg);\n        }\n  \n        if(arg.buffer && arg.buffer instanceof ArrayBuffer) {\n          transfer.push(arg.buffer);\n        }\n      });\n  \n      //console.log('transfer', transfer);\n      this.worker.postMessage({\n        'queryMethod': queryMethod,\n        'queryMethodArguments': args\n      }, transfer as PostMessageOptions);\n    }\n  }\n}\n\ntype LottieShape = {\n  c: {\n    k: number[]\n  },\n  ty: 'st' | 'fl',\n  it?: LottieShape[]\n};\nclass LottieLoader {\n  public isWebAssemblySupported = typeof(WebAssembly) !== 'undefined';\n  public loadPromise: Promise<void> = !this.isWebAssemblySupported ? Promise.reject() : undefined;\n  public loaded = false;\n\n  // https://github.com/telegramdesktop/tdesktop/blob/97d8ee75d51874fcb74a9bfadc79f835c82be54a/Telegram/SourceFiles/chat_helpers/stickers_emoji_pack.cpp#L46\n  private static COLORREPLACEMENTS = [\n    [\n      [0xf77e41, 0xcb7b55],\n\t\t\t[0xffb139, 0xf6b689],\n\t\t\t[0xffd140, 0xffcda7],\n\t\t\t[0xffdf79, 0xffdfc5],\n    ],\n\n    [\n      [0xf77e41, 0xa45a38],\n\t\t\t[0xffb139, 0xdf986b],\n\t\t\t[0xffd140, 0xedb183],\n\t\t\t[0xffdf79, 0xf4c3a0],\n    ],\n\n    [\n      [0xf77e41, 0x703a17],\n\t\t\t[0xffb139, 0xab673d],\n\t\t\t[0xffd140, 0xc37f4e],\n\t\t\t[0xffdf79, 0xd89667],\n    ],\n\n    [\n      [0xf77e41, 0x4a2409],\n\t\t\t[0xffb139, 0x7d3e0e],\n\t\t\t[0xffd140, 0x965529],\n\t\t\t[0xffdf79, 0xa96337],\n    ],\n\n    [\n\t\t\t[0xf77e41, 0x200f0a],\n\t\t\t[0xffb139, 0x412924],\n\t\t\t[0xffd140, 0x593d37],\n\t\t\t[0xffdf79, 0x63453f],\n    ]\n  ];\n\n  private workersLimit = 4;\n  private players: {[reqId: number]: RLottiePlayer} = {};\n\n  private workers: QueryableWorker[] = [];\n  private curWorkerNum = 0;\n\n  private log = logger('LOTTIE', LogTypes.Error);\n\n  public getAnimation(element: HTMLElement) {\n    for(const i in this.players) {\n      if(this.players[i].el === element) {\n        return this.players[i];\n      }\n    }\n\n    return null;\n  }\n\n  public setLoop(loop: boolean) {\n    for(const i in this.players) {\n      const player = this.players[i];\n      player.loop = loop;\n      player.autoplay = player._autoplay;\n    }\n  }\n\n  public loadLottieWorkers() {\n    if(this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    return this.loadPromise = new Promise((resolve, reject) => {\n      let remain = this.workersLimit;\n      for(let i = 0; i < this.workersLimit; ++i) {\n        const worker = this.workers[i] = new QueryableWorker(new RLottieWorker());\n\n        worker.addEventListener('ready', () => {\n          this.log('worker #' + i + ' ready');\n\n          worker.addEventListener('frame', this.onFrame);\n          worker.addEventListener('loaded', this.onPlayerLoaded);\n          worker.addEventListener('error', this.onPlayerError);\n\n          --remain;\n          if(!remain) {\n            this.log('workers ready');\n            resolve();\n            this.loaded = true;\n          }\n        });\n      }\n    });\n  }\n\n  private applyReplacements(object: {\n    layers: Array<{shapes: LottieShape[]}>\n  }, toneIndex: number) {\n    const replacements = LottieLoader.COLORREPLACEMENTS[Math.max(toneIndex - 1, 0)];\n\n    const applyTo = (smth: LottieShape) => {\n      const k = smth.c.k;\n      const color = convert(k[2]) | (convert(k[1]) << 8) | (convert(k[0]) << 16);\n\n      const foundReplacement = replacements.find(p => p[0] === color);\n      if(foundReplacement) {\n        k[0] = ((foundReplacement[1] >> 16) & 255) / 255;\n        k[1] = ((foundReplacement[1] >> 8) & 255) / 255;\n        k[2] = (foundReplacement[1] & 255) / 255;\n      }\n\n      //console.log('foundReplacement!', foundReplacement, color.toString(16), k);\n    };\n\n    const checkSmth = (smth: LottieShape) => {\n      switch(smth.ty) {\n        case 'st':\n        case 'fl':\n          applyTo(smth);\n          break;\n      }\n\n      if(smth.hasOwnProperty('it')) {\n        iterateIt(smth.it);\n      }\n    };\n\n    const iterateIt = (it: LottieShape['it']) => {\n      for(const smth of it) {\n        checkSmth(smth);\n      }\n    };\n\n    try {\n      for(const layer of object.layers) {\n        if(!layer.shapes) continue;\n  \n        for(const shape of layer.shapes) {\n          if(!shape.it) {\n            checkSmth(shape);\n            continue;\n          }\n\n          iterateIt(shape.it);\n        }\n      }\n    } catch(err) {\n      this.log.warn('cant apply replacements', err, object, toneIndex);\n    }\n  }\n\n  public loadAnimationFromURL(params: Omit<RLottieOptions, 'animationData'>, url: string): Promise<RLottiePlayer> {\n    if(!this.isWebAssemblySupported) {\n      return this.loadPromise as any;\n    }\n    \n    if(!this.loaded) {\n      this.loadLottieWorkers();\n    }\n    \n    return fetch(url)\n    .then(res => res.arrayBuffer())\n    .then(data => apiManager.gzipUncompress<string>(data, true))\n    /* .then(str => {\n      return new Promise<string>((resolve) => setTimeout(() => resolve(str), 2e3));\n    }) */\n    .then(str => {\n      return this.loadAnimationWorker(Object.assign(params, {animationData: str/* JSON.parse(str) */, needUpscale: true}));\n    });\n  }\n\n  public waitForFirstFrame(player: RLottiePlayer): Promise<void> {\n    return Promise.race([\n      /* new Promise<void>((resolve) => {\n        player.addEventListener('firstFrame', () => {\n          setTimeout(() => resolve(), 1500);\n        }, true);\n      }) */\n      new Promise<void>((resolve) => {\n        player.addEventListener('firstFrame', resolve, true);\n      }),\n      pause(2500)\n    ]);\n  }\n\n  public async loadAnimationWorker(params: RLottieOptions, group = '', toneIndex = -1): Promise<RLottiePlayer> {\n    if(!this.isWebAssemblySupported) {\n      return this.loadPromise as any;\n    }\n    //params.autoplay = true;\n\n    if(toneIndex >= 1 && toneIndex <= 5) {\n      /* params.animationData = copy(params.animationData);\n      this.applyReplacements(params.animationData, toneIndex); */\n\n      const newAnimationData = JSON.parse(params.animationData);\n      this.applyReplacements(newAnimationData, toneIndex);\n      params.animationData = JSON.stringify(newAnimationData);\n    }\n\n    if(!this.loaded) {\n      await this.loadLottieWorkers();\n    }\n\n    if(!params.width || !params.height) {\n      params.width = parseInt(params.container.style.width);\n      params.height = parseInt(params.container.style.height);\n    }\n\n    if(!params.width || !params.height) {\n      throw new Error('No size for sticker!');\n    }\n\n    params.group = group;\n\n    const player = this.initPlayer(params.container, params);\n    animationIntersector.addAnimation(player, group);\n\n    return player;\n  }\n\n  private onPlayerLoaded = (reqId: number, frameCount: number, fps: number) => {\n    const rlPlayer = this.players[reqId];\n    if(!rlPlayer) {\n      this.log.warn('onPlayerLoaded on destroyed player:', reqId, frameCount);\n      return;\n    }\n\n    this.log.debug('onPlayerLoaded');\n    rlPlayer.onLoad(frameCount, fps);\n    //rlPlayer.addListener('firstFrame', () => {\n      //animationIntersector.addAnimation(player, group);\n    //}, true);\n  };\n\n  private onFrame = (reqId: number, frameNo: number, frame: Uint8ClampedArray) => {\n    const rlPlayer = this.players[reqId];\n    if(!rlPlayer) {\n      this.log.warn('onFrame on destroyed player:', reqId, frameNo);\n      return;\n    }\n\n    rlPlayer.clamped = frame;\n    rlPlayer.renderFrame(frame, frameNo);\n  };\n\n  private onPlayerError = (reqId: number, error: Error) => {\n    const rlPlayer = this.players[reqId];\n    if(rlPlayer) {\n      // ! will need refactoring later, this is not the best way to remove the animation\n      const animations = animationIntersector.getAnimations(rlPlayer.el);\n      animations.forEach(animation => {\n        animationIntersector.checkAnimation(animation, true, true);\n      });\n    }\n  };\n\n  public onDestroy(reqId: number) {\n    delete this.players[reqId];\n  }\n\n  public destroyWorkers() {\n    this.workers.forEach((worker, idx) => {\n      worker.terminate();\n      this.log('worker #' + idx + ' terminated');\n    });\n\n    this.log('workers destroyed');\n    this.workers.length = 0;\n  }\n\n  private initPlayer(el: HTMLElement, options: RLottieOptions) {\n    const rlPlayer = new RLottiePlayer({\n      el, \n      worker: this.workers[this.curWorkerNum++],\n      options\n    });\n\n    this.players[rlPlayer.reqId] = rlPlayer;\n    if(this.curWorkerNum >= this.workers.length) {\n      this.curWorkerNum = 0;\n    }\n\n    rlPlayer.loadFromData(options.animationData);\n\n    return rlPlayer;\n  }\n}\n\nconst lottieLoader = new LottieLoader();\nMOUNT_CLASS_TO.lottieLoader = lottieLoader;\nexport default lottieLoader;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Page from \"./page\";\nimport { whichChild } from \"../helpers/dom\";\nimport lottieLoader from \"../lib/lottieLoader\";\nimport { horizontalMenu } from \"../components/horizontalMenu\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\n\nclass PagesManager {\n  private pageId = -1;\n  private page: Page;\n\n  private selectTab: ReturnType<typeof horizontalMenu>;\n  public pagesDiv: HTMLDivElement;\n  public scrollableDiv: HTMLElement;\n\n  constructor() {\n    this.pagesDiv = document.getElementById('auth-pages') as HTMLDivElement;\n    this.scrollableDiv = this.pagesDiv.querySelector('.scrollable') as HTMLElement;\n    this.selectTab = horizontalMenu(null, this.scrollableDiv.querySelector('.tabs-container') as HTMLDivElement, null, () => {\n      if(this.page?.onShown) {\n        this.page.onShown();\n      }\n    });\n  }\n\n  public setPage(page: Page) {\n    if(page.isAuthPage) {\n      this.pagesDiv.style.display = '';\n\n      let id = whichChild(page.pageEl);\n      if(this.pageId === id) return;\n\n      this.selectTab(id);\n\n      if(this.pageId !== -1 && id > 1) {\n        lottieLoader.loadLottieWorkers();\n      }\n\n\n\n      this.pageId = id;\n\n      if(this.scrollableDiv) {\n        fastSmoothScroll(this.scrollableDiv, this.scrollableDiv.firstElementChild as HTMLElement, 'start');\n      }\n    } else {\n      this.pagesDiv.style.display = 'none';\n      page.pageEl.style.display = '';\n\n      this.pageId = -1;\n    }\n\n    this.page = page;\n  }\n}\n\nconst pagesManager = new PagesManager();\nMOUNT_CLASS_TO.pagesManager = pagesManager;\nexport default pagesManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pagesManager from \"./pagesManager\";\n\nexport default class Page {\n  public pageEl: HTMLDivElement;\n  private installed = false;\n\n  constructor(className: string, public isAuthPage: boolean, private onFirstMount?: (...args: any[]) => Promise<any> | void, private onMount?: (...args: any[]) => void, public onShown?: () => void) {\n    this.pageEl = document.body.querySelector('.' + className) as HTMLDivElement;\n  }\n\n  public async mount(...args: any[]) {\n    //this.pageEl.style.display = '';\n\n    if(this.onMount) {\n      this.onMount(...args);\n    }\n\n    if(!this.installed) {\n      if(this.onFirstMount) {\n        try {\n          const res = this.onFirstMount(...args);\n          if(res instanceof Promise) {\n            await res;\n          }\n        } catch(err) {\n          console.error('PAGE MOUNT ERROR:', err);\n        }\n      }\n      \n      this.installed = true;\n    }\n\n    pagesManager.setPage(this);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's useHeavyAnimationCheck.ts, patched\n\n//import { useEffect } from '../lib/teact/teact';\nimport { AnyToVoidFunction } from '../types';\nimport ListenerSetter from '../helpers/listenerSetter';\nimport { CancellablePromise, deferredPromise } from '../helpers/cancellablePromise';\nimport { pause } from '../helpers/schedulers';\nimport rootScope from '../lib/rootScope';\nimport DEBUG from '../config/debug';\n\nconst ANIMATION_START_EVENT = 'event-heavy-animation-start';\nconst ANIMATION_END_EVENT = 'event-heavy-animation-end';\n\nlet isAnimating = false;\nlet heavyAnimationPromise: CancellablePromise<void> = Promise.resolve();\nlet promisesInQueue = 0;\n\nconst log = console.log.bind(console.log, '[HEAVY-ANIMATION]:');\n\nexport const dispatchHeavyAnimationEvent = (promise: Promise<any>, timeout?: number) => {\n  if(!isAnimating) {\n    heavyAnimationPromise = deferredPromise<void>();\n    rootScope.broadcast(ANIMATION_START_EVENT);\n    isAnimating = true;\n    DEBUG && log('start');\n  }\n  \n  ++promisesInQueue;\n  DEBUG && log('attach promise, length:', promisesInQueue, timeout);\n\n  const promises = [\n    timeout !== undefined ? pause(timeout) : undefined,\n    promise.finally(() => {})\n  ].filter(Boolean);\n\n  const perf = performance.now();\n  Promise.race(promises).then(() => {\n    --promisesInQueue;\n    DEBUG && log('promise end, length:', promisesInQueue, performance.now() - perf);\n    if(!promisesInQueue) {\n      isAnimating = false;\n      promisesInQueue = 0;\n      rootScope.broadcast(ANIMATION_END_EVENT);\n      heavyAnimationPromise.resolve();\n\n      DEBUG && log('end');\n    }\n  });\n\n  return heavyAnimationPromise;\n};\n\nexport const getHeavyAnimationPromise = () => heavyAnimationPromise;\n\nexport default (\n  handleAnimationStart: AnyToVoidFunction,\n  handleAnimationEnd: AnyToVoidFunction,\n  listenerSetter?: ListenerSetter\n) => {\n  //useEffect(() => {\n    if(isAnimating) {\n      handleAnimationStart();\n    }\n\n    const add = listenerSetter ? listenerSetter.add.bind(listenerSetter, rootScope) : rootScope.addEventListener.bind(rootScope);\n    const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, rootScope) : rootScope.removeEventListener.bind(rootScope);\n    add(ANIMATION_START_EVENT, handleAnimationStart);\n    add(ANIMATION_END_EVENT, handleAnimationEnd);\n\n    return () => {\n      remove(ANIMATION_END_EVENT, handleAnimationEnd);\n      remove(ANIMATION_START_EVENT, handleAnimationStart);\n    };\n  //}, [handleAnimationEnd, handleAnimationStart]);\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { isInDOM } from \"../helpers/dom\";\nimport { RLottiePlayer } from \"../lib/lottieLoader\";\nimport rootScope from \"../lib/rootScope\";\nimport { isSafari } from \"../helpers/userAgent\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\n\nexport interface AnimationItem {\n  el: HTMLElement,\n  group: string,\n  animation: RLottiePlayer | HTMLVideoElement\n};\n\nexport class AnimationIntersector {\n  public observer: IntersectionObserver;\n  private visible: Set<AnimationItem> = new Set();\n\n  private byGroups: {[group: string]: AnimationItem[]} = {};\n  private lockedGroups: {[group: string]: true} = {};\n  private onlyOnePlayableGroup: string = '';\n  \n  private intersectionLockedGroups: {[group: string]: true} = {};\n  private videosLocked = false;\n\n  constructor() {\n    this.observer = new IntersectionObserver((entries) => {\n      if(rootScope.idle.isIDLE) return;\n\n      for(const entry of entries) {\n        const target = entry.target;\n\n        for(const group in this.byGroups) {\n          if(this.intersectionLockedGroups[group]) {\n            continue;\n          }\n\n          const player = this.byGroups[group].find(p => p.el === target);\n          if(player) {\n            if(entry.isIntersecting) {\n              this.visible.add(player);\n              this.checkAnimation(player, false);\n            } else {\n              this.visible.delete(player);\n              this.checkAnimation(player, true);\n\n              if(player.animation instanceof RLottiePlayer/*  && player.animation.cachingDelta === 2 */) {\n                //console.warn('will clear cache', player);\n                player.animation.clearCache();\n              }\n            }\n\n            break;\n          }\n        }\n      }\n    });\n\n    rootScope.on('audio_play', ({doc}) => {\n      if(doc.type === 'round') {\n        this.videosLocked = true;\n        this.checkAnimations();\n      }\n    });\n\n    rootScope.on('audio_pause', () => {\n      if(this.videosLocked) {\n        this.videosLocked = false;\n        this.checkAnimations();\n      }\n    });\n  }\n\n  public getAnimations(element: HTMLElement) {\n    const found: AnimationItem[] = [];\n    for(const group in this.byGroups) {\n      for(const player of this.byGroups[group]) {\n        if(player.el === element) {\n          found.push(player);\n        }\n      }\n    }\n\n    return found;\n  }\n\n  public removeAnimation(player: AnimationItem) {\n    //console.log('destroy animation');\n    const {el, animation} = player;\n    animation.remove();\n\n    if(animation instanceof HTMLVideoElement && isSafari) {\n      setTimeout(() => { // TODO: очистка по очереди, а не все вместе с этим таймаутом\n        animation.src = '';\n        animation.load();\n      }, 1e3);\n    }\n\n    for(const group in this.byGroups) {\n      this.byGroups[group].findAndSplice(p => p === player);\n    }\n  \n    this.observer.unobserve(el);\n    this.visible.delete(player);\n  }\n\n  public addAnimation(animation: RLottiePlayer | HTMLVideoElement, group = '') {\n    const player = {\n      el: animation instanceof RLottiePlayer ? animation.el : animation, \n      animation: animation, \n      group\n    };\n\n    if(animation instanceof RLottiePlayer) {\n      if(!rootScope.settings.stickers.loop && animation.loop) {\n        animation.loop = rootScope.settings.stickers.loop;\n      }\n    }\n\n    (this.byGroups[group] ?? (this.byGroups[group] = [])).push(player);\n    this.observer.observe(player.el);\n  }\n\n  public checkAnimations(blurred?: boolean, group?: string, destroy = false) {\n    if(rootScope.idle.isIDLE) return;\n    \n    const groups = group /* && false */ ? [group] : Object.keys(this.byGroups);\n\n    if(group && !this.byGroups[group]) {\n      //console.warn('no animation group:', group);\n      this.byGroups[group] = [];\n      return;\n    }\n\n    for(const group of groups) {\n      const animations = this.byGroups[group];\n\n      animations.forEach(player => {\n        this.checkAnimation(player, blurred, destroy);\n      });\n    }\n  }\n\n  public checkAnimation(player: AnimationItem, blurred = false, destroy = false) {\n    const {el, animation, group} = player;\n    //return;\n    if((destroy || (!isInDOM(el) && !this.lockedGroups[group]))/*  && false */) {\n      this.removeAnimation(player);\n      return;\n    }\n\n    if(blurred || (this.onlyOnePlayableGroup && this.onlyOnePlayableGroup !== group) || (animation instanceof HTMLVideoElement && this.videosLocked)) {\n      if(!animation.paused) {\n        //console.warn('pause animation:', animation);\n        animation.pause();\n      }\n    } else if(animation.paused && \n      this.visible.has(player) && \n      animation.autoplay && \n      (!this.onlyOnePlayableGroup || this.onlyOnePlayableGroup === group)\n    ) {\n      //console.warn('play animation:', animation);\n      animation.play();\n    }\n  }\n\n  public setOnlyOnePlayableGroup(group: string) {\n    this.onlyOnePlayableGroup = group;\n  }\n\n  public lockGroup(group: string) {\n    this.lockedGroups[group] = true;\n  }\n\n  public unlockGroup(group: string) {\n    delete this.lockedGroups[group];\n    this.checkAnimations(undefined, group);\n  }\n\n  public refreshGroup(group: string) {\n    const animations = this.byGroups[group];\n    if(animations && animations.length) {\n      animations.forEach(animation => {\n        this.observer.unobserve(animation.el);\n      });\n\n      window.requestAnimationFrame(() => {\n        animations.forEach(animation => {\n          this.observer.observe(animation.el);\n        });\n      });\n    }\n  }\n\n  public lockIntersectionGroup(group: string) {\n    this.intersectionLockedGroups[group] = true;\n  }\n\n  public unlockIntersectionGroup(group: string) {\n    delete this.intersectionLockedGroups[group];\n    this.refreshGroup(group);\n  }\n}\n\nconst animationIntersector = new AnimationIntersector();\nif(MOUNT_CLASS_TO) {\n  MOUNT_CLASS_TO.animationIntersector = animationIntersector;\n}\nexport default animationIntersector;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's fastSmoothScroll slightly patched\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { fastRaf } from './schedulers';\nimport { animateSingle, cancelAnimationByKey } from './animation';\nimport rootScope from '../lib/rootScope';\nimport { isInDOM } from './dom';\n\nconst MAX_DISTANCE = 1500;\nconst MIN_JS_DURATION = 250;\nconst MAX_JS_DURATION = 600;\n\nexport enum FocusDirection {\n  Up,\n  Down,\n  Static,\n};\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition,\n  margin = 0,\n  maxDistance = MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n  axis: 'x' | 'y' = 'y'\n) {\n  //return;\n\n  if(!rootScope.settings.animationsEnabled) {\n    forceDirection = FocusDirection.Static;\n  }\n\n  if(forceDirection === FocusDirection.Static) {\n    forceDuration = 0;\n    return scrollWithJs(container, element, position, margin, forceDuration, axis);\n    /* return Promise.resolve();\n\n    element.scrollIntoView({ block: position });\n\n    cancelAnimationByKey(container);\n    return Promise.resolve(); */\n  }\n\n  if(axis === 'y' && element !== container && isInDOM(element) && container.getBoundingClientRect) {\n    const elementRect = element.getBoundingClientRect();\n    const containerRect = container.getBoundingClientRect();\n  \n    const offsetTop = elementRect.top - containerRect.top;\n    if(forceDirection === undefined) {\n      if(offsetTop < -maxDistance) {\n        container.scrollTop += (offsetTop + maxDistance);\n      } else if(offsetTop > maxDistance) {\n        container.scrollTop += (offsetTop - maxDistance);\n      }\n    } else if(forceDirection === FocusDirection.Up) { // * not tested yet\n      container.scrollTop = offsetTop + container.scrollTop + maxDistance;\n    } else if(forceDirection === FocusDirection.Down) { // * not tested yet\n      container.scrollTop = Math.max(0, offsetTop + container.scrollTop - maxDistance);\n    }\n    /* const { offsetTop } = element;\n\n    if(forceDirection === undefined) {\n      const offset = offsetTop - container.scrollTop;\n\n      if(offset < -maxDistance) {\n        container.scrollTop += (offset + maxDistance);\n      } else if(offset > maxDistance) {\n        container.scrollTop += (offset - maxDistance);\n      }\n    } else if(forceDirection === FocusDirection.Up) {\n      container.scrollTop = offsetTop + maxDistance;\n    } else if(forceDirection === FocusDirection.Down) {\n      container.scrollTop = Math.max(0, offsetTop - maxDistance);\n    } */\n  }\n\n  const promise = new Promise((resolve) => {\n    fastRaf(() => {\n      scrollWithJs(container, element, position, margin, forceDuration, axis)\n      .then(resolve);\n    });\n  });\n\n  return axis === 'y' ? dispatchHeavyAnimationEvent(promise) : promise;\n}\n\nfunction scrollWithJs(\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number, axis: 'x' | 'y' = 'y'\n) {\n  if(!isInDOM(element)) {\n    cancelAnimationByKey(container);\n    return Promise.resolve();\n  }\n  \n  const rectStartKey = axis === 'y' ? 'top' : 'left';\n  const rectEndKey = axis === 'y' ? 'bottom' : 'right';\n  const sizeKey = axis === 'y' ? 'height' : 'width';\n  const scrollSizeKey = axis === 'y' ? 'scrollHeight' : 'scrollWidth';\n  const scrollPositionKey = axis === 'y' ? 'scrollTop' : 'scrollLeft';\n\n  //const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const elementRect = element.getBoundingClientRect();\n  const containerRect = container.getBoundingClientRect ? container.getBoundingClientRect() : document.body.getBoundingClientRect();\n\n  //const transformable = container.firstElementChild as HTMLElement;\n\n  const elementPosition = elementRect[rectStartKey] - containerRect[rectStartKey];\n  const elementSize = element[scrollSizeKey]; // margin is exclusive in DOMRect\n\n  const containerSize = containerRect[sizeKey];\n\n  const scrollPosition = container[scrollPositionKey];\n  const scrollSize = container[scrollSizeKey];\n  /* const elementPosition = element.offsetTop;\n  const elementSize = element.offsetHeight;\n\n  const scrollPosition = container[scrollPositionKey];\n  const scrollSize = container[scrollSizeKey];\n  const containerSize = container.offsetHeight; */\n\n  let path!: number;\n\n  switch(position) {\n    case 'start':\n      path = elementPosition - margin;\n      break;\n    case 'end':\n      path = elementRect[rectEndKey] + (elementSize - elementRect[sizeKey]) - containerRect[rectEndKey];\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n      path = elementSize < containerSize\n        ? (elementPosition + elementSize / 2) - (containerSize / 2)\n        : elementPosition - margin;\n      break;\n  }\n  /* switch (position) {\n    case 'start':\n      path = (elementPosition - margin) - scrollPosition;\n      break;\n    case 'end':\n      path = (elementPosition + elementSize + margin) - (scrollPosition + containerSize);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n      path = elementSize < containerSize\n        ? (elementPosition + elementSize / 2) - (scrollPosition + containerSize / 2)\n        : (elementPosition - margin) - scrollPosition;\n      break;\n  } */\n\n  // console.log('scrollWithJs: will scroll path:', path, element);\n\n  /* let existsTransform = 0;\n  const currentTransform = transformable.style.transform;\n  if(currentTransform) {\n    existsTransform = parseInt(currentTransform.match(/\\((.+?), (.+?), .+\\)/)[2]);\n    //path += existsTransform;\n  } */\n\n  if(path < 0) {\n    const remainingPath = -scrollPosition;\n    path = Math.max(path, remainingPath);\n  } else if(path > 0) {\n    const remainingPath = scrollSize - (scrollPosition + containerSize);\n    path = Math.min(path, remainingPath);\n  }\n\n  const target = container[scrollPositionKey] + path;\n  const duration = forceDuration ?? (\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\n  );\n  const startAt = Date.now();\n\n  /* transformable.classList.add('no-transition');\n\n  const tickTransform = () => {\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\n    const currentPath = path * transition(t);\n\n    transformable.style.transform = `translate3d(0, ${-currentPath}px, 0)`;\n    container.dataset.translate = '' + -currentPath;\n\n    const willContinue = t < 1;\n    if(!willContinue) {\n      fastRaf(() => {\n        delete container.dataset.transform;\n        container.dataset.transform = '';\n        transformable.style.transform = '';\n        void transformable.offsetLeft; // reflow\n        transformable.classList.remove('no-transition');\n        void transformable.offsetLeft; // reflow\n        container[scrollPositionKey] = Math.round(target);\n      });\n    }\n\n    return willContinue;\n  };\n  \n  return animateSingle(tickTransform, container); */\n\n  /* return new Promise((resolve) => {\n    fastRaf(() => {\n      transformable.style.transform = '';\n      transformable.style.transition = '';\n\n      setTimeout(resolve, duration);\n    });\n  });\n\n  const transformableHeight = transformable.scrollHeight;\n  //transformable.style.minHeight = `${transformableHeight}px`;\n  */\n\n  const tick = () => {\n    const t = duration ? Math.min((Date.now() - startAt) / duration, 1) : 1;\n\n    const currentPath = path * (1 - transition(t));\n    container[scrollPositionKey] = Math.round(target - currentPath);\n    \n    return t < 1;\n  };\n\n  if(!duration || !path) {\n    cancelAnimationByKey(container);\n    tick();\n    return Promise.resolve();\n  }\n\n  /* return new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  }).then(() => {\n    transformable.classList.add('no-transition');\n    void transformable.offsetLeft; // reflow\n    transformable.style.transform = '';\n    transformable.style.transition = '';\n    void transformable.offsetLeft; // reflow\n    transformable.classList.remove('no-transition');\n    void transformable.offsetLeft; // reflow\n    fastRaf(() => {\n      \n      container[scrollPositionKey] = Math.round(target);\n      //transformable.style.minHeight = ``;\n    });\n    \n  }); */\n\n  return animateSingle(tick, container);\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport function numberThousandSplitter(x: number, joiner = ' ') {\n  const parts = x.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, joiner);\n  return parts.join(\".\");\n}\n\nexport function formatBytes(bytes: number, decimals = 2) {\n  if(bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\nexport function formatNumber(bytes: number, decimals = 2) {\n  if(bytes === 0) return '0';\n\n  const k = 1000;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['', 'K', 'M', 'B', 'T'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + sizes[i];\n}\n\nexport function clamp(v: number, min: number, max: number): number {\n  return v < min ? min : ((v > max) ? max : v);\n}\n\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { whichChild } from \"../helpers/dom\";\nimport rootScope from \"../lib/rootScope\";\nimport { CancellablePromise, deferredPromise } from \"../helpers/cancellablePromise\";\nimport { dispatchHeavyAnimationEvent } from \"../hooks/useHeavyAnimationCheck\";\n\nfunction slideNavigation(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\n  const width = prevTabContent.getBoundingClientRect().width;\n  const elements = [tabContent, prevTabContent];\n  if(toRight) elements.reverse();\n  elements[0].style.filter = `brightness(80%)`;\n  elements[0].style.transform = `translate3d(${-width * .25}px, 0, 0)`;\n  elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\n  \n  tabContent.classList.add('active');\n  void tabContent.offsetWidth; // reflow\n\n  tabContent.style.transform = '';\n  tabContent.style.filter = '';\n\n  return () => {\n    prevTabContent.style.transform = prevTabContent.style.filter = '';\n  };\n}\n\nfunction slideTabs(tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) {\n  //window.requestAnimationFrame(() => {\n    const width = prevTabContent.getBoundingClientRect().width;\n    /* tabContent.style.setProperty('--width', width + 'px');\n    prevTabContent.style.setProperty('--width', width + 'px');\n\n    tabContent.classList.add('active'); */\n    //void tabContent.offsetWidth; // reflow\n    const elements = [tabContent, prevTabContent];\n    if(toRight) elements.reverse();\n    elements[0].style.transform = `translate3d(${-width}px, 0, 0)`;\n    elements[1].style.transform = `translate3d(${width}px, 0, 0)`;\n  \n    tabContent.classList.add('active');\n    void tabContent.offsetWidth; // reflow\n  \n    tabContent.style.transform = '';\n  //});\n  \n  return () => {\n    prevTabContent.style.transform = '';\n  };\n}\n\nexport const TransitionSlider = (content: HTMLElement, type: 'tabs' | 'navigation' | 'zoom-fade' | 'slide-fade' | 'none'/*  | 'counter' */, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\n  let animationFunction: TransitionFunction = null;\n\n  switch(type) {\n    case 'tabs':\n      animationFunction = slideTabs;\n      break;\n    case 'navigation':\n      animationFunction = slideNavigation;\n      break;\n    /* default:\n      break; */\n  }\n\n  content.dataset.animation = type;\n  \n  return Transition(content, animationFunction, transitionTime, onTransitionEnd, isHeavy);\n};\n\ntype TransitionFunction = (tabContent: HTMLElement, prevTabContent: HTMLElement, toRight: boolean) => void | (() => void);\n\nconst Transition = (content: HTMLElement, animationFunction: TransitionFunction, transitionTime: number, onTransitionEnd?: (id: number) => void, isHeavy = true) => {\n  const onTransitionEndCallbacks: Map<HTMLElement, Function> = new Map();\n  let animationDeferred: CancellablePromise<void>;\n  let animationStarted = 0;\n  let from: HTMLElement = null;\n\n  // TODO: check for transition type (transform, etc) using by animationFunction\n  content.addEventListener(animationFunction ? 'transitionend' : 'animationend', (e) => {\n    if((e.target as HTMLElement).parentElement !== content) {\n      return;\n    }\n    \n    //console.log('Transition: transitionend', /* content, */ e, selectTab.prevId, performance.now() - animationStarted);\n\n    const callback = onTransitionEndCallbacks.get(e.target as HTMLElement);\n    if(callback) callback();\n\n    if(e.target !== from) {\n      return;\n    }\n\n    if(!animationDeferred && isHeavy) return;\n\n    if(animationDeferred) {\n      animationDeferred.resolve();\n      animationDeferred = undefined;\n    }\n\n    if(onTransitionEnd) {\n      onTransitionEnd(selectTab.prevId());\n    }\n\n    content.classList.remove('animating', 'backwards', 'disable-hover');\n  });\n\n  function selectTab(id: number | HTMLElement, animate = true) {\n    const self = selectTab;\n\n    if(id instanceof HTMLElement) {\n      id = whichChild(id);\n    }\n    \n    const prevId = self.prevId();\n    if(id === prevId) return false;\n\n    //console.log('selectTab id:', id);\n\n    const _from = from;\n    const to = content.children[id] as HTMLElement;\n\n    if(!rootScope.settings.animationsEnabled || prevId === -1) {\n      animate = false;\n    }\n\n    if(!animate) {\n      if(_from) _from.classList.remove('active', 'to', 'from');  \n      if(to) {\n        to.classList.remove('to', 'from');\n        to.classList.add('active');\n      }\n\n      content.classList.remove('animating', 'backwards', 'disable-hover');\n\n      from = to;\n\n      if(onTransitionEnd) onTransitionEnd(id);\n      return;\n    }\n\n    if(from) {\n      from.classList.remove('to');\n      from.classList.add('from');\n    }\n\n    content.classList.add('animating', 'disable-hover');\n    const toRight = prevId < id;\n    content.classList.toggle('backwards', !toRight);\n\n    let onTransitionEndCallback: ReturnType<TransitionFunction>;\n    if(!to) {\n      //prevTabContent.classList.remove('active');\n    } else {\n      if(animationFunction) {\n        onTransitionEndCallback = animationFunction(to, from, toRight);\n      } else {\n        to.classList.add('active');\n      }\n\n      to.classList.remove('from');\n      to.classList.add('to');\n    }\n    \n    if(to) {\n      onTransitionEndCallbacks.set(to, () => {\n        to.classList.remove('to');\n        onTransitionEndCallbacks.delete(to);\n      });\n    }\n\n    if(_from/*  && false */) {\n      const callback = () => {\n        _from.classList.remove('active', 'from');\n\n        if(onTransitionEndCallback) {\n          onTransitionEndCallback();\n        }\n\n        onTransitionEndCallbacks.delete(_from);\n      };\n\n      if(to) {\n        onTransitionEndCallbacks.set(_from, callback);\n      } else {\n        const timeout = window.setTimeout(callback, transitionTime);\n        onTransitionEndCallbacks.set(_from, () => {\n          clearTimeout(timeout);\n        });\n      }\n\n      if(isHeavy) {\n        if(!animationDeferred) {\n          animationDeferred = deferredPromise<void>();\n          animationStarted = performance.now();\n        }\n  \n        dispatchHeavyAnimationEvent(animationDeferred, transitionTime * 2);\n      }\n    }\n    \n    from = to;\n  }\n\n  //selectTab.prevId = -1;\n  selectTab.prevId = () => from ? whichChild(from) : -1;\n  \n  return selectTab;\n};\n\nexport default Transition;","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { whichChild } from \"../helpers/dom\";\nimport { TransitionSlider } from \"./transition\";\nimport { ScrollableX } from \"./scrollable\";\nimport rootScope from \"../lib/rootScope\";\nimport { fastRaf } from \"../helpers/schedulers\";\nimport { FocusDirection } from \"../helpers/fastSmoothScroll\";\nimport findUpAsChild from \"../helpers/dom/findUpAsChild\";\n\nexport function horizontalMenu(tabs: HTMLElement, content: HTMLElement, onClick?: (id: number, tabContent: HTMLDivElement, animate: boolean) => void | boolean, onTransitionEnd?: () => void, transitionTime = 250, scrollableX?: ScrollableX) {\n  const selectTab = TransitionSlider(content, tabs || content.dataset.animation === 'tabs' ? 'tabs' : 'navigation', transitionTime, onTransitionEnd);\n\n  if(tabs) {\n    const proxy = new Proxy(selectTab, {\n      apply: (target, that, args) => {\n        const id = +args[0];\n        const animate = args[1] !== undefined ? args[1] : true;\n  \n        const el = (tabs.querySelector(`[data-tab=\"${id}\"]`) || tabs.children[id]) as HTMLElement;\n        selectTarget(el, id, animate);\n      }\n    });\n\n    const selectTarget = (target: HTMLElement, id: number, animate = true) => {\n      const tabContent = content.children[id] as HTMLDivElement;\n\n      if(onClick) {\n        const canChange = onClick(id, tabContent, animate);\n        if(canChange !== undefined && !canChange) {\n          return;\n        }\n      }\n\n      if(scrollableX) {\n        scrollableX.scrollIntoViewNew(target.parentElement.children[id] as HTMLElement, 'center', undefined, undefined, animate ? undefined : FocusDirection.Static, transitionTime, 'x');\n      }\n\n      if(!rootScope.settings.animationsEnabled) {\n        animate = false;\n      }\n\n      const prevId = selectTab.prevId();\n      if(target.classList.contains('active') || id === prevId) {\n        return false;\n      }\n      \n      const prev = tabs.querySelector(tagName.toLowerCase() + '.active') as HTMLElement;\n\n      fastRaf(() => {\n        prev && prev.classList.remove('active');\n      });\n      \n      // stripe from ZINCHUK\n      if(useStripe && prevId !== -1 && animate) {\n        fastRaf(() => {\n          const indicator = target.querySelector('i')!;\n          const currentIndicator = target.parentElement.children[prevId].querySelector('i')!;\n    \n          currentIndicator.classList.remove('animate');\n          indicator.classList.remove('animate');\n    \n          // We move and resize our indicator so it repeats the position and size of the previous one.\n          const shiftLeft = currentIndicator.parentElement.parentElement.offsetLeft - indicator.parentElement.parentElement.offsetLeft;\n          const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n          indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n  \n          //console.log(`translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`);\n    \n          requestAnimationFrame(() => {\n            // Now we remove the transform to let it animate to its own position and size.\n            indicator.classList.add('animate');\n            indicator.style.transform = 'none';\n          });\n        });\n      }\n      // stripe END\n\n      fastRaf(() => {\n        target.classList.add('active');\n      });\n      \n      selectTab(id, animate);\n    };\n\n    const useStripe = !tabs.classList.contains('no-stripe');\n\n    //const tagName = tabs.classList.contains('menu-horizontal-div') ? 'BUTTON' : 'LI';\n    const tagName = tabs.firstElementChild.tagName;\n    tabs.addEventListener('click', function(e) {\n      let target = e.target as HTMLElement;\n      \n      target = findUpAsChild(target, tabs);\n      \n      //console.log('tabs click:', target);\n      \n      if(!target) return false;\n\n      let id: number;\n      if(target.dataset.tab) {\n        id = +target.dataset.tab;\n        if(id === -1) {\n          return false;\n        }\n      } else {\n        id = whichChild(target);\n      }\n\n      selectTarget(target, id);\n    });\n\n    return proxy;\n  }\n  \n  return selectTab;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function findUpAsChild(el: any, parent: any) {\n  if(el.parentElement === parent) return el;\n  \n  while(el.parentElement) {\n    el = el.parentElement;\n    if(el.parentElement === parent) {\n      return el;\n    }\n  }\n\n  return null;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// * Jolly Cobra's animation.ts\n\nimport { fastRaf } from './schedulers';\nimport { CancellablePromise, deferredPromise } from './cancellablePromise';\n\ninterface AnimationInstance {\n  isCancelled: boolean;\n  deferred: CancellablePromise<void>\n}\n\ntype AnimationInstanceKey = any;\nconst instances: Map<AnimationInstanceKey, AnimationInstance> = new Map();\n\nexport function createAnimationInstance(key: AnimationInstanceKey) {\n  cancelAnimationByKey(key);\n\n  const instance: AnimationInstance = {\n    isCancelled: false, \n    deferred: deferredPromise<void>()\n  };\n\n  instances.set(key, instance);\n  instance.deferred.then(() => {\n    instances.delete(key);\n  });\n\n  return instance;\n}\n\nexport function getAnimationInstance(key: AnimationInstanceKey) {\n  return instances.get(key);\n}\n\nexport function cancelAnimationByKey(key: AnimationInstanceKey) {\n  const instance = getAnimationInstance(key);\n  if(instance) {\n    instance.isCancelled = true;\n    instance.deferred.resolve();\n  }\n}\n\nexport function animateSingle(tick: Function, key: AnimationInstanceKey, instance?: AnimationInstance) {\n  if(!instance) {\n    instance = createAnimationInstance(key);\n  }\n\n  fastRaf(() => {\n    if(instance.isCancelled) {\n      return;\n    }\n    \n    if(tick()) {\n      animateSingle(tick, key, instance);\n    } else {\n      instance.deferred.resolve();\n    }\n  });\n\n  return instance.deferred;\n}\n\nexport function animate(tick: Function) {\n  fastRaf(() => {\n    if(tick()) {\n      animate(tick);\n    }\n  });\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ed7b1cf88050e94a696a.worker.js\");\n};"],"sourceRoot":""}