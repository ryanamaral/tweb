{"version":3,"sources":["webpack:///./src/lib/mtproto/mtproto.worker.ts","webpack:///./src/lib/webp/webp.worker.ts","webpack:///./src/lib/mtproto/transports/websocket.ts","webpack:///./src/lib/mtproto/mtprotoworker.ts","webpack:///./src/lib/crypto/crypto_methods.ts","webpack:///./src/helpers/string.ts","webpack:///./src/helpers/bytes.ts","webpack:///./src/lib/langPack.ts","webpack:///./src/lib/webp/webpWorkerController.ts"],"names":["module","exports","Worker","dcId","url","logSuffix","super","debug","handleOpen","this","log","dispatchEvent","handleError","e","error","close","handleClose","removeListeners","handleMessage","event","data","byteLength","send","body","length","ws","logTypes","Error","Log","Debug","logger","connect","removeEventListener","undefined","WebSocket","binaryType","addEventListener","err","apiManagerProxy","bytes","performTaskWorker","buffer","salt","iterations","keyBytes","ivBytes","encryptedBytes","then","publicKey","x","y","m","toString","password","state","isNew","afterMessageIdTemp","taskId","awaiting","pending","updatesProcessor","hashes","apiPromisesSingle","apiPromisesCacheable","isSWRegistered","sockets","Map","taskListeners","onWorkerMessage","task","callback","type","update","progress","rootScope","broadcast","hasOwnProperty","finalizeTask","result","registerServiceWorker","addTaskListener","deleteDatabase","finally","location","reload","payload","webpWorkerController","postMessage","socketTask","id","get","socket","onOpen","onClose","onMessage","delete","set","registerWorker","navigator","worker","serviceWorker","register","scope","registration","installing","waiting","active","onServiceWorkerFail","warn","releasePending","controller","bind","isWebpSupported","name","onWorkerFirstMessage","once","deferred","taskName","reject","resolve","args","Promise","params","push","forEach","method","options","o","prepareTempMessageId","messageId","invokeApi","queryJSON","JSON","stringify","cached","hash","_","includes","q","cache","item","override","fulfilled","promise","timeout","clearTimeout","cacheSeconds","window","setTimeout","timestamp","Date","now","verify","queueId","userAuth","dc_id","fileName","enabled","limitSymbols","str","limitFrom","trim","slice","escapeRegExp","replace","encodeEntities","value","charCodeAt","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","out","cut","end","part","_arrayIndex","lastIndex","index","indexOf","partLength","convertInputKeyToKey","inputKey","toLowerCase","convertKeyToInputKey","key","toUpperCase","capitalizeFirstLetter","string","charAt","bytesToHex","arr","i","join","bytesFromHex","hexString","len","start","parseInt","substr","bytesToBase64","mod3","nLen","nUint24","nIdx","String","fromCharCode","uint6ToBase64","nUint6","bytesCmp","bytes1","bytes2","convertToArrayBuffer","ArrayBuffer","BYTES_PER_ELEMENT","Uint8Array","bufferConcats","b","tmp","lastLength","langPack","I18n","pluralRules","cacheLangPackPromise","loadLocalLangPack","defaultCode","langPackCode","lastRequestedLangCode","all","lang","langSign","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","version","local","loadLangPack","langCode","requestedServerLanguage","invokeApiCacheable","lang_pack","polyfillPromise","pushTo","v","getLangPack","_langPack","__langPack","___langPack","l","concat","appVersion","langPackVersion","applyLangPack","Intl","PluralRules","clear","Array","from","document","querySelectorAll","element","instance","weakMap","superFormatter","input","indexHolder","match","p1","p2","p3","offset","createElement","append","format","plain","select","regExp","getCacheLangPack","getStrings","keys","_Intl","Object","assign","WeakMap","IntlElementBase","property","classList","add","IntlElement","textContent","formatted","dataset","IntlDateElement","dateTimeFormat","DateTimeFormat","date","i18n","i18n_","_i18n","elements","useLast","delimiterKey","convertPromises","init","isWebpSupportedCache","toDataURL","startsWith","convertPromise"],"mappings":"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","file":"2.fa4c18b2f002ddf1e4bc.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"323bb2e5fae768a9248a.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ff7d5ff35b6de9888629.worker.js\");\n};","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { logger, LogTypes } from '../../logger';\r\nimport Modes from '../../../config/modes';\r\nimport EventListenerBase from '../../../helpers/eventListenerBase';\r\nimport { MTConnection } from './transport';\r\n\r\nexport default class Socket extends EventListenerBase<{\r\n  open: () => void,\r\n  message: (buffer: ArrayBuffer) => any,\r\n  close: () => void,\r\n}> implements MTConnection {\r\n  private ws: WebSocket;\r\n  private log: ReturnType<typeof logger>;\r\n  private debug = Modes.debug && false;\r\n\r\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\r\n    super();\r\n\r\n    let logTypes = LogTypes.Error | LogTypes.Log;\r\n    if(this.debug) logTypes |= LogTypes.Debug;\r\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\r\n    this.log('constructor');\r\n    this.connect();\r\n\r\n    return this;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.ws.removeEventListener('open', this.handleOpen);\r\n    this.ws.removeEventListener('close', this.handleClose);\r\n    this.ws.removeEventListener('error', this.handleError);\r\n    this.ws.removeEventListener('message', this.handleMessage);\r\n    this.ws = undefined;\r\n  }\r\n  \r\n  private connect() {\r\n    this.ws = new WebSocket(this.url, 'binary');\r\n    this.ws.binaryType = 'arraybuffer';\r\n    this.ws.addEventListener('open', this.handleOpen);\r\n    this.ws.addEventListener('close', this.handleClose);\r\n    this.ws.addEventListener('error', this.handleError);\r\n    this.ws.addEventListener('message', this.handleMessage);\r\n  }\r\n\r\n  public close() {\r\n    if(!this.ws) {\r\n      return;\r\n    }\r\n\r\n    this.log.error('close execution');\r\n\r\n    try {\r\n      this.ws.close();\r\n    } catch(err) {\r\n\r\n    }\r\n    this.handleClose();\r\n  }\r\n  \r\n  private handleOpen = () => {\r\n    this.log('opened');\r\n\r\n    this.debug && this.log.debug('sending init packet');\r\n    this.dispatchEvent('open');\r\n  };\r\n\r\n  private handleError = (e: Event) => {\r\n    this.log.error('handleError', e);\r\n    this.close();\r\n  };\r\n\r\n  private handleClose = () => {\r\n    this.log('closed'/* , event, this.pending, this.ws.bufferedAmount */);\r\n\r\n    this.removeListeners();\r\n    this.dispatchEvent('close');\r\n  };\r\n\r\n  private handleMessage = (event: MessageEvent) => {\r\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\r\n\r\n    this.dispatchEvent('message', event.data as ArrayBuffer);\r\n  };\r\n\r\n  public send = (body: Uint8Array) => {\r\n    this.debug && this.log.debug('-> body length to send:', body.length);\r\n\r\n    this.ws.send(body);\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport MTProtoWorker from 'worker-loader!./mtproto.worker';\r\n//import './mtproto.worker';\r\nimport { isObject } from '../../helpers/object';\r\nimport type { MethodDeclMap } from '../../layer';\r\nimport type { InvokeApiOptions } from '../../types';\r\nimport CryptoWorkerMethods from '../crypto/crypto_methods';\r\nimport { logger } from '../logger';\r\nimport rootScope from '../rootScope';\r\nimport webpWorkerController from '../webp/webpWorkerController';\r\nimport type { DownloadOptions } from './apiFileManager';\r\nimport type { ServiceWorkerTask } from './mtproto.service';\r\nimport { UserAuth } from './mtproto_config';\r\nimport type { MTMessage } from './networker';\r\nimport DEBUG, { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport Socket from './transports/websocket';\r\nimport IDBStorage from '../idb';\r\n\r\ntype Task = {\r\n  taskId: number,\r\n  task: string,\r\n  args: any[]\r\n};\r\n\r\ntype HashResult = {\r\n  hash: number,\r\n  result: any\r\n};\r\n\r\ntype HashOptions = {\r\n  [queryJSON: string]: HashResult\r\n};\r\n\r\nexport class ApiManagerProxy extends CryptoWorkerMethods {\r\n  public worker: /* Window */Worker;\r\n  public postMessage: (...args: any[]) => void;\r\n  private afterMessageIdTemp = 0;\r\n\r\n  private taskId = 0;\r\n  private awaiting: {\r\n    [id: number]: {\r\n      resolve: any,\r\n      reject: any,\r\n      taskName: string\r\n    }\r\n  } = {} as any;\r\n  private pending: Array<Task> = [];\r\n\r\n  public updatesProcessor: (obj: any) => void = null;\r\n\r\n  private log = logger('API-PROXY');\r\n\r\n  private hashes: {[method: string]: HashOptions} = {};\r\n\r\n  private apiPromisesSingle: {\r\n    [q: string]: Promise<any>\r\n  } = {};\r\n  private apiPromisesCacheable: {\r\n    [method: string]: {\r\n      [queryJSON: string]: {\r\n        timestamp: number,\r\n        promise: Promise<any>,\r\n        fulfilled: boolean,\r\n        timeout?: number,\r\n        params: any\r\n      }\r\n    }\r\n  } = {};\r\n\r\n  private isSWRegistered = true;\r\n\r\n  private debug = DEBUG /* && false */;\r\n\r\n  private sockets: Map<number, Socket> = new Map();\r\n\r\n  private taskListeners: {[taskType: string]: (task: any) => void} = {};\r\n\r\n  public onServiceWorkerFail: () => void;\r\n\r\n  constructor() {\r\n    super();\r\n    this.log('constructor');\r\n\r\n    this.registerServiceWorker();\r\n\r\n    this.addTaskListener('clear', () => {\r\n      const promise = IDBStorage.deleteDatabase();\r\n      promise.finally(() => {\r\n        location.reload();\r\n      });\r\n    });\r\n\r\n    this.addTaskListener('connectionStatusChange', (task: any) => {\r\n      rootScope.broadcast('connection_status_change', task.payload);\r\n    });\r\n\r\n    this.addTaskListener('convertWebp', (task) => {\r\n      webpWorkerController.postMessage(task);\r\n    });\r\n\r\n    this.addTaskListener('socketProxy', (task) => {\r\n      const socketTask = task.payload;\r\n      const id = socketTask.id;\r\n      //console.log('socketProxy', socketTask, id);\r\n\r\n      if(socketTask.type === 'send') {\r\n        const socket = this.sockets.get(id);\r\n        socket.send(socketTask.payload);\r\n      } else if(socketTask.type === 'close') {\r\n        const socket = this.sockets.get(id);\r\n        socket.close();\r\n      } else if(socketTask.type === 'setup') {\r\n        const socket = new Socket(socketTask.payload.dcId, socketTask.payload.url, socketTask.payload.logSuffix);\r\n        \r\n        const onOpen = () => {\r\n          //console.log('socketProxy onOpen');\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'open',\r\n              id\r\n            }\r\n          });\r\n        };\r\n        const onClose = () => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'close',\r\n              id\r\n            }\r\n          });\r\n\r\n          socket.removeEventListener('open', onOpen);\r\n          socket.removeEventListener('close', onClose);\r\n          socket.removeEventListener('message', onMessage);\r\n          this.sockets.delete(id);\r\n        };\r\n        const onMessage = (buffer: ArrayBuffer) => {\r\n          this.postMessage({\r\n            type: 'socketProxy', \r\n            payload: {\r\n              type: 'message',\r\n              id,\r\n              payload: buffer\r\n            }\r\n          });\r\n        };\r\n\r\n        socket.addEventListener('open', onOpen);\r\n        socket.addEventListener('close', onClose);\r\n        socket.addEventListener('message', onMessage);\r\n        this.sockets.set(id, socket);\r\n      }\r\n    });\r\n\r\n///////////////////////\r\n    this.registerWorker();\r\n//////////////\r\n  }\r\n\r\n  public isServiceWorkerOnline() {\r\n    return this.isSWRegistered;\r\n  }\r\n\r\n  private registerServiceWorker() {\r\n    if(!('serviceWorker' in navigator)) return;\r\n    \r\n    const worker = navigator.serviceWorker;\r\n    worker.register('./sw.js', {scope: './'}).then(registration => {\r\n      this.log('SW registered', registration);\r\n      this.isSWRegistered = true;\r\n\r\n      const sw = registration.installing || registration.waiting || registration.active;\r\n      sw.addEventListener('statechange', (e) => {\r\n        this.log('SW statechange', e);\r\n      });\r\n\r\n////////////////////////\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////\r\n////////////////\r\n    }, (err) => {\r\n      this.isSWRegistered = false;\r\n      this.log.error('SW registration failed!', err);\r\n\r\n      if(this.onServiceWorkerFail) {\r\n        this.onServiceWorkerFail();\r\n      }\r\n    });\r\n\r\n    worker.addEventListener('controllerchange', () => {\r\n      this.log.warn('controllerchange');\r\n      this.releasePending();\r\n\r\n      worker.controller.addEventListener('error', (e) => {\r\n        this.log.error('controller error:', e);\r\n      });\r\n    });\r\n\r\n//////////////////////\r\n/////////////////////////////////////////////////////////////\r\n/////////////\r\n    worker.addEventListener('message', (e) => {\r\n      const task: ServiceWorkerTask = e.data;\r\n      if(!isObject(task)) {\r\n        return;\r\n      }\r\n      \r\n      this.postMessage(task);\r\n    });\r\n//////////////\r\n\r\n    worker.addEventListener('messageerror', (e) => {\r\n      this.log.error('SW messageerror:', e);\r\n    });\r\n  }\r\n\r\n  private onWorkerFirstMessage(worker: any) {\r\n    if(!this.worker) {\r\n      this.worker = worker;\r\n      this.log('set webWorker');\r\n\r\n      this.postMessage = this.worker.postMessage.bind(this.worker);\r\n\r\n      const isWebpSupported = webpWorkerController.isWebpSupported();\r\n      this.log('WebP supported:', isWebpSupported);\r\n      this.postMessage({type: 'webpSupport', payload: isWebpSupported});\r\n\r\n      this.releasePending();\r\n    }\r\n  }\r\n\r\n  public addTaskListener(name: keyof ApiManagerProxy['taskListeners'], callback: ApiManagerProxy['taskListeners'][typeof name]) {\r\n    this.taskListeners[name] = callback;\r\n  }\r\n\r\n  private onWorkerMessage = (e: MessageEvent) => {\r\n    //this.log('got message from worker:', e.data);\r\n\r\n    const task = e.data;\r\n\r\n    if(!isObject(task)) {\r\n      return;\r\n    }\r\n\r\n    const callback = this.taskListeners[task.type];\r\n    if(callback) {\r\n      callback(task);\r\n      return;\r\n    }\r\n\r\n    if(task.update) {\r\n      if(this.updatesProcessor) {\r\n        this.updatesProcessor(task.update);\r\n      }\r\n    } else if(task.progress) {\r\n      rootScope.broadcast('download_progress', task.progress);\r\n    } else if(task.hasOwnProperty('result') || task.hasOwnProperty('error')) {\r\n      this.finalizeTask(task.taskId, task.result, task.error);\r\n    }\r\n  };\r\n\r\n/////////////////////\r\n  private registerWorker() {\r\n    //return;\r\n\r\n    const worker = new MTProtoWorker();\r\n    //const worker = window;\r\n    worker.addEventListener('message', this.onWorkerFirstMessage.bind(this, worker), {once: true});\r\n    worker.addEventListener('message', this.onWorkerMessage);\r\n\r\n    worker.addEventListener('error', (err) => {\r\n      this.log.error('WORKER ERROR', err);\r\n    });\r\n  }\r\n////////////\r\n\r\n  private finalizeTask(taskId: number, result: any, error: any) {\r\n    const deferred = this.awaiting[taskId];\r\n    if(deferred !== undefined) {\r\n      this.debug && this.log.debug('done', deferred.taskName, result, error);\r\n      error ? deferred.reject(error) : deferred.resolve(result);\r\n      delete this.awaiting[taskId];\r\n    }\r\n  }\r\n\r\n  public performTaskWorker<T>(task: string, ...args: any[]) {\r\n    this.debug && this.log.debug('start', task, args);\r\n\r\n    return new Promise<T>((resolve, reject) => {\r\n      this.awaiting[this.taskId] = {resolve, reject, taskName: task};\r\n  \r\n      const params = {\r\n        task,\r\n        taskId: this.taskId,\r\n        args\r\n      };\r\n\r\n      this.pending.push(params);\r\n      this.releasePending();\r\n  \r\n      this.taskId++;\r\n    });\r\n  }\r\n\r\n  private releasePending() {\r\n    //return;\r\n\r\n    if(this.postMessage) {\r\n      this.debug && this.log.debug('releasing tasks, length:', this.pending.length);\r\n      this.pending.forEach(pending => {\r\n        this.postMessage(pending);\r\n      });\r\n      \r\n      this.debug && this.log.debug('released tasks');\r\n      this.pending.length = 0;\r\n    }\r\n  }\r\n\r\n  public setUpdatesProcessor(callback: (obj: any) => void) {\r\n    this.updatesProcessor = callback;\r\n  }\r\n\r\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.performTaskWorker('invokeApi', method, params, options);\r\n  }\r\n\r\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    let o = options;\r\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\r\n    \r\n    o = {...options};\r\n    (options as MTMessage).messageId = o.prepareTempMessageId;\r\n\r\n    //console.log('will invokeApi:', method, params, options);\r\n    return this.invokeApi(method, params, o);\r\n  }\r\n\r\n  public invokeApiHashable<T extends keyof MethodDeclMap>(method: T, params: Omit<MethodDeclMap[T]['req'], 'hash'> = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    //console.log('will invokeApi:', method, params, options);\r\n\r\n    const queryJSON = JSON.stringify(params);\r\n    let cached: HashResult;\r\n    if(this.hashes[method]) {\r\n      cached = this.hashes[method][queryJSON];\r\n      if(cached) {\r\n        (params as any).hash = cached.hash;\r\n      }\r\n    }\r\n\r\n    return this.invokeApi(method, params, options).then((result: any) => {\r\n      if(result._.includes('NotModified')) {\r\n        this.debug && this.log.warn('NotModified saved!', method, queryJSON);\r\n        return cached.result;\r\n      }\r\n      \r\n      if(result.hash/*  || result.messages */) {\r\n        const hash = result.hash/*  || this.computeHash(result.messages) */;\r\n        \r\n        if(!this.hashes[method]) this.hashes[method] = {};\r\n        this.hashes[method][queryJSON] = {\r\n          hash,\r\n          result\r\n        };\r\n      }\r\n\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const q = method + '-' + JSON.stringify(params);\r\n    if(this.apiPromisesSingle[q]) {\r\n      return this.apiPromisesSingle[q];\r\n    }\r\n\r\n    return this.apiPromisesSingle[q] = this.invokeApi(method, params, options).finally(() => {\r\n      delete this.apiPromisesSingle[q];\r\n    });\r\n  }\r\n\r\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\r\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\r\n    const queryJSON = JSON.stringify(params);\r\n    const item = cache[queryJSON];\r\n    if(item && (!options.override || !item.fulfilled)) {\r\n      return item.promise;\r\n    }\r\n\r\n    if(options.override) {\r\n      if(item && item.timeout) {\r\n        clearTimeout(item.timeout);\r\n        delete item.timeout;\r\n      }\r\n\r\n      delete options.override;\r\n    }\r\n\r\n    let timeout: number;\r\n    if(options.cacheSeconds) {\r\n      timeout = window.setTimeout(() => {\r\n        delete cache[queryJSON];\r\n      }, options.cacheSeconds * 1000);\r\n      delete options.cacheSeconds;\r\n    }\r\n\r\n    const promise = this.invokeApi(method, params, options);\r\n\r\n    cache[queryJSON] = {\r\n      timestamp: Date.now(),\r\n      fulfilled: false,\r\n      timeout,\r\n      promise,\r\n      params\r\n    };\r\n\r\n    return promise;\r\n  }\r\n\r\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\r\n    const cache = this.apiPromisesCacheable[method];\r\n    if(cache) {\r\n      for(const queryJSON in cache) {\r\n        const item = cache[queryJSON];\r\n        if(verify(item.params)) {\r\n          if(item.timeout) {\r\n            clearTimeout(item.timeout);\r\n          }\r\n\r\n          delete cache[queryJSON];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /* private computeHash(smth: any[]) {\r\n    smth = smth.slice().sort((a, b) => a.id - b.id);\r\n    //return smth.reduce((hash, v) => (((hash * 0x4F25) & 0x7FFFFFFF) + v.id) & 0x7FFFFFFF, 0);\r\n    return smth.reduce((hash, v) => ((hash * 20261) + 0x80000000 + v.id) % 0x80000000, 0);\r\n  } */\r\n\r\n  public setBaseDcId(dcId: number) {\r\n    return this.performTaskWorker('setBaseDcId', dcId);\r\n  }\r\n\r\n  public setQueueId(queueId: number) {\r\n    return this.performTaskWorker('setQueueId', queueId);\r\n  }\r\n\r\n  public setUserAuth(userAuth: UserAuth) {\r\n    rootScope.broadcast('user_auth', userAuth);\r\n    return this.performTaskWorker('setUserAuth', userAuth);\r\n  }\r\n\r\n  public getNetworker(dc_id: number, options?: InvokeApiOptions) {\r\n    return this.performTaskWorker('getNetworker', dc_id, options);\r\n  }\r\n\r\n  public logOut(): Promise<void> {\r\n    return this.performTaskWorker('logOut');\r\n  }\r\n\r\n  public cancelDownload(fileName: string) {\r\n    return this.performTaskWorker('cancelDownload', fileName);\r\n  }\r\n\r\n  public downloadFile(options: DownloadOptions) {\r\n    return this.performTaskWorker('downloadFile', options);\r\n  }\r\n\r\n  public uploadFile(options: {file: Blob | File, fileName: string}) {\r\n    return this.performTaskWorker('uploadFile', options);\r\n  }\r\n\r\n  public toggleStorage(enabled: boolean) {\r\n    return this.performTaskWorker('toggleStorage', enabled);\r\n  }\r\n}\r\n\r\nconst apiManagerProxy = new ApiManagerProxy();\r\nMOUNT_CLASS_TO.apiManagerProxy = apiManagerProxy;\r\nexport default apiManagerProxy;\r\n","import { convertToArrayBuffer } from \"../../helpers/bytes\";\r\nimport type { InputCheckPasswordSRP } from \"../../layer\";\r\nimport { aesEncryptSync, aesDecryptSync, sha256HashSync, sha1HashSync, bytesModPow } from \"./crypto_utils\";\r\n\r\nexport default abstract class CryptoWorkerMethods {\r\n  abstract performTaskWorker<T>(task: string, ...args: any[]): Promise<T>;\r\n\r\n  public sha1Hash(bytes: Parameters<typeof sha1HashSync>[0]): Promise<Uint8Array> {\r\n    return this.performTaskWorker<Uint8Array>('sha1-hash', bytes);\r\n  }\r\n\r\n  public sha256Hash(bytes: Parameters<typeof sha256HashSync>[0]) {\r\n    return this.performTaskWorker<number[]>('sha256-hash', bytes);\r\n  }\r\n\r\n  public pbkdf2(buffer: Uint8Array, salt: Uint8Array, iterations: number) {\r\n    return this.performTaskWorker<ArrayBuffer>('pbkdf2', buffer, salt, iterations);\r\n  }\r\n\r\n  public aesEncrypt(bytes: Parameters<typeof aesEncryptSync>[0], \r\n    keyBytes: Parameters<typeof aesEncryptSync>[1], \r\n    ivBytes: Parameters<typeof aesEncryptSync>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof aesEncryptSync>>('aes-encrypt', convertToArrayBuffer(bytes), \r\n      convertToArrayBuffer(keyBytes), convertToArrayBuffer(ivBytes));\r\n  }\r\n\r\n  public aesDecrypt(encryptedBytes: Parameters<typeof aesDecryptSync>[0], \r\n    keyBytes: Parameters<typeof aesDecryptSync>[1], \r\n    ivBytes: Parameters<typeof aesDecryptSync>[2]): Promise<ArrayBuffer> {\r\n    return this.performTaskWorker<ArrayBuffer>('aes-decrypt', \r\n      encryptedBytes, keyBytes, ivBytes)\r\n      .then(bytes => convertToArrayBuffer(bytes));\r\n  }\r\n\r\n  public rsaEncrypt(publicKey: {modulus: string, exponent: string}, bytes: any): Promise<number[]> {\r\n    return this.performTaskWorker<number[]>('rsa-encrypt', publicKey, bytes);\r\n  }\r\n\r\n  public factorize(bytes: Uint8Array) {\r\n    return this.performTaskWorker<[number[], number[], number]>('factorize', [...bytes]);\r\n  }\r\n\r\n  public modPow(x: Parameters<typeof bytesModPow>[0], y: Parameters<typeof bytesModPow>[1], m: Parameters<typeof bytesModPow>[2]) {\r\n    return this.performTaskWorker<ReturnType<typeof bytesModPow>>('mod-pow', x, y, m);\r\n  }\r\n\r\n  public gzipUncompress<T>(bytes: ArrayBuffer, toString?: boolean) {\r\n    return this.performTaskWorker<T>('gzipUncompress', bytes, toString);\r\n  }\r\n\r\n  public computeSRP(password: string, state: any, isNew = false): Promise<InputCheckPasswordSRP> {\r\n    return this.performTaskWorker('computeSRP', password, state, isNew);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n/* export function stringMiddleOverflow(str: string, maxLength: number) {\r\n  return str.length > maxLength ? str.slice(0, maxLength / 2 | 0) + '...' + str.slice(-Math.round(maxLength / 2)) : str; \r\n} */\r\n\r\nexport function limitSymbols(str: string, length: number, limitFrom = length + 10) {\r\n  str = str.trim();\r\n  if(str.length > limitFrom) {\r\n    str = str.slice(0, length)/* .replace(/\\s*$/, '') */ + '...';\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// credits to https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\r\nexport function escapeRegExp(str: string) {\r\n  return str\r\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\r\n    .replace(/-/g, '\\\\x2d');\r\n}\r\n\r\nexport function encodeEntities(value: string) {\r\n  return value.replace(/&/g, '&amp;').replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, (value) => {\r\n    var hi = value.charCodeAt(0);\r\n    var low = value.charCodeAt(1);\r\n    return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\r\n  }).replace(/([^\\#-~| |!])/g, (value) => { // non-alphanumeric\r\n    return '&#' + value.charCodeAt(0) + ';';\r\n  }).replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n}\r\n\r\nexport function splitStringByLength(str: string, maxLength: number) {\r\n  if(str.length < maxLength) return [str];\r\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\r\n  const delimiter = ' ';//'\\n';\r\n  const out: string[] = [];\r\n\r\n  const cut = (end?: number) => {\r\n    let part = str.slice(lastSliceStartIndex, end);\r\n    const _arrayIndex = arrayIndex++;\r\n    if(part.length > maxLength) {\r\n      let overflowPart = part.slice(maxLength);\r\n      const splitted = splitStringByLength(overflowPart, maxLength);\r\n      splitted.forEach(part => {\r\n        out[arrayIndex++] = part;\r\n      });\r\n\r\n      part = part.slice(0, maxLength);\r\n    }\r\n\r\n    lastSliceStartIndex = end;\r\n    length = 0;\r\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\r\n  };\r\n\r\n  let lastIndex = 0;\r\n  do {\r\n    let index = str.indexOf(delimiter, lastIndex);\r\n    if(index === -1) {\r\n      if(lastIndex !== (str.length - 1)) {\r\n        cut();\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    index += delimiter.length;\r\n\r\n    const partLength = index - lastIndex;\r\n    if((length + partLength) > maxLength) {\r\n      cut(length);\r\n    }\r\n    \r\n    lastIndex = index;\r\n    length += partLength;\r\n  } while(true);\r\n\r\n  return out;\r\n}\r\n\r\n// https://stackoverflow.com/a/14824756\r\nexport const checkRTL = (s: string) => {           \r\n  const ltrChars  = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'+'\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF',\r\n    rtlChars      = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC',\r\n    rtlDirCheck   = new RegExp('^[^'+ltrChars+']*['+rtlChars+']');\r\n\r\n  return rtlDirCheck.test(s);\r\n};\r\n\r\n//(window as any).checkRTL = checkRTL;\r\n\r\nexport function convertInputKeyToKey(inputKey: string) {\r\n  const str = inputKey.replace('input', '');\r\n  return (str[0].toLowerCase() + str.slice(1)) as string;\r\n}\r\n\r\nexport function convertKeyToInputKey(key: string) {\r\n  key = key[0].toUpperCase() + key.slice(1);\r\n  key = 'input' + key;\r\n  return key;\r\n}\r\n\r\nexport function capitalizeFirstLetter(string: string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nexport function bytesToHex(bytes: ArrayLike<number>) {\r\n  bytes = bytes || [];\r\n  let arr: string[] = [];\r\n  for(let i = 0; i < bytes.length; ++i) {\r\n    arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16));\r\n  }\r\n  return arr.join('');\r\n}\r\n\r\nexport function bytesFromHex(hexString: string) {\r\n  const len = hexString.length;\r\n  let start = 0;\r\n  let bytes: number[] = [];\r\n\r\n  if(len % 2) { // read 0x581 as 0x0581\r\n    bytes.push(parseInt(hexString.charAt(0), 16));\r\n    ++start;\r\n  }\r\n\r\n  for(let i = start; i < len; i += 2) {\r\n    bytes.push(parseInt(hexString.substr(i, 2), 16));\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToBase64(bytes: number[] | Uint8Array) {\r\n  let mod3: number;\r\n  let result = '';\r\n\r\n  for(let nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; ++nIdx) {\r\n    mod3 = nIdx % 3;\r\n    nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24);\r\n    if(mod3 === 2 || nLen - nIdx === 1) {\r\n      result += String.fromCharCode(\r\n        uint6ToBase64(nUint24 >>> 18 & 63),\r\n        uint6ToBase64(nUint24 >>> 12 & 63),\r\n        uint6ToBase64(nUint24 >>> 6 & 63),\r\n        uint6ToBase64(nUint24 & 63)\r\n      );\r\n      nUint24 = 0;\r\n    }\r\n  }\r\n\r\n  return result.replace(/A(?=A$|$)/g, '=');\r\n}\r\n\r\nexport function uint6ToBase64(nUint6: number) {\r\n  return nUint6 < 26\r\n    ? nUint6 + 65\r\n    : nUint6 < 52\r\n      ? nUint6 + 71\r\n      : nUint6 < 62\r\n        ? nUint6 - 4\r\n        : nUint6 === 62\r\n          ? 43\r\n          : nUint6 === 63\r\n            ? 47\r\n            : 65\r\n}\r\n\r\nexport function bytesCmp(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  if(len !== bytes2.length) {\r\n    return false;\r\n  }\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    if(bytes1[i] !== bytes2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function bytesXor(bytes1: number[] | Uint8Array, bytes2: number[] | Uint8Array) {\r\n  const len = bytes1.length;\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = bytes1[i] ^ bytes2[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bytesToArrayBuffer(b: number[]) {\r\n  return (new Uint8Array(b)).buffer;\r\n}\r\n\r\nexport function convertToArrayBuffer(bytes: any | ArrayBuffer | Uint8Array) {\r\n  // Be careful with converting subarrays!!\r\n  if(bytes instanceof ArrayBuffer) {\r\n    return bytes;\r\n  }\r\n  if(bytes.buffer !== undefined &&\r\n    bytes.buffer.byteLength === bytes.length * bytes.BYTES_PER_ELEMENT) {\r\n    return bytes.buffer;\r\n  }\r\n  return bytesToArrayBuffer(bytes);\r\n}\r\n\r\nexport function convertToUint8Array(bytes: Uint8Array | ArrayBuffer | number[] | string): Uint8Array {\r\n  if((bytes as Uint8Array).buffer !== undefined) {\r\n    return bytes as Uint8Array;\r\n  } else if(typeof(bytes) === 'string') {\r\n    return new TextEncoder().encode(bytes);\r\n  }\r\n\r\n  return new Uint8Array(bytes);\r\n}\r\n\r\nexport function bytesFromArrayBuffer(buffer: ArrayBuffer) {\r\n  const len = buffer.byteLength;\r\n  const byteView = new Uint8Array(buffer);\r\n  const bytes: number[] = [];\r\n\r\n  for(let i = 0; i < len; ++i) {\r\n    bytes[i] = byteView[i];\r\n  }\r\n\r\n  return bytes;\r\n}\r\n\r\nexport function bufferConcat(buffer1: any, buffer2: any) {\r\n  const l1 = buffer1.byteLength || buffer1.length;\r\n  const l2 = buffer2.byteLength || buffer2.length;\r\n  const tmp = new Uint8Array(l1 + l2);\r\n  tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0);\r\n  tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1);\r\n\r\n  return tmp.buffer;\r\n}\r\n\r\nexport function bufferConcats(...args: any[]) {\r\n  let length = 0;\r\n  args.forEach(b => length += b.byteLength || b.length);\r\n\r\n  const tmp = new Uint8Array(length);\r\n  \r\n  let lastLength = 0;\r\n  args.forEach(b => {\r\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\r\n    lastLength += b.byteLength || b.length;\r\n  });\r\n\r\n  return tmp/* .buffer */;\r\n}\r\n\r\nexport function bytesFromWordss(input: Uint32Array) {\r\n  const o: number[] = [];\r\n  for(let i = 0, length = input.length * 4; i < length; ++i) {\r\n    o.push((input[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff);\r\n  }\r\n\r\n  return o;\r\n}\r\n\r\nexport function bytesToWordss(input: ArrayBuffer | Uint8Array) {\r\n  let bytes: Uint8Array;\r\n  if(input instanceof ArrayBuffer) bytes = new Uint8Array(input);\r\n  else bytes = input;\r\n\r\n  const words: number[] = [];\r\n  for(let i = 0, len = bytes.length; i < len; ++i) {\r\n    words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8);\r\n  }\r\n\r\n  return new Uint32Array(words);\r\n}\r\n\r\n// * https://stackoverflow.com/a/52827031\r\n/* export const isBigEndian = (() => {\r\n  const array = new Uint8Array(4);\r\n  const view = new Uint32Array(array.buffer);\r\n  return !((view[0] = 1) & array[0]);\r\n})(); */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport DEBUG, { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { safeAssign } from \"../helpers/object\";\r\nimport { capitalizeFirstLetter } from \"../helpers/string\";\r\nimport type lang from \"../lang\";\r\nimport type langSign from \"../langSign\";\r\nimport { LangPackDifference, LangPackString } from \"../layer\";\r\nimport apiManager from \"./mtproto/mtprotoworker\";\r\nimport sessionStorage from \"./sessionStorage\";\r\nimport App from \"../config/app\";\r\nimport rootScope from \"./rootScope\";\r\n\r\nexport const langPack: {[actionType: string]: LangPackKey} = {\r\n  \"messageActionChatCreate\": \"ActionCreateGroup\",\r\n\t\"messageActionChatEditTitle\": \"ActionChangedTitle\",\r\n\t\"messageActionChatEditPhoto\": \"ActionChangedPhoto\",\r\n\t\"messageActionChatEditVideo\": \"ActionChangedVideo\",\r\n\t\"messageActionChatDeletePhoto\": \"ActionRemovedPhoto\",\r\n\t\"messageActionChatReturn\": \"ActionAddUserSelf\",\r\n\t\"messageActionChatReturnYou\": \"ActionAddUserSelfYou\",\r\n\t\"messageActionChatJoined\": \"ActionAddUserSelfMega\",\r\n\t\"messageActionChatJoinedYou\": \"ChannelMegaJoined\",\r\n  \"messageActionChatAddUser\": \"ActionAddUser\",\r\n  \"messageActionChatAddUsers\": \"ActionAddUser\",\r\n\t\"messageActionChatLeave\": \"ActionLeftUser\",\r\n\t\"messageActionChatDeleteUser\": \"ActionKickUser\",\r\n\t\"messageActionChatJoinedByLink\": \"ActionInviteUser\",\r\n  \"messageActionPinMessage\": \"ActionPinnedNoText\",\r\n  \"messageActionContactSignUp\": \"Chat.Service.PeerJoinedTelegram\",\r\n\t\"messageActionChannelCreate\": \"ActionCreateChannel\",\r\n\t\"messageActionChannelEditTitle\": \"Chat.Service.Channel.UpdatedTitle\",\r\n\t\"messageActionChannelEditPhoto\": \"Chat.Service.Channel.UpdatedPhoto\",\r\n\t\"messageActionChannelEditVideo\": \"Chat.Service.Channel.UpdatedVideo\",\r\n  \"messageActionChannelDeletePhoto\": \"Chat.Service.Channel.RemovedPhoto\",\r\n  \"messageActionHistoryClear\": \"HistoryCleared\",\r\n\r\n  \"messageActionChannelMigrateFrom\": \"ActionMigrateFromGroup\",\r\n\r\n  \"messageActionPhoneCall.in_ok\": \"ChatList.Service.Call.incoming\",\r\n\t\"messageActionPhoneCall.out_ok\": \"ChatList.Service.Call.outgoing\",\r\n\t\"messageActionPhoneCall.in_missed\": \"ChatList.Service.Call.Missed\",\r\n\t\"messageActionPhoneCall.out_missed\": \"ChatList.Service.Call.Cancelled\",\r\n\r\n\t\"messageActionBotAllowed\": \"Chat.Service.BotPermissionAllowed\"\r\n};\r\n\r\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\r\n\r\nnamespace I18n {\r\n\texport const strings: Map<LangPackKey, LangPackString> = new Map();\r\n\tlet pluralRules: Intl.PluralRules;\r\n\r\n\tlet cacheLangPackPromise: Promise<LangPackDifference>;\r\n\texport let lastRequestedLangCode: string;\r\n\texport let requestedServerLanguage = false;\r\n\texport function getCacheLangPack(): Promise<LangPackDifference> {\r\n\t\tif(cacheLangPackPromise) return cacheLangPackPromise;\r\n\t\treturn cacheLangPackPromise = Promise.all([\r\n\t\t\tsessionStorage.get('langPack') as Promise<LangPackDifference>,\r\n\t\t\tpolyfillPromise\r\n\t\t]).then(([langPack]) => {\r\n\t\t\tif(!langPack/*  || true */) {\r\n\t\t\t\treturn loadLocalLangPack();\r\n\t\t\t} else if(DEBUG && false) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t}/*  else if(langPack.appVersion !== App.langPackVersion) {\r\n\t\t\t\treturn getLangPack(langPack.lang_code);\r\n\t\t\t} */\r\n\t\t\t\r\n\t\t\tif(!lastRequestedLangCode) {\r\n\t\t\t\tlastRequestedLangCode = langPack.lang_code;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t}).finally(() => {\r\n\t\t\tcacheLangPackPromise = undefined;\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLocalLangPack() {\r\n\t\tconst defaultCode = App.langPackCode;\r\n\t\tlastRequestedLangCode = defaultCode;\r\n\t\treturn Promise.all([\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign')\r\n\t\t]).then(([lang, langSign]) => {\r\n\t\t\tconst strings: LangPackString[] = [];\r\n\t\t\tformatLocalStrings(lang.default, strings);\r\n\t\t\tformatLocalStrings(langSign.default, strings);\r\n\r\n\t\t\tconst langPack: LangPackDifference = {\r\n\t\t\t\t_: 'langPackDifference',\r\n\t\t\t\tfrom_version: 0,\r\n\t\t\t\tlang_code: defaultCode,\r\n\t\t\t\tstrings,\r\n\t\t\t\tversion: 0,\r\n\t\t\t\tlocal: true\r\n\t\t\t};\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function loadLangPack(langCode: string) {\r\n\t\trequestedServerLanguage = true;\r\n\t\treturn Promise.all([\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: App.langPack\r\n\t\t\t}),\r\n\t\t\tapiManager.invokeApiCacheable('langpack.getLangPack', {\r\n\t\t\t\tlang_code: langCode,\r\n\t\t\t\tlang_pack: 'android'\r\n\t\t\t}),\r\n\t\t\timport('../lang'),\r\n\t\t\timport('../langSign'),\r\n\t\t\tpolyfillPromise\r\n\t\t]);\r\n\t}\r\n\r\n\texport function getStrings(langCode: string, strings: string[]) {\r\n\t\treturn apiManager.invokeApi('langpack.getStrings', {\r\n\t\t\tlang_pack: App.langPack,\r\n\t\t\tlang_code: langCode,\r\n\t\t\tkeys: strings\r\n\t\t});\r\n\t}\r\n\r\n\texport function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\r\n\t\tfor(const i in strings) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst v = strings[i];\r\n\t\t\tif(typeof(v) === 'string') {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackString',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\tvalue: v\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tpushTo.push({\r\n\t\t\t\t\t_: 'langPackStringPluralized',\r\n\t\t\t\t\tkey: i,\r\n\t\t\t\t\t...v\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pushTo;\r\n\t}\r\n\r\n\texport function getLangPack(langCode: string) {\r\n\t\tlastRequestedLangCode = langCode;\r\n\t\treturn loadLangPack(langCode).then(([langPack, _langPack, __langPack, ___langPack, _]) => {\r\n\t\t\tlet strings: LangPackString[] = [];\r\n\r\n\t\t\t[__langPack, ___langPack].forEach(l => {\r\n\t\t\t\tformatLocalStrings(l.default as any, strings);\r\n\t\t\t});\r\n\r\n\t\t\tstrings = strings.concat(langPack.strings);\r\n\r\n\t\t\tfor(const string of _langPack.strings) {\r\n\t\t\t\tstrings.push(string);\r\n\t\t\t}\r\n\r\n\t\t\tlangPack.strings = strings;\r\n\t\t\treturn saveLangPack(langPack);\r\n\t\t});\r\n\t}\r\n\r\n\texport function saveLangPack(langPack: LangPackDifference) {\r\n\t\tlangPack.appVersion = App.langPackVersion;\r\n\r\n\t\treturn sessionStorage.set({langPack}).then(() => {\r\n\t\t\tapplyLangPack(langPack);\r\n\t\t\treturn langPack;\r\n\t\t});\r\n\t}\r\n\r\n\texport const polyfillPromise = (function checkIfPolyfillNeeded() {\r\n\t\tif(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\r\n\t\t\treturn Promise.resolve();\r\n\t\t} else {\r\n\t\t\treturn import('./pluralPolyfill').then((_Intl) => {\r\n\t\t\t\t(window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\r\n\t\t\t});\r\n\t\t}\r\n\t})();\r\n\t\r\n\texport function applyLangPack(langPack: LangPackDifference) {\r\n\t\tif(langPack.lang_code !== lastRequestedLangCode) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpluralRules = new Intl.PluralRules(langPack.lang_code);\r\n\r\n\t\tstrings.clear();\r\n\r\n\t\tfor(const string of langPack.strings) {\r\n\t\t\tstrings.set(string.key as LangPackKey, string);\r\n\t\t}\r\n\r\n\t\trootScope.broadcast('language_change');\r\n\r\n\t\tconst elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\r\n\t\telements.forEach(element => {\r\n\t\t\tconst instance = weakMap.get(element);\r\n\r\n\t\t\tif(instance) {\r\n\t\t\t\tinstance.update();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\texport function superFormatter(input: string, args?: any[], indexHolder = {i: 0}) {\r\n\t\tlet out: (string | HTMLElement)[] = [];\r\n\t\tconst regExp = /(\\*\\*)(.+?)\\1|(\\n)|un\\d|%\\d\\$.|%./g;\r\n\r\n\t\tlet lastIndex = 0;\r\n\t\tinput.replace(regExp, (match, p1: any, p2: any, p3: any, offset: number, string: string) => {\r\n\t\t\t//console.table({match, p1, p2, offset, string});\r\n\r\n\t\t\tout.push(string.slice(lastIndex, offset));\r\n\r\n\t\t\tif(p1) {\r\n\t\t\t\t//offset += p1.length;\r\n\t\t\t\tswitch(p1) {\r\n\t\t\t\t\tcase '**': {\r\n\t\t\t\t\t\tconst b = document.createElement('b');\r\n\t\t\t\t\t\tb.append(...superFormatter(p2, args, indexHolder));\r\n\t\t\t\t\t\tout.push(b);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if(p3) {\r\n\t\t\t\tout.push(document.createElement('br'));\r\n\t\t\t} else if(args) {\r\n\t\t\t\tout.push(args[indexHolder.i++]);\r\n\t\t\t}\r\n\r\n\t\t\tlastIndex = offset + match.length;\r\n\t\t\treturn '';\r\n\t\t});\r\n\t\r\n\t\tif(lastIndex !== input.length) {\r\n\t\t\tout.push(input.slice(lastIndex));\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\texport function format(key: LangPackKey, plain: true, args?: any[]): string;\r\n\texport function format(key: LangPackKey, plain?: false, args?: any[]): (string | HTMLElement)[];\r\n\texport function format(key: LangPackKey, plain = false, args?: any[]): (string | HTMLElement)[] | string {\r\n\t\tconst str = strings.get(key);\r\n\t\tlet input: string;\r\n\t\tif(str) {\r\n\t\t\tif(str._ === 'langPackStringPluralized' && args?.length) {\r\n\t\t\t\tlet v = args[0] as number | string;\r\n\t\t\t\tif(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\r\n\t\t\t\tconst s = pluralRules.select(v);\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tinput = str[s + '_value'] || str['other_value'];\r\n\t\t\t} else if(str._ === 'langPackString') {\r\n\t\t\t\tinput = str.value;\r\n\t\t\t} else {\r\n\t\t\t\t//input = '[' + key + ']';\r\n\t\t\t\tinput = key;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//input = '[' + key + ']';\r\n\t\t\tinput = key;\r\n\t\t}\r\n\t\t\r\n\t\tif(plain) {\r\n\t\t\tif(args?.length) {\r\n\t\t\t\tconst regExp = /un\\d|%\\d\\$.|%./g;\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tinput = input.replace(regExp, (match, offset, string) => {\r\n\t\t\t\t\treturn '' + args[i++];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn input;\r\n\t\t} else {\r\n\t\t\treturn superFormatter(input, args);\r\n\t\t}\r\n\t}\r\n\r\n\texport const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\r\n\r\n\texport type IntlElementBaseOptions = {\r\n\t\telement?: HTMLElement,\r\n\t\tproperty?: /* 'innerText' |  */'innerHTML' | 'placeholder',\r\n\t};\r\n\r\n\tabstract class IntlElementBase<Options extends IntlElementBaseOptions> {\r\n\t\tpublic element: IntlElementBaseOptions['element'];\r\n\t\tpublic property: IntlElementBaseOptions['property'] = 'innerHTML';\r\n\t\r\n\t\tconstructor(options: Options) {\r\n\t\t\tthis.element = options.element || document.createElement('span');\r\n\t\t\tthis.element.classList.add('i18n');\r\n\t\t\t\r\n\t\t\tthis.update(options);\r\n\t\t\tweakMap.set(this.element, this);\r\n\t\t}\r\n\r\n\t\tabstract update(options?: Options): void;\r\n\t}\r\n\r\n\texport type IntlElementOptions = IntlElementBaseOptions & {\r\n\t\tkey: LangPackKey,\r\n\t\targs?: any[]\r\n\t};\r\n\texport class IntlElement extends IntlElementBase<IntlElementOptions> {\r\n\t\tpublic key: IntlElementOptions['key'];\r\n\t\tpublic args: IntlElementOptions['args'];\r\n\r\n\t\tpublic update(options?: IntlElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\tif(this.property === 'innerHTML') {\r\n\t\t\t\tthis.element.textContent = '';\r\n\t\t\t\tthis.element.append(...format(this.key, false, this.args));\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst v = this.element[this.property];\r\n\t\t\t\tconst formatted = format(this.key, true, this.args);\r\n\r\n\t\t\t\t// * hasOwnProperty won't work here\r\n\t\t\t\tif(v === undefined) this.element.dataset[this.property] = formatted;\r\n\t\t\t\telse (this.element as HTMLInputElement)[this.property] = formatted;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport type IntlDateElementOptions = IntlElementBaseOptions & {\r\n\t\tdate: Date,\r\n\t\toptions: Intl.DateTimeFormatOptions\r\n\t};\r\n\texport class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\r\n\t\tpublic date: IntlDateElementOptions['date'];\r\n\t\tpublic options: IntlDateElementOptions['options'];\r\n\r\n\t\tpublic update(options?: IntlDateElementOptions) {\r\n\t\t\tsafeAssign(this, options);\r\n\t\r\n\t\t\t//var options = { month: 'long', day: 'numeric' };\r\n\t\t\t\r\n\t\t\t// * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\r\n\t\t\tconst dateTimeFormat = new Intl.DateTimeFormat(lastRequestedLangCode + '-u-hc-h23', this.options);\r\n\t\t\t\r\n\t\t\t(this.element as any)[this.property] = capitalizeFirstLetter(dateTimeFormat.format(this.date));\r\n\t\t}\r\n\t}\r\n\r\n\texport function i18n(key: LangPackKey, args?: any[]) {\r\n\t\treturn new IntlElement({key, args}).element;\r\n\t}\r\n\t\r\n\texport function i18n_(options: IntlElementOptions) {\r\n\t\treturn new IntlElement(options).element;\r\n\t}\r\n\r\n\texport function _i18n(element: HTMLElement, key: LangPackKey, args?: any[], property?: IntlElementOptions['property']) {\r\n\t\treturn new IntlElement({element, key, args, property}).element;\r\n\t}\r\n}\r\n\r\nexport {I18n};\r\nexport default I18n;\r\n\r\nconst i18n = I18n.i18n;\r\nexport {i18n};\r\n\r\nconst i18n_ = I18n.i18n_;\r\nexport {i18n_};\r\n\r\nconst _i18n = I18n._i18n;\r\nexport {_i18n};\r\n\r\nexport function join(elements: HTMLElement[], useLast = true) {\r\n\tconst arr: HTMLElement[] = elements.slice(0, 1);\r\n  for(let i = 1; i < elements.length; ++i) {\r\n    const isLast = (elements.length - 1) === i;\r\n    const delimiterKey: LangPackKey = isLast && useLast ? 'WordDelimiterLast' : 'WordDelimiter';\r\n    arr.push(i18n(delimiterKey));\r\n    arr.push(elements[i]);\r\n  }\r\n\r\n\treturn arr;\r\n}\r\n\r\nMOUNT_CLASS_TO.I18n = I18n;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport WebpWorker from 'worker-loader!./webp.worker';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport { CancellablePromise, deferredPromise } from '../../helpers/cancellablePromise';\r\nimport apiManagerProxy from '../mtproto/mtprotoworker';\r\n\r\nexport type WebpConvertTask = {\r\n  type: 'convertWebp', \r\n  payload: {\r\n    fileName: string, \r\n    bytes: Uint8Array\r\n  }\r\n};\r\n\r\nexport class WebpWorkerController {\r\n  private worker: Worker;\r\n  private convertPromises: {[fileName: string]: CancellablePromise<Uint8Array>} = {};\r\n  private isWebpSupportedCache: boolean;\r\n  \r\n  init() {\r\n    this.worker = new WebpWorker();\r\n    this.worker.addEventListener('message', (e) => {\r\n      const payload = (e.data as WebpConvertTask).payload;\r\n\r\n      if(payload.fileName.indexOf('main-') === 0) {\r\n        const promise = this.convertPromises[payload.fileName];\r\n        if(promise) {\r\n          payload.bytes ? promise.resolve(payload.bytes) : promise.reject();\r\n          delete this.convertPromises[payload.fileName];\r\n        }\r\n      } else {\r\n        apiManagerProxy.postMessage(e.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  postMessage(data: WebpConvertTask) {\r\n    if(this.init) {\r\n      this.init();\r\n      this.init = null;\r\n    }\r\n\r\n    this.worker.postMessage(data);\r\n  }\r\n\r\n  isWebpSupported() {\r\n    if(this.isWebpSupportedCache === undefined) {\r\n      this.isWebpSupportedCache = document.createElement('canvas').toDataURL('image/webp').startsWith('data:image/webp');\r\n    }\r\n\r\n    return this.isWebpSupportedCache;\r\n  }\r\n\r\n  convert(fileName: string, bytes: Uint8Array) {\r\n    fileName = 'main-' + fileName;\r\n\r\n    if(this.convertPromises.hasOwnProperty(fileName)) {\r\n      return this.convertPromises[fileName];\r\n    }\r\n    \r\n    const convertPromise = deferredPromise<Uint8Array>();\r\n\r\n    this.postMessage({type: 'convertWebp', payload: {fileName, bytes}});\r\n\r\n    return this.convertPromises[fileName] = convertPromise;\r\n  }\r\n}\r\n\r\nconst webpWorkerController = new WebpWorkerController();\r\nMOUNT_CLASS_TO.webpWorkerController = webpWorkerController;\r\nexport default webpWorkerController;"],"sourceRoot":""}