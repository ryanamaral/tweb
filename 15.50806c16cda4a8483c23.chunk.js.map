{"version":3,"sources":["webpack:///./src/pages/pageSignUp.ts","webpack:///./src/pages/pageIm.ts","webpack:///./src/components/popups/index.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/pages/loginPage.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/lib/cropper.ts","webpack:///./src/components/popups/avatar.ts","webpack:///./src/components/monkeys/tracking.ts","webpack:///./src/components/codeInputField.ts","webpack:///./src/pages/pageAuthCode.ts"],"names":["authCode","page","then","imported","className","withInputWrapper","titleLangKey","subtitleLangKey","imageDiv","classList","add","title","avatarPreview","document","createElement","id","addIco","append","appProfileManager","default","uploadAvatar","addEventListener","open","_uploadAvatar","handleInput","e","name","nameInputField","value","lastName","lastNameInputField","fullName","trim","wrapEmojiText","label","maxLength","btnSignUp","btnI18n","IntlElement","key","element","inputWrapper","container","input","contains","length","this","disabled","params","phone_number","phone_code_hash","first_name","last_name","update","preloader","invokeApi","response","_","setUserAuth","user","Promise","resolve","reject","inputFile","uploadProfilePhoto","finally","mount","removeAttribute","remove","catch","err","type","window","requestAnimationFrame","_authCode","pushToState","m","dispatchEvent","requestedServerLanguage","getCacheLangPack","langPack","local","getLangPack","lang_code","PopupElement","buttons","options","header","onEscape","hide","back","destroy","onClose","btnClose","removeEventListener","overlayIsActive","removeItem","navigationItem","undefined","setTimeout","onCloseAfterTimeout","checkAnimations","closable","prepend","once","overlayClosable","onOverlayClick","target","withConfirm","btnConfirm","body","buttonsDiv","buttonsElements","map","b","button","isDanger","text","innerHTML","langKey","langArgs","callback","isCancel","onPop","pushItem","offsetWidth","addCancelButton","find","push","passwordManager","result","settings","getState","state","currentHashPromise","newHashPromise","password","new_settings","hint","email","currentPassword","computeSRP","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","all","hashes","new_password_hash","inputCheckPassword","auth","saveApiUser","code","LoginPage","querySelector","subtitle","PasswordInputField","super","plainText","passwordVisible","onVisibilityClick","toggleVisible","toggle","onVisibilityClickAdditional","setAttribute","autocomplete","stealthy","tabIndex","parentElement","insertBefore","cloneNode","nextSibling","PasswordMonkey","passwordInputField","size","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","width","height","noCache","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","passwordInput","btnNext","btnNextI18n","getStateInterval","setInterval","_state","setLabel","onSubmit","check","clearInterval","monkey","select","isMobile","load","focus","originalImage","canvas","cropComponent","cropImage","event_state","cropLeft","cropTop","cropWidth","cropHeight","scaledRatio","init","draggable","Image","src","overlayColor","appendChild","parentNode","style","maxWidth","naturalWidth","left","CROPWIDTH","top","offsetHeight","CROPHEIGHT","updateCropSize","updateCropImage","updateContainer","startMoving","resizing","keyHandler","imgZoom","zoom","Math","PI","right","bottom","newWidth","floor","clientWidth","newHeight","clientHeight","w","h","offsetLeft","offsetTop","preventDefault","String","fromCharCode","charCode","deltaY","stopPropagation","container_width","container_height","container_left","container_top","mouse_x","clientX","pageX","touches","scrollX","mouse_y","clientY","pageY","scrollY","saveEventState","moving","endMoving","currentTouch","x","y","complete","onload","crop","getContext","drawImage","removeHandlers","image","cropper","h6","cropContainer","display","file","files","reader","FileReader","contents","show","readAsDataURL","btnSubmit","ripple","click","toBlob","blob","darkenCanvas","onCrop","appDownloadManager","upload","postCanvas","ctx","fillStyle","fillRect","TrackingMonkey","inputField","max","playAnimation","frame","min","round","idleAnimation","stop","CodeInputField","lastLength","replace","slice","setValueSilently","onFill","codeInput","headerElement","sentTypeElement","CODELENGTH","codeInputField","submitCode","pageEl","cleanup","phone_code","ignoreErrors","good","handled","innerText","evt","createEvent","initEvent","getElementsByClassName","args","sentCode"],"mappings":"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","file":"15.50806c16cda4a8483c23.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { CancellablePromise } from '../helpers/cancellablePromise';\nimport type { InputFile } from '../layer';\nimport type { AuthState } from '../types';\nimport Button from '../components/button';\nimport InputField from '../components/inputField';\nimport { putPreloader } from '../components/misc';\nimport PopupAvatar from '../components/popups/avatar';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport I18n, { i18n } from '../lib/langPack';\n//import apiManager from '../lib/mtproto/apiManager';\nimport apiManager from '../lib/mtproto/mtprotoworker';\nimport RichTextProcessor from '../lib/richtextprocessor';\nimport LoginPage from './loginPage';\nimport Page from './page';\nimport pageIm from './pageIm';\nimport blurActiveElement from '../helpers/dom/blurActiveElement';\nimport replaceContent from '../helpers/dom/replaceContent';\n\nlet authCode: AuthState.signUp['authCode'] = null;\n\nconst onFirstMount = () => import('../lib/appManagers/appProfileManager').then(imported => {\n  const page = new LoginPage({\n    className: 'page-signUp',\n    withInputWrapper: true,\n    titleLangKey: 'YourName',\n    subtitleLangKey: 'Login.Register.Subtitle'\n  });\n\n  page.imageDiv.classList.add('avatar-edit');\n\n  page.title.classList.add('fullName');\n\n  const avatarPreview = document.createElement('canvas');\n  avatarPreview.id = 'canvas-avatar';\n  avatarPreview.className = 'avatar-edit-canvas';\n\n  const addIco = document.createElement('span');\n  addIco.className = 'tgico tgico-cameraadd';\n\n  page.imageDiv.append(avatarPreview, addIco);\n  \n  const appProfileManager = imported.default;\n\n  let uploadAvatar: () => CancellablePromise<InputFile>;\n  page.imageDiv.addEventListener('click', () => {\n    new PopupAvatar().open(avatarPreview, (_uploadAvatar) => {\n      uploadAvatar = _uploadAvatar;\n    });\n  });\n\n  const handleInput = (e: Event) => {\n    const name = nameInputField.value || '';\n    const lastName = lastNameInputField.value || '';\n\n    const fullName = name || lastName \n      ? (name + ' ' + lastName).trim() \n      : '';\n    \n    if(fullName) replaceContent(page.title, RichTextProcessor.wrapEmojiText(fullName));\n    else replaceContent(page.title, i18n('YourName'));\n  };\n\n  let sendAvatar = () => new Promise<void>((resolve, reject) => {\n    if(!uploadAvatar) {\n      //console.log('User has not selected avatar');\n      return resolve();\n    }\n\n    //console.log('invoking uploadFile...');\n    uploadAvatar().then((inputFile) => {\n      //console.log('uploaded smthn', inputFile);\n  \n      appProfileManager.uploadProfilePhoto(inputFile).then(resolve, reject);\n    }, reject);\n  });\n\n  const nameInputField = new InputField({\n    label: 'FirstName',\n    maxLength: 70\n  });\n\n  const lastNameInputField = new InputField({\n    label: 'LastName',\n    maxLength: 64\n  });\n\n  const btnSignUp = Button('btn-primary btn-color-primary');\n  const btnI18n = new I18n.IntlElement({key: 'StartMessaging'});\n  btnSignUp.append(btnI18n.element);\n\n  page.inputWrapper.append(nameInputField.container, lastNameInputField.container, btnSignUp);\n\n  nameInputField.input.addEventListener('input', handleInput);\n  lastNameInputField.input.addEventListener('input', handleInput);\n\n  btnSignUp.addEventListener('click', function(this: typeof btnSignUp, e) {\n    if(nameInputField.input.classList.contains('error') || lastNameInputField.input.classList.contains('error')) {\n      return false;\n    }\n\n    if(!nameInputField.value.length) {\n      nameInputField.input.classList.add('error');\n      return false;\n    }\n\n    this.disabled = true;\n\n    const name = nameInputField.value.trim();\n    const lastName = lastNameInputField.value.trim();\n\n    const params = {\n      phone_number: authCode.phone_number,\n      phone_code_hash: authCode.phone_code_hash,\n      first_name: name,\n      last_name: lastName\n    };\n\n    //console.log('invoking auth.signUp with params:', params);\n\n    btnI18n.update({key: 'PleaseWait'});\n    const preloader = putPreloader(this);\n\n    apiManager.invokeApi('auth.signUp', params)\n    .then((response) => {\n      //console.log('auth.signUp response:', response);\n      \n      switch(response._) {\n        case 'auth.authorization': // success\n          apiManager.setUserAuth(response.user.id);\n\n          sendAvatar().finally(() => {\n            pageIm.mount();\n          });\n          \n          break;\n        default:\n          btnI18n.update({key: response._ as any});\n          this.removeAttribute('disabled');\n          preloader.remove();\n          break;\n      }\n\n      /* (document.body.getElementsByClassName('page-sign')[0] as HTMLDivElement).style.display = 'none';\n      pageAuthCode(Object.assign(code, {phoneNumber})); */\n    }).catch(err => {\n      this.removeAttribute('disabled');\n      preloader.remove();\n\n      switch(err.type) {\n        default:\n          btnI18n.update({key: err.type});\n          break;\n      }\n    });\n  });\n\n  blurActiveElement();\n  return new Promise((resolve) => {\n    window.requestAnimationFrame(resolve);\n  });\n});\n\nconst page = new Page('page-signUp', true, onFirstMount, (_authCode: typeof authCode) => {\n  authCode = _authCode;\n\n  appStateManager.pushToState('authState', {_: 'authStateSignUp', authCode: _authCode});\n});\n\nexport default page;\n","//import {stackBlurImage} from '../lib/StackBlur';\n//import appStateManager from \"../lib/appManagers/appStateManager\";\n/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport I18n from \"../lib/langPack\";\nimport Page from \"./page\";\n\nlet onFirstMount = () => {\n  //return;\n  appStateManager.pushToState('authState', {_: 'authStateSignedIn'});\n  // ! TOO SLOW\n  /* appStateManager.saveState(); */\n\n  import('../lib/rootScope').then(m => {\n    m.default.dispatchEvent('im_mount');\n  });\n\n  if(!I18n.requestedServerLanguage) {\n    I18n.getCacheLangPack().then(langPack => {\n      if(langPack.local) {\n        I18n.getLangPack(langPack.lang_code);\n      }\n    });\n  }\n\n  blurActiveElement();\n  return new Promise<void>((resolve) => {\n    window.requestAnimationFrame(() => {\n      const promise = import('../lib/appManagers/appDialogsManager');\n      promise.finally(async() => {\n        //alert('pageIm!');\n        resolve();\n    \n        //AudioContext && global.navigator && global.navigator.mediaDevices && global.navigator.mediaDevices.getUserMedia && global.WebAssembly;\n    \n        /* // @ts-ignore\n        var AudioContext = globalThis.AudioContext || globalThis.webkitAudioContext;\n        alert('AudioContext:' + typeof(AudioContext));\n        // @ts-ignore\n        alert('global.navigator:' + typeof(navigator));\n        alert('navigator.mediaDevices:' + typeof(navigator.mediaDevices));\n        alert('navigator.mediaDevices.getUserMedia:' + typeof(navigator.mediaDevices?.getUserMedia));\n        alert('global.WebAssembly:' + typeof(WebAssembly)); */\n    \n        //(Array.from(document.getElementsByClassName('rp')) as HTMLElement[]).forEach(el => ripple(el));\n      });\n    });\n  });\n\n  //let promise = /* Promise.resolve() */.then(() => {//import('../lib/services').then(services => {\n    /* fetch('assets/img/camomile.jpg')\n    .then(res => res.blob())\n    .then(blob => {\n      let img = new Image();\n      let url = URL.createObjectURL(blob);\n      img.src = url;\n      img.onload = () => {\n        let id = 'chat-background-canvas';\n        var canvas  = document.getElementById(id) as HTMLCanvasElement;\n        //URL.revokeObjectURL(url);\n  \n        let elements = ['.chat-container'].map(selector => {\n          return document.querySelector(selector) as HTMLDivElement;\n        });\n  \n        stackBlurImage(img, id, 15, 0);\n  \n        canvas.toBlob(blob => {\n          //let dataUrl = canvas.toDataURL('image/jpeg', 1);\n          let dataUrl = URL.createObjectURL(blob);\n  \n          elements.forEach(el => {\n            el.style.backgroundImage = 'url(' + dataUrl + ')';\n          });\n        }, 'image/jpeg', 1);\n      };\n    }); */\n  //});\n};\n\nconst page = new Page('page-chats', false, onFirstMount);\nexport default page;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport rootScope from \"../../lib/rootScope\";\nimport { ripple } from \"../ripple\";\nimport animationIntersector from \"../animationIntersector\";\nimport appNavigationController, { NavigationItem } from \"../appNavigationController\";\nimport { i18n, LangPackKey } from \"../../lib/langPack\";\nimport findUpClassName from \"../../helpers/dom/findUpClassName\";\nimport blurActiveElement from \"../../helpers/dom/blurActiveElement\";\n\nexport type PopupButton = {\n  text?: string,\n  callback?: () => void,\n  langKey?: LangPackKey,\n  langArgs?: any[],\n  isDanger?: true,\n  isCancel?: true\n};\n\nexport type PopupOptions = Partial<{\n  closable: true, \n  overlayClosable: true, \n  withConfirm: LangPackKey | true, \n  body: true\n}>;\n\nexport default class PopupElement {\n  protected element = document.createElement('div');\n  protected container = document.createElement('div');\n  protected header = document.createElement('div');\n  protected title = document.createElement('div');\n  protected btnClose: HTMLElement;\n  protected btnConfirm: HTMLElement;\n  protected body: HTMLElement;\n\n  protected onClose: () => void;\n  protected onCloseAfterTimeout: () => void;\n  protected onEscape: () => boolean = () => true;\n\n  protected navigationItem: NavigationItem;\n\n  constructor(className: string, buttons?: Array<PopupButton>, options: PopupOptions = {}) {\n    this.element.classList.add('popup');\n    this.element.className = 'popup' + (className ? ' ' + className : '');\n    this.container.classList.add('popup-container', 'z-depth-1');\n\n    this.header.classList.add('popup-header');\n    this.title.classList.add('popup-title');\n\n    this.header.append(this.title);\n\n    if(options.closable) {\n      this.btnClose = document.createElement('span');\n      this.btnClose.classList.add('btn-icon', 'popup-close', 'tgico-close');\n      //ripple(this.closeBtn);\n      this.header.prepend(this.btnClose);\n\n      this.btnClose.addEventListener('click', this.hide, {once: true});\n    }\n\n    if(options.overlayClosable) {\n      const onOverlayClick = (e: MouseEvent) => {\n        if(!findUpClassName(e.target, 'popup-container')) {\n          this.hide();\n          this.element.removeEventListener('click', onOverlayClick);\n        }\n      };\n  \n      this.element.addEventListener('click', onOverlayClick);\n    }\n\n    if(options.withConfirm) {\n      this.btnConfirm = document.createElement('button');\n      this.btnConfirm.classList.add('btn-primary', 'btn-color-primary');\n      if(options.withConfirm !== true) {\n        this.btnConfirm.append(i18n(options.withConfirm));\n      }\n      this.header.append(this.btnConfirm);\n      ripple(this.btnConfirm);\n    }\n\n    this.container.append(this.header);\n    if(options.body) {\n      this.body = document.createElement('div');\n      this.body.classList.add('popup-body');\n      this.container.append(this.body);\n    }\n\n    if(buttons && buttons.length) {\n      const buttonsDiv = document.createElement('div');\n      buttonsDiv.classList.add('popup-buttons');\n\n      if(buttons.length === 2) {\n        buttonsDiv.classList.add('popup-buttons-row');\n      }\n  \n      const buttonsElements = buttons.map(b => {\n        const button = document.createElement('button');\n        button.className = 'btn' + (b.isDanger ? ' danger' : ' primary');\n\n        ripple(button);\n        \n        if(b.text) {\n          button.innerHTML =  b.text;\n        } else {\n          button.append(i18n(b.langKey, b.langArgs));\n        }\n  \n        if(b.callback) {\n          button.addEventListener('click', () => {\n            b.callback();\n            this.destroy();\n          }, {once: true});\n        } else if(b.isCancel) {\n          button.addEventListener('click', () => {\n            this.destroy();\n          }, {once: true});\n        }\n  \n        return button;\n      });\n  \n      buttonsDiv.append(...buttonsElements);\n      this.container.append(buttonsDiv);\n    }\n\n    this.element.append(this.container);\n  }\n\n  public show() {\n    this.navigationItem = {\n      type: 'popup',\n      onPop: this.destroy,\n      onEscape: this.onEscape\n    };\n\n    appNavigationController.pushItem(this.navigationItem);\n\n    blurActiveElement(); // * hide mobile keyboard\n    document.body.append(this.element);\n    void this.element.offsetWidth; // reflow\n    this.element.classList.add('active');\n    rootScope.overlayIsActive = true;\n    animationIntersector.checkAnimations(true);\n  }\n\n  public hide = () => {\n    appNavigationController.back('popup');\n  };\n\n  private destroy = () => {\n    this.onClose && this.onClose();\n    this.element.classList.add('hiding');\n    this.element.classList.remove('active');\n\n    if(this.btnClose) this.btnClose.removeEventListener('click', this.hide);\n    rootScope.overlayIsActive = false;\n\n    appNavigationController.removeItem(this.navigationItem);\n    this.navigationItem = undefined;\n\n    setTimeout(() => {\n      this.element.remove();\n      this.onCloseAfterTimeout && this.onCloseAfterTimeout();\n      animationIntersector.checkAnimations(false);\n    }, 150);\n  };\n}\n\nexport const addCancelButton = (buttons: PopupButton[]) => {\n  const button = buttons.find(b => b.isCancel);\n  if(!button) {\n    buttons.push({\n      langKey: 'Cancel',\n      isCancel: true\n    });\n  }\n\n  return buttons;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n * \n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type { AccountPassword, AccountPasswordInputSettings, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\nimport type CryptoWorkerMethods from '../crypto/crypto_methods';\nimport { MOUNT_CLASS_TO } from '../../config/debug';\nimport appUsersManager from '../appManagers/appUsersManager';\nimport apiManager from './mtprotoworker';\n//import { computeCheck } from \"../crypto/srp\";\n\nexport class PasswordManager {\n  public getState(): Promise<AccountPassword> {\n    return apiManager.invokeApi('account.getPassword').then((result) => {\n      return result;\n    });\n  }\n\n  public updateSettings(settings: {\n    hint?: string,\n    email?: string,\n    newPassword?: string,\n    currentPassword?: string\n  } = {}) {\n    //state = Object.assign({}, state);\n    //state.new_algo = Object.assign({}, state.new_algo);\n\n    return this.getState().then(state => {\n      let currentHashPromise: ReturnType<CryptoWorkerMethods['computeSRP']>;\n      let newHashPromise: Promise<Uint8Array>;\n      const params: AccountUpdatePasswordSettings = {\n        password: null,\n        new_settings: {\n          _: 'account.passwordInputSettings',\n          hint: settings.hint,\n          email: settings.email\n        }\n      };\n  \n      if(settings.currentPassword) {\n        currentHashPromise = apiManager.computeSRP(settings.currentPassword, state);\n      } else {\n        currentHashPromise = Promise.resolve({\n          _: 'inputCheckPasswordEmpty'\n        });\n      }\n  \n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\n      salt1.randomize();\n      salt1.set(newAlgo.salt1, 0);\n      newAlgo.salt1 = salt1;\n  \n      if(settings.newPassword) {\n        newHashPromise = apiManager.computeSRP(settings.newPassword, state, true) as any;\n      } else {\n        newHashPromise = Promise.resolve(new Uint8Array());\n      }\n  \n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\n        params.password = hashes[0];\n        params.new_settings.new_algo = newAlgo;\n        params.new_settings.new_password_hash = hashes[1];\n  \n        return apiManager.invokeApi('account.updatePasswordSettings', params);\n      });\n    });\n  }\n\n  public check(password: string, state: AccountPassword, options: any = {}) {\n    return apiManager.computeSRP(password, state).then((inputCheckPassword) => {\n      //console.log('SRP', inputCheckPassword);\n      return apiManager.invokeApi('auth.checkPassword', {\n        password: inputCheckPassword\n      }, options).then(auth => {\n        if(auth._ === 'auth.authorization') {\n          appUsersManager.saveApiUser(auth.user);\n          apiManager.setUserAuth(auth.user.id);\n        }\n\n        return auth;\n      });\n    });\n  }\n\n  public confirmPasswordEmail(code: string) {\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\n  }\n\n  public resendPasswordEmail() {\n    return apiManager.invokeApi('account.resendPasswordEmail');\n  }\n\n  public cancelPasswordEmail() {\n    return apiManager.invokeApi('account.cancelPasswordEmail');\n  }\n\n  /* public requestRecovery(options: any = {}) {\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\n  }\n\n  public recover(code: any, options: any = {}) {\n    return apiManager.invokeApi('auth.recoverPassword', {\n      code\n    }, options);\n  } */\n}\n\nconst passwordManager = new PasswordManager();\nMOUNT_CLASS_TO.passwordManager = passwordManager;\nexport default passwordManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { LangPackKey, i18n } from \"../lib/langPack\";\n\nexport default class LoginPage {\n  public element: HTMLElement;\n  public container: HTMLElement;\n  public imageDiv: HTMLElement;\n  public inputWrapper: HTMLElement;\n  public title: HTMLElement;\n  public subtitle: HTMLParagraphElement;\n\n  constructor(options: {\n    className: string,\n    withInputWrapper?: boolean,\n    titleLangKey?: LangPackKey,\n    subtitleLangKey?: LangPackKey,\n  }) {\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\n    //this.element = document.createElement('div');\n    //this.element.className = 'page-' + options.className;\n\n    this.container = document.createElement('div');\n    this.container.className = 'container center-align';\n\n    this.imageDiv = document.createElement('div');\n    this.imageDiv.className = 'auth-image';\n\n    this.title = document.createElement('h4');\n    if(options.titleLangKey) {\n      this.title.append(i18n(options.titleLangKey));\n    }\n\n    this.subtitle = document.createElement('p');\n    this.subtitle.className = 'subtitle';\n    if(options.subtitleLangKey) {\n      this.subtitle.append(i18n(options.subtitleLangKey));\n    }\n    \n    this.container.append(this.imageDiv, this.title, this.subtitle);\n\n    if(options.withInputWrapper) {\n      this.inputWrapper = document.createElement('div');\n      this.inputWrapper.className = 'input-wrapper';\n      this.container.append(this.inputWrapper);\n    }\n\n    this.element.append(this.container);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class PasswordInputField extends InputField {\n  public passwordVisible = false;\n  public toggleVisible: HTMLElement;\n  public onVisibilityClickAdditional: () => void;\n\n  constructor(options: InputFieldOptions = {}) {\n    super({\n      plainText: true,\n      ...options\n    });\n\n    const input = this.input as HTMLInputElement;\n    input.type = 'password';\n    input.setAttribute('required', '');\n    input.autocomplete = 'off';\n    /* input.readOnly = true;\n\n    input.addEventListener('focus', () => {\n      input.removeAttribute('readonly');\n    }, {once: true}); */\n\n    // * https://stackoverflow.com/a/35949954/6758968\n    const stealthy = document.createElement('input');\n    stealthy.classList.add('stealthy');\n    stealthy.tabIndex = -1;\n    stealthy.type = 'password';\n    input.parentElement.prepend(stealthy);\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\n\n    const toggleVisible = this.toggleVisible = document.createElement('span');\n    toggleVisible.classList.add('toggle-visible', 'tgico');\n\n    this.container.classList.add('input-field-password');\n    this.container.append(toggleVisible);\n\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\n  }\n\n  public onVisibilityClick = (e: Event) => {\n    cancelEvent(e);\n    this.passwordVisible = !this.passwordVisible;\n\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\nimport PasswordInputField from \"../passwordInputField\";\n\nexport default class PasswordMonkey {\n  public container: HTMLElement;\n  public animation: RLottiePlayer;\n  public needFrame = 0;\n  protected loadPromise: Promise<void>;\n\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\n    this.container = document.createElement('div');\n    this.container.classList.add('media-sticker-wrapper');\n  }\n\n  public load() {\n    if(this.loadPromise) return this.loadPromise;\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\n      container: this.container,\n      loop: false,\n      autoplay: false,\n      width: this.size,\n      height: this.size,\n      noCache: true\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\n      //return;\n      this.animation = _animation;\n      this.animation.addEventListener('enterFrame', currentFrame => {\n        //console.log('enterFrame', currentFrame, this.needFrame);\n\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\n            this.animation.setSpeed(1);\n            this.animation.pause();\n        } \n      });\n\n      this.passwordInputField.onVisibilityClickAdditional = () => {\n        if(this.passwordInputField.passwordVisible) {\n          this.animation.setDirection(1);\n          this.animation.curFrame = 0;\n          this.needFrame = 16;\n          this.animation.play();\n        } else {\n          this.animation.setDirection(-1);\n          this.animation.curFrame = 16;\n          this.needFrame = 0;\n          this.animation.play();\n        }\n      };\n\n      return lottieLoader.waitForFirstFrame(_animation);\n    });\n  }\n\n  public remove() {\n    if(this.animation) {\n      this.animation.remove();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { putPreloader } from '../components/misc';\nimport mediaSizes from '../helpers/mediaSizes';\nimport { AccountPassword } from '../layer';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport passwordManager from '../lib/mtproto/passwordManager';\nimport Page from './page';\nimport pageIm from './pageIm';\nimport Button from '../components/button';\nimport PasswordInputField from '../components/passwordInputField';\nimport PasswordMonkey from '../components/monkeys/password';\nimport RichTextProcessor from '../lib/richtextprocessor';\nimport I18n from '../lib/langPack';\nimport LoginPage from './loginPage';\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\nimport replaceContent from '../helpers/dom/replaceContent';\nimport toggleDisability from '../helpers/dom/toggleDisability';\n\nconst TEST = false;\nlet passwordInput: HTMLInputElement;\n\nlet onFirstMount = (): Promise<any> => {\n  const page = new LoginPage({\n    className: 'page-password',\n    withInputWrapper: true,\n    titleLangKey: 'Login.Password.Title',\n    subtitleLangKey: 'Login.Password.Subtitle'\n  });\n\n  const btnNext = Button('btn-primary btn-color-primary');\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\n\n  btnNext.append(btnNextI18n.element);\n\n  const passwordInputField = new PasswordInputField({\n    label: 'LoginPassword',\n    name: 'password'\n  });\n\n  passwordInput = passwordInputField.input as HTMLInputElement;\n\n  page.inputWrapper.append(passwordInputField.container, btnNext);\n\n  let getStateInterval: number;\n\n  let getState = () => {\n    // * just to check session relevance\n    if(!getStateInterval) {\n      getStateInterval = window.setInterval(getState, 10e3);\n    }\n\n    return !TEST && passwordManager.getState().then(_state => {\n      state = _state;\n\n      if(state.hint) {\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\n      } else {\n        passwordInputField.setLabel();\n      }\n    });\n  };\n\n  let state: AccountPassword;\n  \n  const onSubmit = (e?: Event) => {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    if(!passwordInput.value.length) {\n      passwordInput.classList.add('error');\n      return;\n    }\n\n    const toggle = toggleDisability([passwordInput, btnNext], true);\n    let value = passwordInput.value;\n\n    btnNextI18n.update({key: 'PleaseWait'});\n    const preloader = putPreloader(btnNext);\n\n    passwordManager.check(value, state).then((response) => {\n      //console.log('passwordManager response:', response);\n        \n      switch(response._) {\n        case 'auth.authorization':\n          clearInterval(getStateInterval);\n          pageIm.mount();\n          if(monkey) monkey.remove();\n          break;\n        default:\n          btnNext.removeAttribute('disabled');\n          btnNextI18n.update({key: response._ as any});\n          preloader.remove();\n          break;\n      }\n    }).catch((err: any) => {\n      toggle();\n      passwordInputField.input.classList.add('error');\n      \n      switch(err.type) {\n        default:\n          //btnNext.innerText = err.type;\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\n          passwordInput.select();\n          break;\n      }\n\n      preloader.remove();\n  \n      getState();\n    });\n  };\n  \n  attachClickEvent(btnNext, onSubmit);\n\n  passwordInput.addEventListener('keypress', function(this, e) {\n    this.classList.remove('error');\n    btnNextI18n.update({key: 'Login.Next'});\n\n    if(e.key === 'Enter') {\n      return onSubmit();\n    }\n  });\n\n  const size = mediaSizes.isMobile ? 100 : 166;\n  const monkey = new PasswordMonkey(passwordInputField, size);\n  page.imageDiv.append(monkey.container);\n  return Promise.all([\n    monkey.load(),\n    getState()\n  ]);\n};\n\nconst page = new Page('page-password', true, onFirstMount, null, () => {\n  //if(!isAppleMobile) {\n    passwordInput.focus();\n  //}\n\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\n});\n\nexport default page;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nfunction resizeableImage(originalImage: HTMLImageElement, canvas?: HTMLCanvasElement) {\n  let cropComponent: HTMLDivElement, \n    container: HTMLDivElement, \n    cropImage: HTMLImageElement, \n    event_state: Partial<{  \n      mouse_x: number,   \n      mouse_y: number,   \n      container_width: number,  \n      container_height: number,  \n      container_left: number,  \n      container_top: number\n    }> = {}, \n    keyZoomValue = 4.0, \n    MINWIDTH = 50, \n    MINHEIGHT = 50, \n    CROPWIDTH = 200, \n    CROPHEIGHT = 200, \n    cropLeft = 0, \n    cropTop = 0, \n    cropWidth = 0, \n    cropHeight = 0,\n    scaledRatio = 0;\n  \n  if(originalImage.complete) init();\n  else originalImage.onload = init;\n  \n  function removeHandlers() {\n    container.removeEventListener('mousedown', startMoving);\n    container.removeEventListener('touchstart', startMoving);\n    container.removeEventListener('wheel', resizing);\n    \n    document.removeEventListener('mouseup', endMoving);\n    document.removeEventListener('touchend', endMoving);\n    document.removeEventListener('mousemove', moving);\n    document.removeEventListener('touchmove', moving);\n    document.removeEventListener('keypress', keyHandler);\n\n    cropComponent.remove();\n    container.remove();\n    cropImage.remove();\n  }\n  \n  function addHandlers() {\n    container.addEventListener('mousedown', startMoving, false);\n    container.addEventListener('touchstart', startMoving, false);\n    container.addEventListener('wheel', resizing, false);\n    \n    document.addEventListener('keypress', keyHandler, false);\n    //document.querySelector('.btn-crop').addEventListener('click', openCropCanvasImg);\n  }\n  \n  function init() {\n    originalImage.classList.add('crop-blur');\n    originalImage.draggable = false;\n    \n    cropImage = new Image();\n    cropImage.src = originalImage.src;\n    cropImage.draggable = false;\n    cropImage.classList.add('crop-overlay-image');\n    \n    if(!canvas) {\n      canvas = document.createElement('canvas');\n    }\n    \n    cropComponent = document.createElement('div');\n    cropComponent.classList.add('crop-component');\n    \n    container = document.createElement('div');\n    container.classList.add('crop-overlay');\n    \n    const overlayColor = document.createElement('div');\n    overlayColor.classList.add('crop-overlay-color');\n    \n    cropComponent.appendChild(container);\n    const wrapper = originalImage.parentNode as HTMLElement;\n    wrapper.appendChild(cropComponent);\n    cropComponent.appendChild(cropImage);\n    cropComponent.appendChild(originalImage);\n    cropComponent.appendChild(overlayColor);\n    container.appendChild(cropImage);\n\n    cropImage.style.maxWidth = originalImage.width + 'px';\n\n    scaledRatio = originalImage.naturalWidth / originalImage.offsetWidth;\n    \n    const left = originalImage.offsetWidth / 2 - CROPWIDTH / 2;\n    const top = originalImage.offsetHeight / 2 - CROPHEIGHT / 2;\n    \n    updateCropSize(CROPWIDTH, CROPHEIGHT);\n    updateCropImage(left, top);\n    updateContainer(left, top);\n    addHandlers();\n    //crop();\n  }\n  \n  function updateCropSize(width: number, height: number) {\n    cropWidth = width * scaledRatio;\n    cropHeight = height * scaledRatio;\n\n    container.style.width = width + 'px';\n    container.style.height = height + 'px';\n  }\n  \n  function updateCropImage(left: number, top: number) {\n    cropTop = top * scaledRatio;\n    cropLeft = left * scaledRatio;\n\n    cropImage.style.top = -top + 'px';\n    cropImage.style.left = -left + 'px';\n  }\n  \n  function updateContainer(left: number, top: number) {\n    container.style.top = top + 'px';\n    container.style.left = left + 'px';\n  }\n  \n  // Save the initial event details and container state\n  function saveEventState(e: any) {\n    event_state.container_width = container.offsetWidth;\n    event_state.container_height = container.offsetHeight;\n    \n    event_state.container_left = container.offsetLeft;\n    event_state.container_top = container.offsetTop;\n    \n    event_state.mouse_x = (e.clientX || e.pageX || e.touches && e.touches[0].clientX) + window.scrollX;\n    event_state.mouse_y = (e.clientY || e.pageY || e.touches && e.touches[0].clientY) + window.scrollY;\n  }\n  \n  function imgZoom(zoom: number) {\n    zoom = zoom * Math.PI * 2\n    let newWidth = Math.floor(container.clientWidth + zoom), \n      newHeight = Math.floor(container.clientHeight + zoom), \n      w = cropImage.clientWidth, \n      h = cropImage.clientHeight, \n      left: number, \n      top: number, \n      right: number, \n      bottom: number;\n    \n    if(newWidth < MINWIDTH) {\n      return;\n    } else if(newWidth > w) {\n      return;\n    }\n    \n    left = container.offsetLeft - (zoom / 2);\n    top = container.offsetTop - (zoom / 2);\n    right = left + newWidth;\n    bottom = top + newHeight;\n    \n    if(left < 0) left = 0;\n    if(top < 0) top = 0;\n\n    if(right > w) return;\n    if(bottom > h) return;\n\n    updateCropSize(newWidth, newWidth);\n    updateCropImage(left, top);\n    updateContainer(left, top);\n    //crop();\n  }\n  \n  function keyHandler(e: KeyboardEvent) {\n    e.preventDefault();\n    \n    switch (String.fromCharCode(e.charCode)) {\n      case '+' :\n      imgZoom(keyZoomValue);\n      break;\n      case '-' :\n      imgZoom(-keyZoomValue);\n      break;\n    }\n  }\n  \n  function resizing(e: any) {\n    e.preventDefault();\n    imgZoom(e.deltaY > 0 ? 1 : -1);\n  }\n  \n  function startMoving(e: MouseEvent | TouchEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    saveEventState(e);\n    \n    document.addEventListener('mousemove', moving);\n    document.addEventListener('touchmove', moving);\n    document.addEventListener('mouseup', endMoving);\n    document.addEventListener('touchend', endMoving);\n  }\n  \n  function endMoving(e: MouseEvent | TouchEvent) {\n    e.preventDefault();\n    \n    document.removeEventListener('mouseup', endMoving);\n    document.removeEventListener('touchend', endMoving);\n    document.removeEventListener('mousemove', moving);\n    document.removeEventListener('touchmove', moving);\n  }\n  \n  function moving(e: any) {\n    let currentTouch = {x: 0, y: 0}, \n      left: number, \n      top: number, \n      w: number, \n      h: number;\n    \n    e.preventDefault();\n    e.stopPropagation();\n    \n    currentTouch.x = e.pageX || e.touches && e.touches[0].pageX;\n    currentTouch.y = e.pageY || e.touches && e.touches[0].pageY;\n    \n    left = currentTouch.x - (event_state.mouse_x - event_state.container_left);\n    top = currentTouch.y - (event_state.mouse_y - event_state.container_top);\n    w = container.offsetWidth;\n    h = container.offsetHeight;\n    \n    if(left < 0) left = 0;\n    else if(left > cropImage.offsetWidth - w) left = cropImage.offsetWidth - w;\n\n    if(top < 0) top = 0;\n    else if(top > cropImage.offsetHeight - h) top = cropImage.offsetHeight - h;\n    \n    updateCropImage(left, top);\n    updateContainer(left, top);\n    //crop();\n  }\n\n  function crop() {\n    canvas.width = cropWidth;\n    canvas.height = cropHeight;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(originalImage,\n      cropLeft, cropTop,\n      cropWidth, cropHeight,\n      0, 0,\n      cropWidth, cropHeight\n    );\n  }\n  \n  return {crop, removeHandlers};\n}\n\nexport default resizeableImage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appDownloadManager from \"../../lib/appManagers/appDownloadManager\";\nimport resizeableImage from \"../../lib/cropper\";\nimport PopupElement from \".\";\nimport { ripple } from \"../ripple\";\nimport { _i18n } from \"../../lib/langPack\";\n\nexport default class PopupAvatar extends PopupElement {\n  private cropContainer: HTMLElement;\n  private input: HTMLInputElement;\n  private btnSubmit: HTMLElement;\n  private h6: HTMLElement;\n\n  private image = new Image();\n\n  private canvas: HTMLCanvasElement;\n  private blob: Blob;\n  private cropper = {\n    crop: () => {},\n    removeHandlers: () => {}\n  };\n\n  private onCrop: (upload: () => ReturnType<typeof appDownloadManager.upload>) => void;\n\n  constructor() {\n    super('popup-avatar', null, {closable: true});\n\n    this.h6 = document.createElement('h6');\n    _i18n(this.h6, 'Popup.Avatar.Title');\n\n    this.btnClose.classList.remove('btn-icon');\n\n    this.header.append(this.h6);\n\n    this.cropContainer = document.createElement('div');\n    this.cropContainer.classList.add('crop');\n    this.cropContainer.append(this.image);\n\n    this.input = document.createElement('input');\n    this.input.type = 'file';\n    this.input.style.display = 'none';\n    this.input.addEventListener('change', (e: any) => {\n      const file = e.target.files[0];\n      if(!file) {\n        return;\n      }\n  \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const contents = e.target.result as string;\n        \n        this.image = new Image();\n        this.cropContainer.append(this.image);\n        this.image.src = contents;\n  \n        this.image.onload = () => {\n          /* let {w, h} = calcImageInBox(this.image.naturalWidth, this.image.naturalHeight, 460, 554);\n          cropContainer.style.width = w + 'px';\n          cropContainer.style.height = h + 'px'; */\n          this.show();\n  \n          this.cropper = resizeableImage(this.image, this.canvas);\n          this.input.value = '';\n        };\n      };\n  \n      reader.readAsDataURL(file);\n    }, false);\n\n    this.btnSubmit = document.createElement('button');\n    this.btnSubmit.className = 'btn-primary btn-color-primary btn-circle btn-crop btn-icon tgico-check z-depth-1';\n    ripple(this.btnSubmit);\n    this.btnSubmit.addEventListener('click', () => {\n      this.cropper.crop();\n      this.btnClose.click();\n\n      this.canvas.toBlob(blob => {\n        this.blob = blob; // save blob to send after reg\n        this.darkenCanvas();\n        this.resolve();\n      }, 'image/jpeg', 1);\n    });\n\n    this.container.append(this.cropContainer, this.btnSubmit, this.input);\n\n    this.onCloseAfterTimeout = () => {\n      this.cropper.removeHandlers();\n      if(this.image) {\n        this.image.remove();\n      }\n    };\n  }\n\n  private resolve() {\n    this.onCrop(() => {\n      return appDownloadManager.upload(this.blob);\n    });\n  }\n\n  public open(postCanvas: HTMLCanvasElement, onCrop: PopupAvatar['onCrop']) {\n    this.canvas = postCanvas;\n    this.onCrop = onCrop;\n\n    this.input.click();\n  }\n\n  public darkenCanvas() {\n    let ctx = this.canvas.getContext('2d');\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport InputField from \"../inputField\";\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\n\nexport default class TrackingMonkey {\n  public container: HTMLElement;\n\n  protected max = 45;\n  protected needFrame = 0;\n\n  protected animation: RLottiePlayer;\n  protected idleAnimation: RLottiePlayer;\n\n  protected loadPromise: Promise<any>;\n\n  constructor(protected inputField: InputField, protected size: number) {\n    this.container = document.createElement('div');\n    this.container.classList.add('media-sticker-wrapper');\n\n    const input = inputField.input;\n\n    input.addEventListener('blur', () => {\n      this.playAnimation(0);\n    });\n\n    input.addEventListener('input', (e) => {\n      this.playAnimation(inputField.value.length);\n    });\n\n    /* codeInput.addEventListener('focus', () => {\n      playAnimation(Math.max(codeInput.value.length, 1));\n    }); */\n  }\n\n  // 1st symbol = frame 15\n  // end symbol = frame 165\n  public playAnimation(length: number) {\n    if(!this.animation) return;\n\n    length = Math.min(length, 30);\n    let frame: number;\n    if(length) {\n      frame = Math.round(Math.min(this.max, length) * (165 / this.max) + 11.33);\n\n      if(this.idleAnimation) {\n        this.idleAnimation.stop(true);\n        this.idleAnimation.canvas.style.display = 'none';\n      }\n      \n      this.animation.canvas.style.display = '';\n    } else {\n      /* const cb = (frameNo: number) => {\n        if(frameNo <= 1) { */\n          /* idleAnimation.play();\n          idleAnimation.canvas.style.display = '';\n          animation.canvas.style.display = 'none'; */\n      /*     animation.removeListener('enterFrame', cb);\n        }\n      };\n      animation.addListener('enterFrame', cb); */\n      \n      frame = 0;\n    }\n    //animation.playSegments([1, 2]);\n\n    const direction = this.needFrame > frame ? -1 : 1;\n    //console.log('keydown', length, frame, direction);\n\n    this.animation.setDirection(direction);\n    if(this.needFrame !== 0 && frame === 0) {\n      this.animation.setSpeed(7);\n    }\n    /* let diff = Math.abs(needFrame - frame * direction);\n    if((diff / 20) > 1) animation.setSpeed(diff / 20 | 0); */\n    this.needFrame = frame;\n    \n    this.animation.play();\n\n    /* animation.goToAndStop(15, true); */\n    //animation.goToAndStop(length / max * );\n  }\n\n  public load() {\n    if(this.loadPromise) return this.loadPromise;\n    return this.loadPromise = Promise.all([\n      lottieLoader.loadAnimationFromURL({\n        container: this.container,\n        loop: true,\n        autoplay: true,\n        width: this.size,\n        height: this.size\n      }, 'assets/img/TwoFactorSetupMonkeyIdle.tgs').then(animation => {\n        this.idleAnimation = animation;\n\n        // ! animationIntersector will stop animation instantly\n        if(!this.inputField.value.length) {\n          animation.play();\n        }\n\n        return lottieLoader.waitForFirstFrame(animation);\n      }),\n\n      lottieLoader.loadAnimationFromURL({\n        container: this.container,\n        loop: false,\n        autoplay: false,\n        width: this.size,\n        height: this.size\n      }, 'assets/img/TwoFactorSetupMonkeyTracking.tgs').then(_animation => {\n        this.animation = _animation;\n\n        if(!this.inputField.value.length) {\n          this.animation.canvas.style.display = 'none';\n        }\n\n        this.animation.addEventListener('enterFrame', currentFrame => {\n          //console.log('enterFrame', currentFrame, needFrame);\n          //let currentFrame = Math.round(e.currentTime);\n          \n          if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\n            (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\n            this.animation.setSpeed(1);\n            this.animation.pause();\n          }\n\n          if(currentFrame === 0 && this.needFrame === 0) {\n            //animation.curFrame = 0;\n            \n            if(this.idleAnimation) {\n              this.idleAnimation.canvas.style.display = '';\n              this.idleAnimation.play();\n              this.animation.canvas.style.display = 'none';\n            }\n          }\n        });\n        //console.log(animation.getDuration(), animation.getDuration(true));\n\n        return lottieLoader.waitForFirstFrame(_animation);\n      })\n    ]);\n  }\n\n  public remove() {\n    if(this.animation) this.animation.remove();\n    if(this.idleAnimation) this.idleAnimation.remove();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class CodeInputField extends InputField {\n  constructor(options: InputFieldOptions & {\n    length: number,\n    onFill: (code: number) => void\n  }) {\n    super({\n      plainText: true,\n      ...options\n    });\n\n    const input = this.input as HTMLInputElement;\n    input.type = 'tel';\n    input.setAttribute('required', '');\n    input.autocomplete = 'off';\n\n    let lastLength = 0;\n    this.input.addEventListener('input', (e) => {\n      this.input.classList.remove('error');\n      this.setLabel();\n  \n      const value = this.value.replace(/\\D/g, '').slice(0, options.length);\n      this.setValueSilently(value);\n  \n      const length = this.value.length;\n      if(length === options.length) { // submit code\n        options.onFill(+this.value);\n      } else if(length === lastLength) {\n        return;\n      }\n  \n      lastLength = length;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport mediaSizes from '../helpers/mediaSizes';\nimport { AuthSentCode, AuthSentCodeType, AuthSignIn } from '../layer';\nimport appStateManager from '../lib/appManagers/appStateManager';\nimport apiManager from '../lib/mtproto/mtprotoworker';\nimport Page from './page';\nimport pageIm from './pageIm';\nimport pagePassword from './pagePassword';\nimport pageSignIn from './pageSignIn';\nimport pageSignUp from './pageSignUp';\nimport TrackingMonkey from '../components/monkeys/tracking';\nimport CodeInputField from '../components/codeInputField';\nimport { i18n, LangPackKey } from '../lib/langPack';\nimport { randomLong } from '../helpers/random';\nimport replaceContent from '../helpers/dom/replaceContent';\n\nlet authCode: AuthSentCode.authSentCode = null;\n\nlet headerElement: HTMLHeadElement = null;\nlet sentTypeElement: HTMLParagraphElement = null;\nlet codeInput: HTMLInputElement;\n\nlet onFirstMount = (): Promise<any> => {\n  const CODELENGTH = (authCode.type as AuthSentCodeType.authSentCodeTypeApp).length;\n\n  const codeInputField = new CodeInputField({\n    label: 'Code',\n    name: randomLong(),\n    length: CODELENGTH,\n    onFill: (code) => {\n      submitCode('' + code);\n    }\n  });\n\n  codeInput = codeInputField.input as HTMLInputElement;\n\n  page.pageEl.querySelector('.input-wrapper').append(codeInputField.container);\n\n  const editButton = page.pageEl.querySelector('.phone-edit') as HTMLElement;\n\n  editButton.addEventListener('click', function() {\n    return pageSignIn.mount();\n  });\n\n  const cleanup = () => {\n    setTimeout(() => {\n      monkey.remove();\n    }, 300);\n  };\n\n  const submitCode = (code: string) => {\n    codeInput.setAttribute('disabled', 'true');\n\n    const params: AuthSignIn = {\n      phone_number: authCode.phone_number,\n      phone_code_hash: authCode.phone_code_hash,\n      phone_code: code\n    };\n\n    //console.log('invoking auth.signIn with params:', params);\n\n    apiManager.invokeApi('auth.signIn', params, {ignoreErrors: true})\n    .then((response) => {\n      //console.log('auth.signIn response:', response);\n      \n      switch(response._) {\n        case 'auth.authorization':\n          apiManager.setUserAuth(response.user.id);\n\n          pageIm.mount();\n          cleanup();\n          break;\n        case 'auth.authorizationSignUpRequired':\n          //console.log('Registration needed!');\n\n          pageSignUp.mount({\n            'phone_number': authCode.phone_number,\n            'phone_code_hash': authCode.phone_code_hash\n          });\n\n          cleanup();\n          break;\n        /* default:\n          codeInput.innerText = response._;\n          break; */\n      }\n    }).catch(async(err) => {\n      let good = false;\n      switch(err.type) {\n        case 'SESSION_PASSWORD_NEEDED':\n          //console.warn('pageAuthCode: SESSION_PASSWORD_NEEDED');\n          good = true;\n          err.handled = true;\n          await pagePassword.mount();\n          setTimeout(() => {\n            codeInput.value = '';\n          }, 300);\n          break;\n        case 'PHONE_CODE_EXPIRED':\n          codeInput.classList.add('error');\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_EXPIRED'));\n          break;\n        case 'PHONE_CODE_EMPTY':\n        case 'PHONE_CODE_INVALID':\n          codeInput.classList.add('error');\n          replaceContent(codeInputField.label, i18n('PHONE_CODE_INVALID'));\n          break;\n        default:\n          codeInputField.label.innerText = err.type;\n          break;\n      }\n\n      if(!good) {\n        codeInputField.select();\n      }\n\n      codeInput.removeAttribute('disabled');\n    });\n  };\n\n  const imageDiv = page.pageEl.querySelector('.auth-image') as HTMLDivElement;\n  const size = mediaSizes.isMobile ? 100 : 166;\n  const monkey = new TrackingMonkey(codeInputField, size);\n  imageDiv.append(monkey.container);\n  return monkey.load();\n};\n\nconst page = new Page('page-authCode', true, onFirstMount, (_authCode: typeof authCode) => {\n  authCode = _authCode;\n\n  if(!headerElement) {\n    headerElement = page.pageEl.getElementsByClassName('phone')[0] as HTMLHeadElement;\n    sentTypeElement = page.pageEl.getElementsByClassName('sent-type')[0] as HTMLParagraphElement;\n  } else {\n    codeInput.value = '';\n\n    const evt = document.createEvent('HTMLEvents');\n    evt.initEvent('input', false, true);\n    codeInput.dispatchEvent(evt);\n  }\n\n  headerElement.innerText = authCode.phone_number;\n  let key: LangPackKey, args: any[];\n  switch(authCode.type._) {\n    case 'auth.sentCodeTypeSms':\n      key = 'Login.Code.SentSms';\n      break;\n    case 'auth.sentCodeTypeApp': \n      key = 'Login.Code.SentInApp';\n      break;\n    case 'auth.sentCodeTypeCall': \n      key = 'Login.Code.SentCall';\n      break;\n    default:\n      key = 'Login.Code.SentUnknown';\n      args = [authCode.type._];\n      break;\n  }\n\n  replaceContent(sentTypeElement, i18n(key, args));\n\n  appStateManager.pushToState('authState', {_: 'authStateAuthCode', sentCode: _authCode});\n}, () => {\n  codeInput.focus();\n});\n\nexport default page;\n"],"sourceRoot":""}