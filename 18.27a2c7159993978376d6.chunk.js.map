{"version":3,"sources":["webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/pages/pageSignIn.ts"],"names":["ScrollableBase","el","logPrefix","container","document","createElement","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","this","classList","add","log","Error","Array","from","children","forEach","c","append","window","addEventListener","onScroll","passive","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","super","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","scrollHeight","maxScrollTop","clientHeight","setListeners","elements","padding","prepend","Math","round","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","e","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","options","label","restriction","disabled","toggleDisability","input","span","type","name","id","checked","stateKey","getState","then","state","stateValue","stateValues","indexOf","setValueSilently","value","setByKey","text","textArgs","toggle","box","checkSvg","createElementNS","setAttributeNS","use","bg","border","withRipple","undefined","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","setAttribute","removeAttribute","findUpTag","tag","closest","btnQr","btnNext","page","test","push","phoneCode","code","emoji","pattern","console","countries","filter","sort","a","b","localeCompare","lastCountrySelected","inputWrapper","countryInputField","plainText","countryInput","autocomplete","selectWrapper","arrowDown","selectList","appendChild","initSelect","liArr","split","li","spanEmoji","kek","wrapRichText","outerHTML","innerText","button","target","tagName","selectCountryByTarget","countryName","childNodes","textContent","querySelector","find","telEl","lastValue","hidePicker","setTimeout","focus","hideTimeout","style","display","clearTimeout","remove","offsetWidth","select","pageEl","parentElement","mouseDownHandlerAttached","onMouseDown","removeEventListener","ctrlKey","key","_value","toLowerCase","matches","good","length","cancelBubble","preventDefault","blur","pasted","telInputField","loadLottieWorkers","formatted","country","abs","setLabel","replace","o","visibility","metaKey","shiftKey","onSubmit","signedCheckboxField","keepSigned","pushToState","toggleStorage","storage","isAvailable","phone_number","invokeApi","api_id","api_hash","hash","settings","_","m","default","mount","Object","assign","catch","err","setError","error","h4","subtitle","nearestDcResult","dcs","done","this_dc","promise","nearest_dc","getNetworker","Promise","resolve","g","dcId","shift","fileDownload","finally","includes"],"mappings":"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","file":"18.27a2c7159993978376d6.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport { logger, LogTypes } from \"../lib/logger\";\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\n/*\nvar el = $0;\nvar height = 0;\nvar checkUp = false;\n\ndo {\n  height += el.scrollHeight;\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\nconsole.log(height);\n*/\n\n/*\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\n\t//_el.style.display = '';\t\n\t//return;\n\n\tlet el = _el.parentElement;\n\tlet height = el.scrollHeight;\n\tlet width = el.scrollWidth;\n\tel.style.width = width + 'px';\n\tel.style.height = height + 'px';\n\t_el.style.display = 'none';\n});\n*/\n\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\nconst scrollsIntersector = new IntersectionObserver(entries => {\n  for(let entry of entries) {\n    const scrollable = scrollables.get(entry.target as HTMLElement);\n\n    if(entry.isIntersecting) {\n      scrollable.isVisible = true;\n    } else {\n      scrollable.isVisible = false;\n\n      if(!isInDOM(entry.target)) {\n        scrollsIntersector.unobserve(scrollable.container);\n        scrollables.delete(scrollable.container);\n      }\n    }\n  }\n}); */\n\nexport class ScrollableBase {\n  protected log: ReturnType<typeof logger>;\n\n  public onScrollMeasure: number = 0;\n  protected onScroll: () => void;\n\n  public isHeavyAnimationInProgress = false;\n  protected needCheckAfterAnimation = false;\n\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\n    this.container.classList.add('scrollable');\n\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\n\n    if(el) {\n      Array.from(el.children).forEach(c => this.container.append(c));\n\n      el.append(this.container);\n    }\n    //this.onScroll();\n  }\n\n  protected setListeners() {\n    window.addEventListener('resize', this.onScroll, {passive: true});\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\n\n    useHeavyAnimationCheck(() => {\n      this.isHeavyAnimationInProgress = true;\n\n      if(this.onScrollMeasure) {\n        this.needCheckAfterAnimation = true;\n        window.cancelAnimationFrame(this.onScrollMeasure);\n      }\n    }, () => {\n      this.isHeavyAnimationInProgress = false;\n\n      if(this.needCheckAfterAnimation) {\n        this.onScroll();\n        this.needCheckAfterAnimation = false;\n      }\n    });\n  }\n\n  public append(element: HTMLElement) {\n    this.container.append(element);\n  }\n\n  public scrollIntoViewNew(\n    element: HTMLElement,\n    position: ScrollLogicalPosition,\n    margin?: number,\n    maxDistance?: number,\n    forceDirection?: FocusDirection,\n    forceDuration?: number,\n    axis?: 'x' | 'y'\n  ) {\n    //return Promise.resolve();\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\n  }\n}\n\nexport type SliceSides = 'top' | 'bottom';\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\n\nexport default class Scrollable extends ScrollableBase {\n  public splitUp: HTMLElement;\n  public padding: HTMLElement;\n  \n  public onAdditionalScroll: () => void = null;\n  public onScrolledTop: () => void = null;\n  public onScrolledBottom: () => void = null;\n  \n  public lastScrollTop: number = 0;\n  public lastScrollDirection: number = 0;\n\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\n\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\n    super(el, logPrefix);\n\n    /* if(withPaddingContainer) {\n      this.padding = document.createElement('div');\n      this.padding.classList.add('scrollable-padding');\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\n      this.container.append(this.padding);\n    } */\n\n    this.container.classList.add('scrollable-y');\n    this.setListeners();\n  }\n\n  public setVirtualContainer(el?: HTMLElement) {\n    this.splitUp = el;\n    this.log('setVirtualContainer:', el, this);\n  }\n\n  public onScroll = () => {\n    //if(this.debug) {\n      //this.log('onScroll call', this.onScrollMeasure);\n    //}\n\n    //return;\n\n    if(this.isHeavyAnimationInProgress) {\n      if(this.onScrollMeasure) {\n        window.cancelAnimationFrame(this.onScrollMeasure);\n      }\n\n      this.needCheckAfterAnimation = true;\n      return;\n    }\n\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\n      this.onScrollMeasure = 0;\n\n      const scrollTop = this.container.scrollTop;\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\n      this.lastScrollTop = scrollTop;\n\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\n        this.onAdditionalScroll();\n      }\n      \n      if(this.checkForTriggers) {\n        this.checkForTriggers();\n      }\n    });\n  };\n\n  public checkForTriggers = () => {\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\n\n    if(this.isHeavyAnimationInProgress) {\n      this.onScroll();\n      return;\n    }\n\n    const scrollHeight = this.container.scrollHeight;\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\n      return;\n    }\n\n    const clientHeight = this.container.clientHeight;\n    const maxScrollTop = scrollHeight - clientHeight;\n    const scrollTop = this.lastScrollTop;\n\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\n\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\n      this.onScrolledTop();\n    }\n\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\n      this.onScrolledBottom();\n    }\n  };\n\n  public prepend(...elements: HTMLElement[]) {\n    (this.splitUp || this.padding || this.container).prepend(...elements);\n  }\n\n  public append(...elements: HTMLElement[]) {\n    (this.splitUp || this.padding || this.container).append(...elements);\n  }\n\n  public getDistanceToEnd() {\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\n  }\n\n  get isScrolledDown() {\n    return this.getDistanceToEnd() <= 1;\n  }\n\n  set scrollTop(y: number) {\n    this.container.scrollTop = y;\n  }\n  \n  get scrollTop() {\n    //this.log.trace('get scrollTop');\n    return this.container.scrollTop;\n  }\n  \n  get scrollHeight() {\n    return this.container.scrollHeight;\n  }\n}\n\nexport class ScrollableX extends ScrollableBase {\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\n    super(el, logPrefix, container);\n\n    this.container.classList.add('scrollable-x');\n\n    if(!isTouchSupported) {\n      const scrollHorizontally = (e: any) => {\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\n          this.container.scrollLeft += e.deltaY / 4;\n          cancelEvent(e);\n        }\n      };\n      \n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport { getDeepProperty } from \"../helpers/object\";\nimport { ripple } from \"./ripple\";\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\n\nexport type CheckboxFieldOptions = {\n  text?: LangPackKey,\n  textArgs?: any[],\n  name?: string, \n  round?: boolean, \n  toggle?: boolean,\n  stateKey?: string,\n  stateValues?: any[],\n  disabled?: boolean,\n  checked?: boolean,\n  restriction?: boolean,\n  withRipple?: boolean,\n  withHover?: boolean,\n};\nexport default class CheckboxField {\n  public input: HTMLInputElement;\n  public label: HTMLLabelElement;\n  public span: HTMLSpanElement;\n\n  constructor(options: CheckboxFieldOptions = {}) {\n    const label = this.label = document.createElement('label');\n    label.classList.add('checkbox-field');\n\n    if(options.restriction) {\n      label.classList.add('checkbox-field-restriction');\n    }\n\n    if(options.round) {\n      label.classList.add('checkbox-field-round');\n    }\n\n    if(options.disabled) {\n      this.toggleDisability(true);\n    }\n\n    const input = this.input = document.createElement('input');\n    input.type = 'checkbox';\n    if(options.name) {\n      input.id = 'input-' + options.name;\n    }\n\n    if(options.checked) {\n      input.checked = true;\n    }\n\n    if(options.stateKey) {\n      appStateManager.getState().then(state => {\n        const stateValue = getDeepProperty(state, options.stateKey);\n        let checked: boolean;\n        if(options.stateValues) {\n          checked = options.stateValues.indexOf(stateValue) === 1;\n        } else {\n          checked = stateValue;\n        }\n\n        this.setValueSilently(checked);\n\n        input.addEventListener('change', () => {\n          let value: any;\n          if(options.stateValues) {\n            value = options.stateValues[input.checked ? 1 : 0];\n          } else {\n            value = input.checked;\n          }\n\n          appStateManager.setByKey(options.stateKey, value);\n        });\n      });\n    }\n\n    let span: HTMLSpanElement;\n    if(options.text) {\n      span = this.span = document.createElement('span');\n      span.classList.add('checkbox-caption');\n      _i18n(span, options.text, options.textArgs);\n    } else {\n      label.classList.add('checkbox-without-caption');\n    }\n\n    label.append(input);\n\n    if(options.toggle) {\n      label.classList.add('checkbox-field-toggle');\n\n      const toggle = document.createElement('div');\n      toggle.classList.add('checkbox-toggle');\n      label.append(toggle);\n    } else {\n      const box = document.createElement('div');\n      box.classList.add('checkbox-box');\n  \n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      checkSvg.classList.add('checkbox-box-check');\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\n      use.setAttributeNS(null, 'href', '#check');\n      use.setAttributeNS(null, 'x', '-1');\n      checkSvg.append(use);\n  \n      const bg = document.createElement('div');\n      bg.classList.add('checkbox-box-background');\n  \n      const border = document.createElement('div');\n      border.classList.add('checkbox-box-border');\n  \n      box.append(border, bg, checkSvg);\n  \n      label.append(box);\n    }\n\n    if(span) {\n      label.append(span);\n    }\n\n    if(options.withRipple) {\n      label.classList.add('checkbox-ripple', 'hover-effect');\n      ripple(label, undefined, undefined, true);\n      //label.prepend(input);\n    } else if(options.withHover) {\n      label.classList.add('hover-effect');\n    }\n  }\n\n  get checked() {\n    return this.input.checked;\n  }\n\n  set checked(checked: boolean) {\n    this.setValueSilently(checked);\n\n    const event = new Event('change', {bubbles: true, cancelable: true});\n    this.input.dispatchEvent(event);\n  }\n\n  public setValueSilently(checked: boolean) {\n    this.input.checked = checked;\n  }\n\n  public toggleDisability(disable: boolean) {\n    this.label.classList.toggle('checkbox-disabled', disable);\n    return () => this.toggleDisability(!disable);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\n  if(disable) {\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\n  } else {\n    elements.forEach(el => el.removeAttribute('disabled'));\n  }\n\n  return () => toggleDisability(elements, !disable);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function findUpTag(el: any, tag: string): HTMLElement {\n  return el.closest(tag);\n  /* if(el.tagName === tag) return el; // 03.02.2020\n\n  while(el.parentElement) {\n    el = el.parentElement;\n    if(el.tagName === tag) \n      return el;\n  }\n  return null; */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { formatPhoneNumber, putPreloader } from \"../components/misc\";\nimport Scrollable from '../components/scrollable';\nimport Countries, { Country as _Country } from \"../countries\";\nimport appStateManager from \"../lib/appManagers/appStateManager\";\nimport apiManager from \"../lib/mtproto/mtprotoworker\";\nimport { RichTextProcessor } from '../lib/richtextprocessor';\nimport Page from \"./page\";\nimport InputField from \"../components/inputField\";\nimport CheckboxField from \"../components/checkboxField\";\nimport Button from \"../components/button\";\nimport { isAppleMobile } from \"../helpers/userAgent\";\nimport fastSmoothScroll from \"../helpers/fastSmoothScroll\";\nimport { isTouchSupported } from \"../helpers/touchSupport\";\nimport App from \"../config/app\";\nimport Modes from \"../config/modes\";\nimport { _i18n, i18n } from \"../lib/langPack\";\nimport lottieLoader from \"../lib/lottieLoader\";\nimport { ripple } from \"../components/ripple\";\nimport findUpTag from \"../helpers/dom/findUpTag\";\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\nimport { randomLong } from \"../helpers/random\";\nimport AppStorage from \"../lib/storage\";\nimport CacheStorageController from \"../lib/cacheStorage\";\nimport pageSignQR from \"./pageSignQR\";\nimport getLanguageChangeButton from \"../components/languageChangeButton\";\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\nimport { attachClickEvent } from \"../helpers/dom/clickEvent\";\nimport replaceContent from \"../helpers/dom/replaceContent\";\nimport toggleDisability from \"../helpers/dom/toggleDisability\";\n\ntype Country = _Country & {\n  li?: HTMLLIElement[]\n};\n\n//import _countries from '../countries_pretty.json';\nlet btnNext: HTMLButtonElement = null, btnQr: HTMLButtonElement;\n\nlet onFirstMount = () => {\n  if(Modes.test) {\n    Countries.push({\n      name: 'Test Country',\n      phoneCode: '999 66',\n      code: 'TC',\n      emoji: '🤔',\n      pattern: '999 66 XXX XX'\n    });\n  \n    console.log('Added test country to list!');\n  }\n\n  //const countries: Country[] = _countries.default.filter(c => c.emoji);\n  const countries: Country[] = Countries.filter(c => c.emoji).sort((a, b) => a.name.localeCompare(b.name));\n\n  let lastCountrySelected: Country = null;\n\n  const inputWrapper = document.createElement('div');\n  inputWrapper.classList.add('input-wrapper');\n\n  const countryInputField = new InputField({\n    label: 'Login.CountrySelectorLabel',\n    name: randomLong(),\n    plainText: true\n  });\n\n  countryInputField.container.classList.add('input-select');\n\n  const countryInput = countryInputField.input as HTMLInputElement;\n  countryInput.autocomplete = randomLong();\n\n  const selectWrapper = document.createElement('div');\n  selectWrapper.classList.add('select-wrapper', 'z-depth-3', 'hide');\n\n  const arrowDown = document.createElement('span');\n  arrowDown.classList.add('arrow', 'arrow-down');\n  countryInputField.container.append(arrowDown);\n\n  const selectList = document.createElement('ul');\n  selectWrapper.appendChild(selectList);\n\n  const scroll = new Scrollable(selectWrapper);\n\n  let initSelect = () => {\n    initSelect = null;\n\n    countries.forEach((c) => {\n      const emoji = c.emoji;\n\n      const liArr: Array<HTMLLIElement> = [];\n      c.phoneCode.split(' and ').forEach((phoneCode: string) => {\n        const li = document.createElement('li');\n        const spanEmoji = document.createElement('span');\n\n        const kek = RichTextProcessor.wrapRichText(emoji);\n\n        li.appendChild(spanEmoji);\n        spanEmoji.outerHTML = kek;\n  \n        li.append(c.name);\n\n        const span = document.createElement('span');\n        span.classList.add('phone-code');\n        span.innerText = '+' + phoneCode;\n        li.appendChild(span);\n\n        liArr.push(li);\n        selectList.append(li);\n      });\n\n      c.li = liArr;\n    });\n    \n    selectList.addEventListener('mousedown', (e) => {\n      if(e.button !== 0) { // other buttons but left shall not pass\n        return;\n      }\n      \n      let target = e.target as HTMLElement;\n      if(target.tagName !== 'LI') target = findUpTag(target, 'LI');\n      \n      selectCountryByTarget(target);\n      //console.log('clicked', e, countryName, phoneCode);\n    });\n\n    countryInputField.container.appendChild(selectWrapper);\n  };\n\n  const selectCountryByTarget = (target: HTMLElement) => {\n    const countryName = target.childNodes[1].textContent;//target.innerText.split('\\n').shift();\n    const phoneCode = target.querySelector<HTMLElement>('.phone-code').innerText;\n\n    countryInput.value = countryName;\n    lastCountrySelected = countries.find(c => c.name === countryName);\n    \n    telEl.value = lastValue = phoneCode;\n    hidePicker();\n    setTimeout(() => telEl.focus(), 0);\n  };\n  \n  initSelect();\n\n  let hideTimeout: number;\n\n  countryInput.addEventListener('focus', function(this: typeof countryInput, e) {\n    if(initSelect) {\n      initSelect();\n    } else {\n      countries.forEach((c) => {\n        c.li.forEach(li => li.style.display = '');\n      });\n    }\n\n    clearTimeout(hideTimeout);\n    hideTimeout = undefined;\n\n    selectWrapper.classList.remove('hide');\n    void selectWrapper.offsetWidth; // reflow\n    selectWrapper.classList.add('active');\n\n    countryInputField.select();\n\n    fastSmoothScroll(page.pageEl.parentElement.parentElement, countryInput, 'start', 4);\n\n    setTimeout(() => {\n      if(!mouseDownHandlerAttached) {\n        document.addEventListener('mousedown', onMouseDown, {capture: true});\n        mouseDownHandlerAttached = true;\n      }\n    }, 0);\n  });\n\n  let mouseDownHandlerAttached = false;\n  const onMouseDown = (e: MouseEvent) => {\n    if(findUpClassName(e.target, 'input-select')) {\n      return;\n    }\n    if(e.target === countryInput) {\n      return;\n    }\n\n    hidePicker();\n    document.removeEventListener('mousedown', onMouseDown, {capture: true});\n    mouseDownHandlerAttached = false;\n  };\n\n  const hidePicker = () => {\n    if(hideTimeout !== undefined) return;\n    selectWrapper.classList.remove('active');\n    hideTimeout = window.setTimeout(() => {\n      selectWrapper.classList.add('hide');\n      hideTimeout = undefined;\n    }, 200);\n  };\n  /* false && countryInput.addEventListener('blur', function(this: typeof countryInput, e) {\n    hidePicker();\n    \n    e.cancelBubble = true;\n  }, {capture: true}); */\n\n  countryInput.addEventListener('keyup', function(this: typeof countryInput, e) {\n    if(e.ctrlKey || e.key === 'Control') return false;\n\n    //let i = new RegExp('^' + this.value, 'i');\n    let _value = this.value.toLowerCase();\n    let matches: Country[] = [];\n    countries.forEach((c) => {\n      let good = c.name.toLowerCase().indexOf(_value) !== -1/*  === 0 */;//i.test(c.name);\n\n      c.li.forEach(li => li.style.display = good ? '' : 'none');\n      if(good) matches.push(c);\n    });\n\n    // Код ниже автоматически выберет страну если она осталась одна при поиске\n    /* if(matches.length === 1 && matches[0].li.length === 1) {\n      if(matches[0].name === lastCountrySelected) return false;\n      //console.log('clicking', matches[0]);\n\n      var clickEvent = document.createEvent('MouseEvents');\n      clickEvent.initEvent('mousedown', true, true);\n      matches[0].li[0].dispatchEvent(clickEvent);\n      return false;\n    } else  */if(matches.length === 0) {\n      countries.forEach((c) => {\n        c.li.forEach(li => li.style.display = '');\n      });\n    } else if(matches.length === 1 && e.key === 'Enter') {\n      selectCountryByTarget(matches[0].li[0]);\n    }\n  });\n\n  arrowDown.addEventListener('mousedown', function(this: typeof arrowDown, e) {\n    e.cancelBubble = true;\n    e.preventDefault();\n    if(countryInput.matches(':focus')) countryInput.blur();\n    else countryInput.focus();\n  });\n\n  let pasted = false;\n  let lastValue = '';\n  \n  const telInputField = new InputField({\n    label: 'Login.PhoneLabel',\n    plainText: true,\n    name: 'phone'\n  });\n  let telEl = telInputField.input as HTMLInputElement;\n  telEl.type = 'tel';\n  telEl.autocomplete = 'rr55RandomRR55';\n  telEl.addEventListener('input', function(this: typeof telEl, e) {\n    //console.log('input', this.value);\n    this.classList.remove('error');\n\n    lottieLoader.loadLottieWorkers();\n\n    const value = this.value;\n    const diff = Math.abs(value.length - lastValue.length);\n    if(diff > 1 && !pasted && isAppleMobile) {\n      this.value = lastValue + value;\n    }\n\n    pasted = false;\n\n    telInputField.setLabel();\n\n    let formatted: string, country: Country;\n    if(this.value.replace(/\\++/, '+') === '+') {\n      this.value = '+';\n    } else {\n      const o = formatPhoneNumber(this.value);\n      formatted = o.formatted;\n      country = o.country;\n      this.value = lastValue = formatted ? '+' + formatted : '';\n    }\n\n    //console.log(formatted, country);\n\n    let countryName = country ? country.name : ''/* 'Unknown' */;\n    if(countryName !== countryInput.value && (!lastCountrySelected || !country || lastCountrySelected.phoneCode !== country.phoneCode)) {\n      countryInput.value = countryName;\n      lastCountrySelected = country;\n    }\n\n    //if(country && (this.value.length - 1) >= (country.pattern ? country.pattern.length : 9)) {\n    if(country || (this.value.length - 1) > 1) {\n      btnNext.style.visibility = '';\n    } else {\n      btnNext.style.visibility = 'hidden';\n    }\n  });\n\n  telEl.addEventListener('paste', (e) => {\n    pasted = true;\n    //console.log('paste', telEl.value);\n  });\n\n  /* telEl.addEventListener('change', (e) => {\n    console.log('change', telEl.value);\n  }); */\n\n  telEl.addEventListener('keypress', function(this: typeof telEl, e) {\n    //console.log('keypress', this.value);\n    if(!btnNext.style.visibility &&/* this.value.length >= 9 && */ e.key === 'Enter') {\n      return onSubmit();\n    } else if(/\\D/.test(e.key) && !(e.metaKey || e.ctrlKey) && !(e.key === '+' && e.shiftKey/*  && !this.value */)) {\n      e.preventDefault();\n      return false;\n    }\n  });\n\n  /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n    this.removeAttribute('readonly'); // fix autocomplete\n  });*/\n\n  const signedCheckboxField = new CheckboxField({\n    text: 'Login.KeepSigned', \n    name: 'keepSession',\n    withRipple: true\n  });\n\n  signedCheckboxField.input.addEventListener('change', () => {\n    const keepSigned = signedCheckboxField.checked;\n    appStateManager.pushToState('keepSigned', keepSigned);\n    \n    AppStorage.toggleStorage(keepSigned);\n    CacheStorageController.toggleStorage(keepSigned);\n    apiManager.toggleStorage(keepSigned);\n  });\n\n  appStateManager.getState().then(state => {\n    if(!appStateManager.storage.isAvailable()) {\n      signedCheckboxField.checked = false;\n      signedCheckboxField.label.classList.add('checkbox-disabled');\n    } else {\n      signedCheckboxField.checked = state.keepSigned;\n    }\n  });\n\n  btnNext = Button('btn-primary btn-color-primary', {text: 'Login.Next'});\n  btnNext.style.visibility = 'hidden';\n\n  const onSubmit = (e?: Event) => {\n    if(e) {\n      cancelEvent(e);\n    }\n\n    const toggle = toggleDisability([/* telEl, countryInput,  */btnNext, btnQr], true);\n\n    replaceContent(btnNext, i18n('PleaseWait'));\n    putPreloader(btnNext);\n\n    //return;\n\n    let phone_number = telEl.value;\n    apiManager.invokeApi('auth.sendCode', {\n      phone_number: phone_number,\n      api_id: App.id,\n      api_hash: App.hash,\n      settings: {\n        _: 'codeSettings' // that's how we sending Type\n      }\n      //lang_code: navigator.language || 'en'\n    }).then((code) => {\n      //console.log('got code', code);\n\n      import('./pageAuthCode').then(m => m.default.mount(Object.assign(code, {phone_number: phone_number})));\n    }).catch(err => {\n      toggle();\n\n      switch(err.type) {\n        case 'PHONE_NUMBER_INVALID':\n          telInputField.setError();\n          replaceContent(telInputField.label, i18n('Login.PhoneLabelInvalid'));\n          telEl.classList.add('error');\n          replaceContent(btnNext, i18n('Login.Next'));\n          break;\n        default:\n          console.error('auth.sendCode error:', err);\n          btnNext.innerText = err.type;\n          break;\n      }\n    });\n  };\n\n  attachClickEvent(btnNext, onSubmit);\n\n  btnQr = Button('btn-primary btn-secondary btn-primary-transparent primary', {text: 'Login.QR.Login'});\n\n  let qrMounted = false;\n  btnQr.addEventListener('click', () => {\n    pageSignQR.mount();\n    /* const promise = import('./pageSignQR');\n    btnQr.disabled = true;\n\n    let preloaderDiv: HTMLElement;\n    if(!qrMounted) {\n      preloaderDiv = putPreloader(btnQr);\n      qrMounted = true;\n    }\n\n    promise.then(module => {\n      module.default.mount();\n\n      setTimeout(() => {\n        btnQr.removeAttribute('disabled');\n        if(preloaderDiv) {\n          preloaderDiv.remove();\n        }\n      }, 200);\n    }); */\n  });\n\n  inputWrapper.append(countryInputField.container, telInputField.container, signedCheckboxField.label, btnNext, btnQr);\n\n  const h4 = document.createElement('h4');\n  _i18n(h4, 'Login.Title');\n\n  const subtitle = document.createElement('div');\n  subtitle.classList.add('subtitle');\n  _i18n(subtitle, 'Login.StartText');\n\n  page.pageEl.querySelector('.container').append(h4, subtitle, inputWrapper);\n\n  let tryAgain = () => {\n    apiManager.invokeApi('help.getNearestDc').then((nearestDcResult) => {\n      const dcs = [1, 2, 3, 4, 5];\n      const done: number[] = [nearestDcResult.this_dc];\n\n      let promise: Promise<any>;\n      if(nearestDcResult.nearest_dc !== nearestDcResult.this_dc) {\n        promise = apiManager.getNetworker(nearestDcResult.nearest_dc).then(() => {\n          done.push(nearestDcResult.nearest_dc)\n        });\n      }\n\n      (promise || Promise.resolve()).then(() => {\n        const g = () => {\n          const dcId = dcs.shift();\n          if(!dcId) return;\n\n          setTimeout(() => { // * если одновременно запросить все нетворкеры, не будет проходить запрос на код\n            apiManager.getNetworker(dcId, {fileDownload: true}).finally(g);\n          }, done.includes(dcId) ? 0 : 3000);\n        };\n        \n        g();\n      });\n      \n      return nearestDcResult;\n    }).then((nearestDcResult) => {\n      let country = countries.find((c) => c.code === nearestDcResult.country);\n      if(country) {\n        if(!countryInput.value.length && !telEl.value.length) {\n          countryInput.value = country.name;\n          lastCountrySelected = country;\n          telEl.value = lastValue = '+' + country.phoneCode.split(' and ').shift();\n        }\n      }\n  \n      //console.log('woohoo', nearestDcResult, country);\n    })//.catch(tryAgain);\n  };\n\n  if(!isTouchSupported) {\n    setTimeout(() => {\n      telEl.focus();\n    }, 0);\n  }\n\n  getLanguageChangeButton(inputWrapper);\n\n  tryAgain();\n};\n\nconst page = new Page('page-sign', true, onFirstMount, () => {\n  if(btnNext) {\n    replaceContent(btnNext, i18n('Login.Next'));\n    ripple(btnNext, undefined, undefined, true);\n    btnNext.removeAttribute('disabled');\n  }\n\n  if(btnQr) {\n    btnQr.removeAttribute('disabled');\n  }\n\n  appStateManager.pushToState('authState', {_: 'authStateSignIn'});\n});\n\nexport default page;\n"],"sourceRoot":""}